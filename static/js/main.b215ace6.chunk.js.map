{"version":3,"sources":["State.js","Context.js","widgets/BackButton.js","widgets/ContainerHeader.js","widgets/Container.js","widgets/Row.js","widgets/Button.js","widgets/ListItem.js","widgets/Text.js","js/Compiler.worker.js","js/EthStateMachine/index.js","Theme.js","js/TxWrapper.js","components/console/Console.js","widgets/AutoCompleteField.js","components/main/scripts/CreateScript.js","widgets/LabeledForm.js","components/main/tools/TrieViz.js","components/main/tools/Ethpkg.js","widgets/Clickable.js","widgets/Tab.js","widgets/Pagination.js","widgets/List.js","widgets/Tabs.js","components/main/tools/Tools.js","widgets/Badge.js","components/navigation/NavItem.js","components/navigation/TopNavigation.js","components/status/StatusItem.js","components/status/StatusItems/CurrentBlockNumber.js","widgets/EthValue.js","components/status/StatusItems/GasPrice.js","components/status/StatusItems/HardforkName.js","components/status/StatusItems/NetworkId.js","widgets/Modal.js","widgets/Column.js","components/status/StatusItems/RpcServer.js","components/status/StatusItems/Currency.js","widgets/Address.js","components/status/StatusItems/Signer.js","components/status/StatusItems/StateTime.js","components/status/GlobalToggle.js","widgets/SyncState.js","components/status/StatusItems/Syncing.js","components/status/StatusBar.js","widgets/DateField.js","widgets/Pill.js","widgets/Gas.js","components/main/blocks/BlockListItem.js","js/DataProvider.js","components/ProviderList.js","widgets/Connectivity.js","components/main/blocks/BlockList.js","widgets/LabeledField.js","widgets/BlockTime.js","components/main/transactions/TransactionItem.js","components/main/transactions/TransactionList.js","widgets/NavButton.js","components/main/accounts/AccountListItem.js","js/Storage.js","js/utils.js","components/main/accounts/AccountsList.js","components/main/contracts/ContractListItem.js","components/main/contracts/Contracts.js","widgets/Select.js","widgets/Switch.js","js/remote.js","components/main/contracts/Compiler.js","widgets/FileChooser.js","js/TreeWalker.js","components/main/contracts/ContractCode/JsonTreeView.js","components/main/contracts/ContractCode/CodeTab.js","components/main/contracts/ContractCode/ContractCode.js","components/main/contracts/CreateContractView.js","components/main/accounts/AccountDetails.js","components/main/contracts/TxBrowser/TransactionItem.js","components/main/contracts/TxBrowser/ContractTransactionBrowser.js","widgets/Overlay.js","components/main/contracts/ContractState.js","components/main/contracts/InteractiveConsole/ContractConsole.js","components/main/contracts/ContractDetails.js","widgets/Form.js","widgets/TextField.js","components/main/transactions/SendTransaction.js","components/main/blocks/BlockDetails.js","components/main/transactions/TransactionDetails.js","components/main/scripts/ScriptList.js","components/main/settings/Settings.js","widgets/InplaceEdit.js","components/main/addresses/AddressListItem.js","components/main/addresses/AddressList.js","components/main/network/Network.js","widgets/CopyClipboardButton.js","widgets/CommandLineSnippet.js","components/main/client/Client.js","components/main/grid/GridAPI.js","components/main/workflows/WorkflowListItem.js","components/main/workflows/JobListItem.js","components/main/workflows/Workflows.js","components/main/workflows/WorkflowDetails.js","components/main/workflows/JobDetails.js","AppliedRoute.js","Routes.js","App.js","serviceWorker.js","widgets/Resizable.js","components/nano/Nano.js","index.js","widgets/Spinner.js","widgets/Error.js","widgets/Tree.js"],"names":["globalState","theme","alias","time","badge","dangerous","isConnected","selectedProvider","connectionInterval","providers","name","url","provider","undefined","navItems","label","route","exclude","statusBarItems","aliases","StoreContext","React","createContext","withNewContext","WrappedComponent","state","Provider","value","this","props","Component","withGlobalState","Consumer","val","global","withRouter","history","style","Button","onClick","goBack","icon","ContainerHeader","title","Row","justifyContent","alignItems","BackButton","fontSize","color","alignSelf","Container","header","isCard","useTheme","className","flex","display","flexDirection","padding","maxHeight","overflowY","backgroundColor","container","margin","borderRadius","headerStyle","children","handleOnClick","e","console","warn","stopPropagation","preventDefault","enabled","iconColor","paddingTop","paddingBottom","cursor","foreground","disabled","opacity","icons","pulse","ListItem","clickable","to","push","borderTop","marginBottom","Text","text","module","exports","Worker","__webpack_public_path__","EthStateMachine","setAccount","vm","address","nonce","a","putAccount","Account","balance","getAccount","log","runTx","tx","txData","_hex","gasLimit","gasPrice","data","TxWrapper","from","result","runTxSafe","sender","transactions","contractAddressOriginal","storage","length","createdAddress","VM","pStateManager","bind","stateManager","opcodes","opcodeListener","event","opcode","fee","stack","splice","reverse","key","toString","on","off","execResult","gasUsedTotal","contractAddress","ethutil","Error","gasUsed","gasRefund","exceptionError","logs","returnValue","error","errorType","parseInt","hash","dark","Themes","light","topNav","item","statusBar","field","fields","allowLess","default","Buffer","allowZero","BN","imul","iadd","flattenObject","ob","toReturn","i","hasOwnProperty","flatObject","x","Console","handleFocus","autoCompleteField","focus","handleBlur","blur","handleEnter","input","context","eval","setState","flattened","options","Object","keys","filter","el","includes","tabIndex","onFocus","onBlur","fontWeight","ref","autoComplete","onEnter","message","maxWidth","wordWrap","JSON","stringify","OptionListItem","option","isActive","onMouseEnter","onMouseLeave","OptionList","selectedIndex","_sIdx","top","left","_selectedIndex","position","minWidth","minHeight","visibility","boxShadow","map","idx","getTextLength","font","document","createElement","split","join","String","fromCharCode","textNode","createTextNode","appendChild","height","body","w","getBoundingClientRect","width","removeChild","getSuggestions","userInput","words","suggestions","word","startsWith","suggestion","slice","AutoCompleteField","suggestBox","onKeyDown","keyCode","ctrlKey","displaySuggestionsFor","onChange","currentTarget","box","s","type","caretColor","border","outline","onKeyPress","scriptCode","CreateScript","code","componentDidMount","setTimeout","runScript","ev","target","api","createAccount","rows","ui","button","run","LabeledForm","TrieViz","trie","Trie","add","put","Promise","resolve","reject","get","_root","onNode","nodeRef","node","walkController","next","onDone","_walkTrie","Ethpkg","Clickable","hover","onMouseOver","onMouseOut","Tab","FlatButton","Pagination","List","items","isLoading","intervalHandler","dataSource","polling","loadItems","startPolling","providedItems","processItems","interval","setInterval","stopPolling","clearInterval","prevProps","prevState","Spinner","elements","renderItem","itemName","overflow","renderHeader","renderLoading","renderItems","nextProps","Tabs","selectedTab","Array","isArray","c","borderBottom","InputField","marginTop","marginRight","flexGrow","Tools","path","match","tools","renderOverview","exact","Badge","right","NavItem","hasBadge","marginLeft","activeClassName","textDecoration","TopNavigation","StatusItem","textTransform","CurrentBlockNumber","block","prices","eth","usd","eur","EthValue","selectedCurrency","changeCurrency","currencies","findIndex","wei","unit","valueString","ethers","utils","formatUnits","weiToUnit","replace","toUpperCase","price","etherString","formatEther","commify","parseFloat","toFixed","weiTo","GasPrice","getGasPrice","HardforkName","network","getNetwork","Network","networkId","networkName","chainId","Modal","show","onClose","zIndex","Column","RpcServer","modalOpen","openModal","handleProviderSelection","Currency","Address","handleClick","navigator","clipboard","writeText","then","alert","err","short","contract","useAlias","paddingRight","Signer","getSigner","signer","getAddress","StateTime","Toggle","toggle","newValue","find","newState","SyncState","isSyncing","syncInfo","startingBlock","currentBlock","highestBlock","send","componentWillUnmount","renderSyncState","getSyncPercentage","Math","ceil","Syncing","StatusBar","createdAt","NetworkId","GlobalToggle","DateField","ts","relative","moment","unix","format","Pill","paddingLeft","Gas","gas","BlockInfo","number","TxInfo","txHashes","Block","parentHash","difficulty","timestamp","miner","DataProvider","getAllAddresses","listAccounts","accounts","getBlocks","end","start","blocks","max","getBlock","getAllTransactionForBlock","txHash","getTransaction","transaction","getAllTransactions","getBlockNumber","latestBlock","getAllTxByContract","allTx","contractTx","creates","getAllContracts","contractCreations","receipts","getTransactionReceipt","receipt","getDataProvider","ProviderList","NoConnection","renderError","BlockList","Connectivity","LabeledField","valueEl","alignValue","styleValue","BlockTime","blockNumber","blockTime","TransactionItem","blockNumberMined","TransactionList","NavButton","AccountListItem","txCount","getBalance","getTransactionCount","flexBasis","Storage","cache","indexedDB","window","request","open","waitRequest","onsuccess","_key","_makeKey","instance","getCompilerData","bytecode","getInstance","AccountsList","addAccount","loadAccounts","ContractListItem","Contracts","showPrompt","bookmarkContract","importContract","Select","htmlFor","id","Switch","checked","onChecked","remote","worker","Proxy","prop","args","requestId","postMessage","method","arguments","addEventListener","responseId","removeEventListener","Compiler","compiler","compilerVersions","compiling","CompilerWorker","getVersions","compile","source","onData","errors","formattedMessage","readFile","file","reader","FileReader","onload","evt","readAsText","FileChooser","handleFiles","files","content","endsWith","parse","Visitor","callback","contextNew","childNodes","nodes","child","visit","JsonTreeView","ast","d3Tree","t1","transformer","initialContext","newNode","lastNode","root","transformTree","nodeType","attributes","Tree","src","displayDataTypes","enableClipboard","renderTree","CodeTab","hasFocus","handleChange","readOnly","renderOverlay","ContractCode","abi","contractCode","bytecodeMatch","loadArtifacts","getCode","solcArtifacts","handleSolcArtifacts","handleCompilerData","output","contracts","evm","artifact","deployedBytecode","object","t","change","letterSpacing","CreateContractView","handleData","deployContract","unlock","unlocked","factory","ContractFactory","deploy","AccountDetails","params","parsed","calledFunctionName","interface","parseTransaction","boxSizing","isSelected","borderLeft","borderRight","ContractTransactionHistory","selectedTx","selectedTransaction","onSelect","contractInterface","renderTransactions","Overlay","spinner","backdropFilter","size","ContractState","until","stateMachine","replayContractTransactions","handleSwitch","jsonState","onSwitch","renderJson","ContractConsole","signerAddress","contractProxy","ContractDetails","getProvider","loadContractTransactions","loadActiveSigner","handleSelectedTransaction","Contract","Form","TextField","suffix","required","data-shrink","background","aria-invalid","SendTransaction","amount","getTo","sendTransaction","amountString","parseEther","txRaw","BlockDetails","renderBlockDetails","TransactionDetails","renderTransactionDetails","ScriptList","scripts","Setting","updated","Settings","contextType","InplaceEdit","showInput","placeholder","AddressListItem","handleSetAlias","AddressList","networkData","peers","peer","enode","enr","protocol","orientation","pathFunc","centered","CopyClipboardButton","copyToClipboard","faPaste","CommandLineSnippet","command","Client","clientInfo","renderClientInfo","renderHowTo","fetchJson","_url","fetch","json","response","versionList","query","workflows","workflowId","jobs","WorkflowListItem","workflow","projectId","version","updated_at","displayName","shortDescription","publisher","publisherName","onRunWorkflow","JobListItem","job","isRunning","isInstalled","started_at","finished_at","faCheck","Workflows","handleRunWorkflow","GridAPI","runWorkflow","releaseId","renderGridRequired","renderTabs","searchWorkflows","getJobs","WorkflowDetails","getWorkflowId","JobDetails","jobId","getJobId","fetchJobDetails","renderJobDetails","C","component","cProps","rest","render","AppliedRoute","createProvider","newProvider","providerConfig","p","Web3Provider","web3","currentProvider","JsonRpcProvider","Date","now","App","tryConnect","checkConnection","fontFamily","Routes","Boolean","location","hostname","Resizable","handleResize","getDimensions","innerWidth","innerHeight","Nano","Responsive","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","dimensions","viewBox","fill","d","attributeName","dur","repeatCount","TreeRenderer","treeContainer","values","vertically","y","translate","tc"],"mappings":"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","file":"static/js/main.b215ace6.chunk.js","sourcesContent":["// TODO init from storage\n\nexport const globalState = {\n  theme: 'light',\n  alias: false,\n  time: 'block',\n  badge: '',\n  dangerous: false,\n  isConnected: false,\n  selectedProvider: 'Ganache', // user setting\n  connectionInterval: 2000, // test for connection every x ms\n  providers: [\n    { name: 'Geth', url: '127.0.0.1:8545' }\n   ,{ name: 'Ganache', url: '127.0.0.1:7545' }\n   ,{ name: 'Metamask', url: 'web3' }\n   // ,{ name: 'Infura', url: '' }\n  ],\n  provider: undefined, // provider instance\n  navItems: [\n    { label: 'Accounts', route: '/accounts', exclude: false },\n    { label: 'Addresses', route: '/addresses', exclude: false },\n    { label: 'Blocks', route: '/blocks', exclude: false },\n    { label: 'Transactions', route: '/transactions', exclude: false },\n    { label: 'Contracts', route: '/contracts', exclude: false },\n    /*\n    'Events',\n    'Logs',\n    */\n    { label: 'Network', route: '/network', exclude: false },\n    { label: 'Client', route: '/client', exclude: false },\n    { label: 'Workflows', route: '/workflows', exclude: false },\n    // { label: 'Tools', route: '/tools', exclude: false },\n    { label: 'Scripts', route: '/scripts', exclude: true },\n    { label: 'Settings', route: '/settings', exclude: false },\n  ],\n  statusBarItems: [\n    { name: 'provider', exclude: false },\n    { name: 'network', exclude: false },\n    { name: 'current_block', exclude: false },\n    { name: 'sync', exclude: false },\n\n    { name: 'state_time', exclude: false },\n    { name: 'gas_price', exclude: false },\n\n\n    /*\n    { name: 'hardfork', exclude: false },\n    */\n\n    { name: 'currency', exclude: false },\n    { name: 'time', exclude: false },\n    { name: 'alias', exclude: false },\n    { name: 'signer', exclude: false },\n    { name: 'theme', exclude: false }\n  ],\n  aliases: {\n  }\n }\n","import React from 'react';\nimport { globalState } from './State'\n\nexport const StoreContext = React.createContext({})\n\nexport const withNewContext = WrappedComponent => {\n  return class extends React.Component {\n    state = globalState\n    render() {\n      return (\n        <StoreContext.Provider value={this}>\n          <WrappedComponent {...this.props} />\n        </StoreContext.Provider>\n      )\n    }\n  }\n}\n\nexport const withGlobalState = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return (\n        <StoreContext.Consumer>\n          { (val) => {\n            // console.log('render with ctx value', val)\n            return <WrappedComponent {...this.props } global={val} />\n          }}\n        </StoreContext.Consumer>\n      )\n    }\n  }\n}","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from './Button'\n\nexport default withRouter(({ history, style }) => {\n  return (\n    <Button \n      style={style} \n      onClick={() => history.goBack()}\n      icon=\"ArrowLeft\"\n      label=\"Back\"\n    />\n  )\n})","import React, { Component } from 'react'\nimport { Row } from './Row'\nimport BackButton from './BackButton'\n\nexport default class ContainerHeader extends Component {\n  render() {\n    const { title } = this.props\n    return (\n      <Row style={{\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        ...this.props.style\n      }}>\n        <BackButton />\n        <span style={{\n          fontSize: '1.35rem',\n          color: '#666',\n          alignSelf: 'center'\n        }}>{typeof title === 'function' ? title() : title}</span>\n        {/* space element */}\n        <div></div>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\nimport { useTheme } from '../Theme'\nimport ContainerHeader from './ContainerHeader'\n\nclass Container extends Component {\n  render() {\n    const { style = {}, global, header, isCard=true } = this.props\n    const theme = useTheme(global)\n    return (\n      <div className={isCard ? 'card' : ''} style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 10,\n        maxHeight: '100%',\n        overflowY: 'scroll',\n        backgroundColor: theme.container.backgroundColor,\n        color: theme.container.color,\n        margin: 10,\n        borderRadius: 10,\n        ...style\n      }}>\n        { header && <ContainerHeader style={this.props.headerStyle} title={header} /> }\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nexport default withGlobalState(Container)\n","import React from 'react'\n\nexport function Row({ children, style = {} }) { \n  return <div style={{\n    flexDirection: 'row', \n    justifyContent: 'space-between',\n    display: 'flex', \n    ...style \n  }}>{ children }</div>\n}\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\nimport { useTheme } from '../Theme'\nimport Text from './Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\n\nclass Button extends Component {\n  handleOnClick = (e) => {\n    const { onClick = () => { console.warn('No button click handler provided') } } = this.props\n    if (e) {\n      e.stopPropagation()\n      e.preventDefault()\n    }\n    onClick(e)\n  }\n  render() {\n    const { style, global, enabled= true, icon, iconColor = undefined, dangerous = false } = this.props\n    // TODO disable when dangerous active + conditions\n    const theme = useTheme(global)\n    return (\n      <button \n        style={{\n          display: 'inline-flex',\n          paddingTop: 3,\n          paddingBottom: 3,\n          cursor: enabled ? 'pointer' : 'not-allowed',\n          color: theme.foreground,\n          ...style,\n          backgroundColor: 'transparent',\n        }}\n        disabled={!enabled}\n        onClick={this.handleOnClick}\n      >\n        <div style={{\n          display: 'inline-flex',\n          flex: 1,\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          opacity: enabled ? 1 : 0.25\n        }}>\n          { icon && <FontAwesomeIcon icon={icons['fa'+icon]} style={{ color: iconColor, margin: 5 }} pulse={icon === 'Spinner'} /> }\n          {this.props.children || <Text>{this.props.label}</Text>}\n        </div>\n      </button>\n    )\n  }\n}\n\nexport default withGlobalState(Button)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Clickable from './Clickable'\n\nclass ListItem extends Component {\n  render() {\n    const { children, clickable = true, style, to, onClick = (() => {\n      if(!to) return\n      this.props.history.push(to)\n    })} = this.props\n    return (\n      <Clickable clickable={clickable} onClick={onClick} style={{\n        display: 'flex',\n        cursor: clickable? 'pointer' : 'default',\n        borderTop: '1px solid #e6e6e6',\n        color: '#3e3e3e',\n        padding: 5,\n        marginBottom: 2,\n        ...style\n      }}>\n        { children }\n      </Clickable>\n    )\n  }\n}\n\nexport default withRouter(ListItem)\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\n\nclass Text extends Component {\n  render() {\n    // const { global } = this.props\n    let { text } = this.props\n    if (typeof this.props.children === 'string') {\n      text = this.props.children\n    } else {\n      text = text || \"<invalid>\"\n    }\n    return (\n      <span style={{...this.props.style}}>\n        {text}\n      </span>\n    )\n  }\n}\n\nexport default withGlobalState(Text)\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"0eb0363c21cede2e29f4.worker.js\");\n};","import TxWrapper from \"../TxWrapper\"\nimport Account from \"ethereumjs-account\"\nimport VM from \"ethereumjs-vm\"\nimport * as ethutil from 'ethereumjs-util'\n\nconst to32Bytes = (num) => {\n  let numStr = num.toString()\n  // const key =  Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\n  return Buffer.from(`${'0'.repeat(64 - numStr.length)}${numStr}`, 'hex')\n}\n\nexport default class EthStateMachine {\n  setAccount = async (vm, address, nonce) => {\n    try {\n      // https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/account/src/index.ts#L31\n      // fund account with balance in wei and set nonce to correct tx nonce\n      await vm.putAccount(address, new Account({ balance: 100e18, nonce }))\n      const result = await vm.getAccount(address)\n      // console.log('account set', address, result)\n    } catch (error) {\n      console.log('error funding address', error)\n    }\n  }\n  runTx = async (vm, tx) => {\n    // convert ethers bn to string values to be parsed by BN\n    const txData = {\n      value: tx.value._hex,\n      gasLimit: tx.gasLimit._hex, // We assume that 2M is enough,\n      gasPrice: tx.gasPrice._hex,\n      data: tx.data,\n      nonce: tx.nonce,\n      to: tx.to\n    }\n    // const parsed = tryParseTransaction(tx)\n    // console.log('process', parsed.name)\n    // console.log('set tx.from', tx.from)\n    tx = new TxWrapper(txData, tx.from)\n    // https://github.com/ethereumjs/ethereumjs-vm/blob/e2c191b1c93e71f832413bb904f4db521208ebac/packages/vm/lib/runTx.ts#L89\n    const result = await vm.runTx({ tx })\n    return result\n  }\n  runTxSafe = async (vm, tx) => {\n    const { from: sender } = tx\n    // make sure sender has funds to run tx\n    await this.setAccount(vm, sender, tx.nonce)\n    return this.runTx(vm, tx)\n  }\n  async replayContractTransactions(transactions = [], to, contractAddressOriginal) {\n\n    const storage = {}\n\n    if (!transactions || transactions.length === 0) {\n      return { createdAddress: undefined, storage }\n    }\n\n    const vm = new VM()\n    vm.putAccount = vm.pStateManager.putAccount.bind(vm.stateManager)\n    vm.getAccount = vm.pStateManager.getAccount.bind(vm.stateManager)\n\n    const opcodes = []\n    let contractAddress\n\n    const opcodeListener = (event) => {\n      // https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/vm/lib/evm/interpreter.ts#L179\n      let { opcode, address } = event\n      const { fee, name } = opcode\n      const stack = [...event.stack]\n      const copy = { ...event, stack }\n      if (name === \"SSTORE\") {\n        const [key, value] = stack.splice(-2).reverse()\n        storage[key] = value.toString('hex')\n        // console.log('store detected', address.toString('hex'), key.toString('hex'), value.toString('hex'))\n      }\n      opcodes.push(opcode)\n    }\n\n    // process all transactions...\n    // this will set contractAddress and intercept calls to storage\n    for (const tx of transactions) {\n      // console.log('process tx', tx.hash)\n\n      vm.on('step', opcodeListener)\n      const result = await this.runTxSafe(vm, tx)\n      vm.off('step', opcodeListener)\n\n      const { execResult, gasUsedTotal, createdAddress } = result\n\n      if (createdAddress) {\n        // TODO provide network id\n        contractAddress = ethutil.toChecksumAddress('0x' + createdAddress.toString('hex'))\n      }\n\n      // if we end up having a wrong contract address replicating the state failed\n      if (createdAddress && contractAddressOriginal && contractAddress !== contractAddressOriginal) {\n        throw new Error(`Contract address mismatch: ${contractAddress} !== ${contractAddressOriginal}`)\n      }\n\n      const { gasUsed /* BN */, gasRefund /* BN */, exceptionError, logs /* [] */, returnValue /* Buffer */ } = execResult\n      const { error, errorType } = (exceptionError || {})\n      // console.log(`gasUsed: ${gasUsed} opcodes: ${opcodes.length}, gasRefund: ${gasRefund} exceptionError: ${error} created: ${createdAddress ? createdAddress.toString('hex') : ''}`)\n\n      // TODO if valid tx fails in simulation throw\n      if (exceptionError) {\n        console.log('failed tx', parseInt(tx.gasLimit._hex), tx)\n        console.error(error, exceptionError)\n        // throw new Error(error)\n      }\n\n      if (to && tx.hash === to.hash) {\n        break;\n      }\n    }\n\n    // TODO do we have to wait for event emitter?\n\n\n    // TODO turn results into receipts\n    // https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/vm/lib/runBlock.ts#L224\n    return {\n      createdAddress: contractAddress,\n      storage\n    }\n\n  }\n}","const dark = {\n  primaryBackground: '#292929'\n}\n\n// TODO consider simplification to foreground & background\nexport const Themes = {\n  light: {\n    foreground: '#636363',\n    backgroundColor: '#FBFAFC',\n    topNav: {\n      backgroundColor: '#fff',\n      item: {\n        color: 'rgb(38, 68, 82)'\n      }\n    },\n    statusBar: {\n      backgroundColor: '#fff',\n      label: {\n        color: '#5e5e5e'\n      },\n      value: {\n        color: '#3e3e3e'\n      }\n    },\n    field: {\n      label: {\n        color: '#636363' \n      },\n      value: {\n        color: '#3e3e3e'\n      }\n    },\n    container: {\n      backgroundColor: 'white'\n    }\n  },\n  dark: {\n    foreground: 'white',\n    backgroundColor: '#262626',\n    topNav: {\n      backgroundColor: dark.primaryBackground,\n      item: {\n        color: 'white'\n      }\n    },\n    statusBar: {\n      backgroundColor: dark.primaryBackground,\n      label: {\n        color: '#9e9e9e'\n      },\n      value: {\n        color: '#cecece'\n      }\n    },\n    field: {\n      label: {\n        color: 'white' \n      },\n      value: {\n        color: 'white'\n      } \n    },\n    container: {\n      backgroundColor: dark.primaryBackground,\n      color: 'white',\n    }\n  },\n};\n\nexport const useTheme = (global) => {\n  const { state: globalState } = global\n  const theme = Themes[globalState.theme]\n  return theme\n}","import * as ethutil from 'ethereumjs-util'\nimport { BN } from 'ethereumjs-util'\n\n/**\n * provides interface to call vm.runTx\n */\nexport default class TxWrapper {\n  constructor(txData, sender) {\n    this.tx = txData\n    this.sender = sender\n    const fields = [\n      {\n        name: 'nonce',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'gasPrice',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'gasLimit',\n        alias: 'gas',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'to',\n        allowZero: true,\n        length: 20,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'value',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'data',\n        alias: 'input',\n        allowZero: true,\n        default: Buffer.from([]),\n      }\n    ]\n    ethutil.defineProperties(this, fields, txData)\n  }\n  /**\n   * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md\n   */\n  getBaseFee() {\n    /**\n    const fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'))\n    if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this._common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n    */\n    // FIXME calculate base fee\n    return new BN('1') // gasLimit must be higher\n  }\n  getSenderAddress() {\n    // getSenderAddress is where the signature check is performed\n    // <- unsigned tx with hardcoded sender possible\n    // return this.tx.getSenderAddress()\n    return this.sender\n  }\n  getUpfrontCost() {\n    return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value))\n  }\n}","import React, { Component } from 'react'\nimport AutoCompleteField from '../../widgets/AutoCompleteField'\nimport { Row } from '../../widgets/Row'\n\nconst flattenObject = function(ob) {\n\tvar toReturn = {};\n\tfor (var i in ob) {\n\t\tif (!ob.hasOwnProperty(i)) continue;\n\t\tif ((typeof ob[i]) == 'object') {\n\t\t\tvar flatObject = flattenObject(ob[i]);\n\t\t\tfor (var x in flatObject) {\n\t\t\t\tif (!flatObject.hasOwnProperty(x)) continue;\n\t\t\t\ttoReturn[i + '.' + x] = flatObject[x];\n\t\t\t}\n\t\t} else {\n\t\t\ttoReturn[i] = ob[i];\n\t\t}\n\t}\n\treturn toReturn;\n}\n\nexport default class Console extends Component {\n  state = {\n  }\n  handleFocus = (e) => {\n    this.autoCompleteField.focus();\n  }\n  handleBlur = () => {\n    this.autoCompleteField.blur();\n  }\n  handleEnter = async (input) => {\n      // eslint-disable-next-line\n    const { context = {} } = this.props\n    try {\n      // eslint-disable-next-line\n      const result = await eval(`context.${input}`)\n      this.setState({ result, error: undefined })\n    } catch (error) {\n      console.log('error', error)\n      this.setState({ error })\n    }\n  }\n  render() {\n    const { result, error } = this.state\n    const { context = {} } = this.props\n    const flattened = flattenObject(context)\n    const options = Object.keys(flattened).filter(el => !el.includes('.'))\n    // console.log('options', options)\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          backgroundColor: 'rgb(39, 40, 34)',\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          ...this.props.style\n        }}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n      >\n        <Row style={{\n          backgroundColor: 'rgba(85, 85, 85, 0.22)',\n          justifyContent: 'left',\n          alignItems: 'center'\n        }}>\n          <span style={{ color: 'cyan', padding: 5, fontWeight: 'bold' }}>{\">\"}</span>\n          <AutoCompleteField \n            ref={(autoComplete) => { this.autoCompleteField = autoComplete; }}\n            fontSize={14}\n            options={options}\n            onEnter={this.handleEnter}\n            style={{\n              color: '#ffffffb8'\n            }}\n          />\n        </Row>\n        {error &&\n        <span style={{\n          fontWeight: 'bold',\n          fontSize: '1rem',\n          color: '#da4747c9',\n          padding: 5,\n          backgroundColor: '#ef565629'\n        \n        }}>Error: {error.message}</span>\n        }\n        {!error && result &&  <div style={{\n          padding: 5,\n          color: '#ffffff6b',\n          maxWidth: '100%',\n          wordWrap: 'break-word',\n          overflowY: 'scroll'\n        }}> {\"<- \" + JSON.stringify(result, null, 2)}</div>}\n\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nclass OptionListItem extends Component {\n  render() {\n    const { option, isActive, onMouseEnter, onMouseLeave } = this.props\n    return (\n      <div\n        style={{\n          backgroundColor: isActive ? '#6f6f6f6b' : 'transparent',\n          color: isActive ? 'greenyellow' : '#eee',\n          padding: 2\n        }}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        {option}\n      </div>\n    )\n  }\n}\n\nclass OptionList extends Component {\n  state = {\n    selectedIndex: undefined\n  }\n  render() {\n    const { selectedIndex: _sIdx } = this.state\n    const { options, selectedIndex = 0, top = 0, left = 0 } = this.props\n    let _selectedIndex = _sIdx !== undefined ? _sIdx : selectedIndex\n    return (\n      <div style={{\n        position: 'fixed',\n        top,\n        left,\n        minWidth: 200,\n        minHeight: 50,\n        backgroundColor: '#3c3c3c',\n        visibility: (options && options.length > 1) ? 'visible' : 'hidden',\n        boxShadow: 'rgba(72, 154, 212, 0.2) 0px 1px 2px 0px'\n      }}>\n        {options && options.map((option, idx) => {\n          const isActive = idx === _selectedIndex\n          return (\n            <OptionListItem \n              key={idx}\n              option={option} \n              isActive={isActive} \n              onMouseEnter={() => this.setState({ selectedIndex: idx })}\n              onMouseLeave={() => this.setState({ selectedIndex: undefined })}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\n/*\nconst _getTextLength = (text, fontSize) => {\n  const c = document.createElement('canvas');\n  const ctx = c.getContext(\"2d\");\n  ctx.font = `${fontSize}px Arial`;\n  return Math.ceil(ctx.measureText(text).width + 1)\n}\n*/\n\nconst getTextLength = (text, font) => {\n  const el = document.createElement('div');\n  text = text.split(' ').join(String.fromCharCode(160)) // replace space with &nbsp;\n  const textNode = document.createTextNode(text)\n  el.appendChild(textNode)\n  el.style.font = font;\n  el.style.position = 'absolute'\n  el.style.visibility = 'hidden'\n  el.style.left = '-999px'\n  el.style.top = '-999px'\n  el.style.height = 'auto'\n\n  document.body.appendChild(el)\n  // let wString = getComputedStyle(el).width\n  // const w = parseFloat(wString.replace('px', ''))\n  const box = el.getBoundingClientRect()\n  const w = box.width\n  document.body.removeChild(el)\n  return w\n}\n\nconst getSuggestions = (userInput, words) => {\n  const suggestions = []\n  userInput = userInput || ''\n  for (const word of words) {\n    if (word.startsWith(userInput)) {\n      suggestions.push({\n        word,\n        suggestion: word.slice(userInput.length)\n      })\n    }\n  }\n  return suggestions\n}\n\nexport default class AutoCompleteField extends Component {\n  state = {\n    value: '',\n    suggestion: '',\n    suggestions: [],\n    selectedIndex: 0,\n    suggestBox: {\n      top: 0,\n      left: 0\n    }\n  }\n  componentDidMount() {\n    const box = this.userInput.getBoundingClientRect()\n    this.setState({\n      suggestBox: {\n        top: box.top + box.height + 3,\n        left: box.left\n      }\n    })\n  }\n  onKeyDown = (e) => {\n    const SPACE = 32\n    if (e.keyCode === SPACE && e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n      return this.displaySuggestionsFor(this.state.value)\n    }\n    else if (e.key === 'Escape') {\n      this.setState({\n        suggestions: []\n      })\n    }\n    else if (e.key === 'Tab') {\n      const { value: userInput, selectedIndex } = this.state\n      const suggestions = getSuggestions(userInput, this.props.options)\n      const suggestion = suggestions.length > 0 ? suggestions[selectedIndex].word : ''\n      this.setState({\n        value: suggestion,\n        suggestions: [],\n        selectedIndex: 0\n      })\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    else if(e.key === 'Enter') {\n      const { value: userInput, selectedIndex } = this.state\n      const suggestions = getSuggestions(userInput, this.props.options)\n      const suggestion = suggestions.length > 0 ? suggestions[selectedIndex].word : ''\n      if (!suggestion || suggestion === userInput) {\n        this.props.onEnter(userInput)\n      } else {\n        // user accepts suggestion (same as tab)\n        this.setState({\n          value: suggestion,\n          suggestions: [],\n          selectedIndex: 0\n        })\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    else if (e.key === 'ArrowUp') {\n      let { selectedIndex, suggestions } = this.state\n      if (suggestions.length === 0) {\n        return\n      }\n      this.setState({\n        selectedIndex: (selectedIndex - 1) >= 0 ? selectedIndex - 1 : (suggestions.length - 1)\n      })\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    else if (e.key === 'ArrowDown') {\n      let { selectedIndex, suggestions } = this.state\n      if (suggestions.length === 0) {\n        return\n      }\n      this.setState({\n        selectedIndex: (selectedIndex + 1) % suggestions.length\n      })\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n  displaySuggestionsFor(userInput) {\n    const suggestions = getSuggestions(userInput, this.props.options)\n    this.setState({\n      value: userInput,\n      suggestions: [...suggestions],\n      selectedIndex: 0\n    })\n  }\n  onChange = (e) => {\n    const userInput = e.currentTarget.value;\n    this.displaySuggestionsFor(userInput)\n  }\n  focus() {\n    this.userInput.focus();\n  }\n  blur = () => {\n    // hide suggestions\n    this.setState({\n      suggestions: []\n    })\n  }\n  render() {\n    const { value, suggestions, selectedIndex, suggestBox } = this.state\n    const suggestion = suggestions.length > selectedIndex ? suggestions[selectedIndex].suggestion : ''\n    const { fontSize = 16 } = this.props\n    return (\n      <Fragment>\n        <OptionList\n          selectedIndex={selectedIndex}\n          options={suggestions.map(s => s.word)}\n          top={suggestBox.top}\n          left={suggestBox.left}\n        />\n        <input\n          type=\"text\"\n          ref={(input) => { this.userInput = input; }}\n          style={{\n            backgroundColor: 'transparent',\n            font: `${fontSize}px Arial`,\n            color: 'white',\n            caretColor: 'cyan',\n            padding: 0,\n            border: 'none',\n            outline: 'none',\n            width: `${getTextLength(value, `${fontSize}px Arial`) || 1}px`,\n            ...this.props.style\n          }}\n          value={value}\n          onKeyPress={this.onKeyPress}\n          onKeyDown={this.onKeyDown}\n          onChange={this.onChange}\n        />\n        <span style={{\n          color: 'rgba(197, 197, 197, 0.4)',\n          fontSize: `${fontSize}px`,\n        }}>{suggestion}</span>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Button from '../../../widgets/Button'\nimport Tabs from '../../../widgets/Tabs'\nimport Tab from '../../../widgets/Tab'\n\nconst scriptCode = `\nconst run = async () => {\n  let i = 0\n  while(i++ < 10){\n    await api.createAccount(100)\n  }\n}\nmodule.exports = { run, ui: { button: { label: 'Create 10' }, insert: 'accounts' } }\n`\n\nexport default class CreateScript extends Component {\n  state = {\n    code: scriptCode,\n    result: undefined,\n    error: undefined\n  }\n  componentDidMount = () => {\n    setTimeout(() => {\n      this.runScript(this.state.code)\n    }, 1000)\n  }\n  onChange = (ev) => {\n    const code = ev.target.value\n    this.setState({\n      code\n    })\n    this.runScript(code)\n  }\n  runScript = (code) => {\n    // eslint-disable-next-line\n    const api = {\n      createAccount: async () => {\n        console.log('create account called')\n\n      }\n    }\n    let result\n    try {\n      // eslint-disable-next-line\n      result = eval(code)\n    } catch (error) {\n      return this.setState({\n        error\n      })\n    }\n    console.log('result', result)\n    this.setState({\n      result,\n      error: undefined\n    })\n  }\n  render() {\n    const { code, result, error } = this.state\n    return (\n      <div>\n        <h3>Create a script</h3>\n        <h5>Examples</h5>\n        <Tabs>\n          <Tab label=\"Create 10 random accounts\">\n            <textarea\n              value={code}\n              onChange={this.onChange}\n              rows=\"15\"\n              style={{\n                flex: 1\n              }}\n            />\n          </Tab>\n        </Tabs>\n\n        <h3>Preview</h3>\n        <div style={{ height: 200, border: '1px solid black', padding: 5, marginBottom: 10 }}>\n          {\n            result && result.ui && !error\n              ? <Button label={result.ui.button.label} onClick={result.run} />\n              : <span>error: {error ? error.message : ''}</span>\n          }\n        </div>\n        <Button>Save</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class LabeledForm extends Component {\n  render() {\n    const { label } = this.props\n    return (\n      <div className=\"card\" style={{\n        backgroundColor: '#f3f3f34d',\n        width: 500,\n        height: 300,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        padding: 20,\n        margin: 10,\n        borderRadius: 20\n      }}>\n        <fieldset>\n          <legend>{label}</legend>\n          { this.props.children }\n        </fieldset>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Trie from 'merkle-patricia-tree'\nimport Button from '../../../widgets/Button'\nimport Tree from '../../../widgets/Tree'\n\nexport default class TrieViz extends Component {\n  state = {\n    trie: undefined,\n    data: {\n      name: 'root',\n      children: []\n    }\n  }\n  componentDidMount = () => {\n    this.setState({\n      trie: new Trie()\n    })\n  }\n  add = async () => {\n    const { trie } = this.state\n    const put = (key, val) => new Promise((resolve, reject) => {\n      trie.put(key, val, (error, data) => {\n        if(error) return reject(error)\n        return resolve(data)\n      })\n    })\n    \n    await put(Buffer.from('test'), Buffer.from('one'))\n    await put(Buffer.from('foo'), Buffer.from('boz'))\n    await put(Buffer.from('bar'), Buffer.from('baz'))\n    const value = await new Promise((resolve, reject) => {\n      trie.get(Buffer.from('test'), (error, data) => {\n        if(error) return reject(error)\n        return resolve(data)\n      })\n    })\n\n    console.log(trie._root.toString('hex'))\n    const onNode = (nodeRef, node, key, walkController) => {\n      console.log('on node called', nodeRef.toString('hex'), node, key)\n      walkController.next()\n    }\n    const onDone = () => {\n      console.log('on done called')\n    }\n    trie._walkTrie(trie._root, onNode, onDone)\n\n    console.log('transform trie', trie)\n\n    console.log(value.toString())\n  }\n  render() {\n    const { data } = this.state\n    return (\n      <div style={{\n        border: '1px solid black'\n      }}>\n        <Button label=\"add\" onClick={this.add}/>\n        <Tree data={data} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Ethpkg extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Ethpkg</h2>\n        <div style={{\n          width: '100%',\n          height: 500,\n          border: '2px dashed blue'\n        }}>\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Clickable extends Component {\n  state = {\n    hover: false\n  }\n  onMouseOver = (e) => {\n    // only display hover on top most element:\n    this.setState({\n      hover: true\n    })\n    e.stopPropagation();\n  }\n  render() {\n    const { onClick = () => { }, style = {}, clickable = true } = this.props\n    const { hover } = this.state\n    return (\n      <div\n        onClick={(e) => {\n          onClick()\n          e.stopPropagation()\n          e.preventDefault()\n        }}\n        className={clickable ? 'clickable' : ''}\n        style={{\n          display: 'inline-block',\n          paddingTop: 5,\n          paddingBottom: 5,\n          cursor: 'pointer',\n          ...style,\n          backgroundColor: (hover && clickable) ? '#bdbdbd15' : style.backgroundColor\n        }}\n        onMouseEnter={this.onMouseOver}\n        onMouseOver={this.onMouseOver}\n        onMouseOut={() => this.setState({ hover: false})}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Tab extends Component {\n  render() {\n    const { children, style } = this.props\n    return (\n      <div \n        className=\"Tab\"\n        style={{ display: 'flex', flex: 1, ...style }}\n      >{children}</div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nfunction FlatButton({ label }) {\n  return(\n    <div style={{ \n      display: 'inline-flex', \n      padding: 5,\n      backgroundColor: '#f5f6fa',\n      border: '1px solid #f5f6fa',\n      color: '#a3a9b5',\n      fontWeight: 'bold'\n      }}>\n      {label}\n    </div>\n  )\n}\n\nexport default class Pagination extends Component {\n  render() {\n    return (\n      <div style={{\n        alignSelf: 'flex-end',\n        padding: 5,\n        borderRadius: 10,\n        fontSize: '0.7rem'\n      }}>\n      <FlatButton label=\"<\"/> <FlatButton label=\"Page 2\"/> <FlatButton label=\">\"/> \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Pagination from './Pagination'\nimport Spinner from './Spinner'\nimport Error from './Error'\nimport { Row } from './Row'\n\n// TODO implement list header\n// class ListHeader extends Component { }\n\nexport default class List extends Component {\n  state = {\n    items: [],\n    isLoading: false,\n    error: undefined,\n    intervalHandler: undefined,\n    dataSource: undefined\n  }\n  componentDidMount = async () => {\n    const { polling, dataSource } = this.props\n    this.setState({\n      dataSource\n    })\n    this.loadItems()\n    if (polling) {\n      this.startPolling(polling)\n    }\n  }\n  componentWillUnmount() {\n    this.stopPolling()\n  }\n  loadItems = async () => {\n    const { loadItems = () => undefined, items: providedItems = [], processItems } = this.props\n    this.setState({\n      isLoading: true\n    })\n    try {\n      let items = (await loadItems()) || providedItems\n      // filter null and undefined\n      items = items.filter(item => !!item)\n      if (typeof processItems === 'function') {\n        items = processItems(items)\n      }\n      this.setState({\n        items,\n        isLoading: false\n      })\n    } catch (error) {\n      console.log('loading error', error)\n      this.setState({\n        error,\n        isLoading: false\n      })\n    }\n  }\n  startPolling = (interval) => {\n    const intervalHandler = setInterval(this.loadItems, interval)\n    this.setState({\n      intervalHandler\n    })\n  }\n  stopPolling = () => {\n    const { intervalHandler } = this.state\n    if (intervalHandler) {\n      clearInterval(intervalHandler)\n    }\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.dataSource !== prevState.dataSource) {\n      return { dataSource: nextProps.dataSource }\n    }\n    return null\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.dataSource !== this.props.dataSource ){\n      console.log('data source changed in list', this.props.dataSource)\n      this.loadItems()\n      // TODO handle polling here\n    }\n  }\n  renderLoading() {\n    return (\n      <div style={{\n        maxHeight: 300,\n        display: 'flex',\n        flexDirection: 'column',\n        opacity: 0.6,\n        alignItems: 'center'\n      }}>\n        <div style={{\n          fontSize: '2rem',\n          alignSelf: 'center',\n          margin: 20\n        }}>Loading items...</div>\n        <Spinner style={{\n          width: 50,\n          height: 50\n        }} />\n      </div>\n    )\n  }\n  renderHeader() {\n    const { items } = this.state\n    const { elements } = this.props\n    return (\n      <Row style={{\n        height: 40,\n        padding: 10,\n        backgroundColor: 'rgba(243, 243, 243, 0.1)',\n        alignItems: 'center'\n      }}>\n        {elements && elements()}\n\n        {items.length > 100 && <Pagination />}\n      </Row>\n    )\n  }\n  renderItems() {\n    const { items } = this.state\n    const { style, renderItem = () => { }, itemName = \"items\" } = this.props\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n      }}>\n        {items.length > 0\n          ? items.map(renderItem)\n          : <h2 style={{ alignSelf: 'center', color: '#ccc' }}>No {itemName} found</h2>\n        }\n      </div>\n    )\n  }\n  render() {\n    const { isLoading, error } = this.state\n    const { header = true } = this.props\n    return (\n      <div\n        className=\"List\"\n        style={{\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'column',\n        }}>\n        {header && this.renderHeader()}\n        {error\n          ? <Error error={error} />\n          : isLoading ? this.renderLoading() : this.renderItems()\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row } from './Row'\n\nexport default class Tabs extends Component {\n  state = {\n    selectedTab: 0\n  }\n  render() {\n    let { selectedTab } = this.state\n    selectedTab = this.props.selectedTab || selectedTab\n    let { children, style } = this.props\n    if (!Array.isArray(children)) {\n      children = [children]\n    }\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n      }}>\n        <Row style={{ justifyContent: 'normal' }}>{children.map((c, idx) => <div\n          key={idx}\n          style={{ \n            margin: 5, \n            fontWeight: 'bold',\n            borderBottom: idx === selectedTab ? '2px solid #08a79c' : 'none',\n            cursor: 'pointer',\n            ...style \n          }}\n          onClick={() => this.setState({ selectedTab: idx })}\n        >{c.props.label}</div>)}</Row>\n\n        {children[selectedTab]}\n\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport { Row } from '../../../widgets/Row'\nimport { utils } from 'ethers'\nimport LabeledForm from '../../../widgets/LabeledForm'\nimport TrieViz from './TrieViz'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport ListItem from '../../../widgets/ListItem'\nimport List from '../../../widgets/List'\nimport Ethpkg from './Ethpkg'\n\nclass InputField extends Component {\n  render() {\n    const { label, value, onChange = () => { } } = this.props\n    return (\n      <Row style={{\n        justifyContent: 'normal',\n        marginTop: 10,\n        fontSize: '1.1rem'\n      }}>\n        <span style={{ marginRight: 10, width: 50, padding: 5 }}>{label}</span>\n        <input style={{ flexGrow: 1 }} type=\"text\" value={value} onChange={(e) => onChange(e.target.value)} />\n      </Row>\n    )\n  }\n}\n\nclass Converter extends Component {\n  state = {\n    input: '',\n    output: ''\n  }\n  handleInput = (input) => {\n    this.setState({\n      input,\n      output: utils.keccak256(Buffer.from(input))\n      // output: utils.keccak256(utils.toUtf8Bytes(input))\n    })\n  }\n  render() {\n    const { input, output } = this.state\n    return (\n      <LabeledForm label=\"Converter\">\n        <select value=\"keccak\">\n          <option value=\"volvo\">keccak</option>\n        </select>\n        <InputField label=\"Input\" value={input} onChange={this.handleInput} />\n        <InputField label=\"Output\" value={output} />\n      </LabeledForm>\n    )\n  }\n}\n\nclass Tools extends Component {\n  renderOverview() {\n    const { match } = this.props\n    const { path } = match\n    const tools = [\n      { name: 'ethpkg', to: `${path}/ethpkg` }\n      , { name: 'trie', to: `${path}/trie` }\n    ]\n    return (\n      <List\n        items={tools}\n        renderItem={item => <ListItem key={item.to} to={item.to}><span>{item.name}</span></ListItem>}\n      />\n    )\n  }\n  render() {\n    const { match } = this.props\n    const { path } = match\n    console.log('route path', match)\n    return (\n      <Container>\n        <h2>Tools</h2>\n        {this.renderOverview()}\n        <div style={{\n          flex: 5\n        }}>\n          <Switch>\n            <Route exact path={path}>\n              {/* \n            <Row>\n              <Converter />\n              next contract address calculator + lurch support\n              <span></span>\n              <span></span>\n            </Row>\n            */}\n            </Route>\n            <Route path={`${path}/ethpkg`}>\n              <Ethpkg />\n            </Route>\n            <Route path={`${path}/trie`}>\n              <TrieViz />\n            </Route>\n          </Switch>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(Tools)\n","import React, { Component } from 'react'\n\nexport default class Badge extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: '#ff22a7e0',\n        position: 'absolute',\n        width: 10,\n        height: 10,\n        padding: 5,\n        borderRadius: 10,\n        top: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>\n        <span style={{\n          fontSize: '1.25rem',\n          color: 'white',\n          fontWeight: 'bold'\n        }}>!</span>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Badge from '../../widgets/Badge';\nimport {\n  NavLink\n} from \"react-router-dom\"\nimport Text from '../../widgets/Text';\n\nexport default class NavItem extends Component {\n  render() {\n    const { route, label, color, hasBadge } = this.props\n    return (\n      <div className=\"NavItem\" key={route} style={{\n        position: 'relative',\n        padding: 10,\n        fontWeight: 200,\n        fontSize: '1.25rem',\n        marginLeft: 10,\n        marginRight: 10\n      }}>\n        <NavLink to={route} activeClassName=\"ActiveNav\" style={{\n          color,\n          textDecoration: 'none',\n          padding: 5\n        }}><Text>{label}</Text></NavLink>\n        { hasBadge && <Badge /> }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NavItem from './NavItem'\nimport { withGlobalState } from '../../Context'\nimport { useTheme } from '../../Theme'\n\nclass TopNavigation extends Component {\n  render() {\n    const { state: globalState } = this.props.global\n    const theme = useTheme(this.props.global)\n    const { items: navItems } = this.props\n    const { isConnected } = globalState\n    return (\n      <nav className=\"TopNav\" style={{\n        backgroundColor: theme.topNav.backgroundColor,\n        padding: 5,\n        display: 'flex',\n        justifyContent: 'left',\n        borderBottom: '1px solid #c5c5c5'\n      }}>\n        {navItems.map(({ route, label }) => <NavItem \n        key={label}\n        route={route} \n        label={label} \n        hasBadge={globalState.badge === label || (label === 'Client' && !isConnected) }\n        color={theme.topNav.item.color} \n        />)}\n      </nav>\n    )\n  }\n}\n\nexport default withGlobalState(TopNavigation)\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../../Context'\nimport { useTheme } from '../../Theme'\nimport Text from '../../widgets/Text'\n\nclass StatusItem extends Component {\n  render() {\n    const { label, value, global } = this.props\n    const theme = useTheme(global)\n    return (\n      <div className=\"StatusItem\">\n        <span className=\"StatusLabel\" style={{\n          color: theme.statusBar.label.color,\n          textTransform: 'uppercase',\n          fontWeight: 'bold',\n          paddingTop: 5\n        }}><Text>{ label }</Text></span>\n        <span className=\"StatusValue\" style={{\n          color: theme.statusBar.value.color\n        }}>\n          { typeof value === 'function' ? value() : value }\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default withGlobalState(StatusItem)\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class CurrentBlockNumber extends Component {\n  render() {\n    const { block } = this.props\n    return (\n      <StatusItem label=\"Current Block\" value={block} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { ethers } from 'ethers'\nimport Clickable from './Clickable'\n\nconst prices = {\n  eth: 1,\n  usd: 159.59,\n  eur: 144.36\n}\n\n// TODO  move to utils\nconst weiTo = (wei, selectedCurrency) => {\n  const price = prices[selectedCurrency]\n  const etherString= ethers.utils.formatEther(wei, { commify: 2})\n  // FIXME dangerous but bigNumberify('100.00') not working\n  const _ethers = parseFloat(etherString)\n  return (price * _ethers).toFixed(2)\n}\n\nconst weiToUnit = (wei, unit) => {\n  return ethers.utils.formatUnits(wei, unit) // as string\n}\n\nexport default class EthValue extends Component {\n  state = {\n    selectedCurrency: 'eth'\n  }\n  changeCurrency = (e) => {\n    const { selectedCurrency } = this.state\n    const currencies = Object.keys(prices)\n    const idx = currencies.findIndex(el => el === selectedCurrency)\n    this.setState({\n      selectedCurrency: currencies[(idx + 1) % currencies.length]\n    })\n  }\n  render() {\n    const { selectedCurrency } = this.state\n    const { wei, unit, style } = this.props\n\n    let valueString = ''\n    if (unit) {\n      valueString = weiToUnit(wei, unit).replace('.0', '') + ' ' + unit.toUpperCase()\n    } else {\n      valueString = weiTo(wei, selectedCurrency) + ' ' +  selectedCurrency.toUpperCase()\n    }\n    if (valueString.length > 20) {\n      valueString = '∞' + ' ' + selectedCurrency.toUpperCase()\n    }\n    return (\n      <Clickable onClick={this.changeCurrency} style={{\n        ...style\n      }}>\n        <span>\n          <span>{valueString}</span>\n        </span>\n      </Clickable>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport EthValue from '../../../widgets/EthValue'\n\nexport default class GasPrice extends Component {\n  state = {\n    gasPrice: -1\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const gasPrice = await provider.getGasPrice()\n      this.setState({\n        gasPrice\n      })\n    } catch (error) {\n      this.setState({\n        gasPrice: -1\n      })\n    }\n\n  }\n  render() {\n    const { gasPrice } = this.state\n    return (\n      <StatusItem label=\"Gas Price\" value={() => <EthValue wei={gasPrice} unit=\"gwei\" style={{ padding: 0}} />} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class HardforkName extends Component {\n  state = {\n    network: undefined\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    const network = await provider.getNetwork() \n    this.setState({\n      network\n    })\n  }\n  render() {\n    return (\n      <StatusItem label=\"Hardfork\" value=\"Petersburg\" />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport { withGlobalState } from '../../../Context'\n\nclass Network extends Component {\n  state = {\n    networkId: 'no network',\n    networkName: ''\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const network = await provider.getNetwork() \n      console.log('network', network)\n      const { chainId: networkId, name: networkName } = network\n      this.setState({\n        networkId,\n        networkName\n      }) \n    } catch (error) {\n      // reset\n      this.setState({\n        networkId: 'no network',\n        networkName: ''\n      }) \n    }\n  }\n  render() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { isConnected } = globalState\n    const { networkId, networkName } = this.state\n    return (\n      <StatusItem label=\"Network\" value={isConnected ? `${networkId} ${networkName ? `(${networkName})` : ''}` : 'offline' } />\n    )\n  }\n}\n\nexport default withGlobalState(Network)\n","import React, { Component } from 'react'\n\nexport default class Modal extends Component {\n  state = {\n    visibility: 'hidden'\n  } \n  render() {\n    // let { visibility = this.props.show } = this.state\n    let { show, onClose = () => {}, children } = this.props\n    let visibility = show ? 'visible' : 'hidden'\n    return (\n      <div style={{\n        position: 'fixed',\n        display: 'flex',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: '#2222227a',\n        alignItems: 'center', \n        justifyContent: 'center',\n        zIndex: 10,\n        visibility\n      }}\n      onClick={() => { \n        // TODO hide here for immediate feedback?\n        onClose() \n      }}\n      >\n        <div className=\"card\" style={{\n          backgroundColor: 'white',\n          width: 500,\n          height: 250,\n          display: 'flex',\n          visibility\n        }}>\n          { children }\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport function Column({ children, style }) { \n  return <div style={{ \n    flexDirection: 'column', \n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    ...style \n  }}>{ children }</div>\n}\n","import React, { Component, Fragment } from 'react'\nimport StatusItem from '../StatusItem'\nimport Clickable from '../../../widgets/Clickable'\nimport Modal from '../../../widgets/Modal'\nimport { Column } from '../../../widgets/Column'\nimport List from '../../../widgets/List'\nimport ListItem from '../../../widgets/ListItem'\nimport { withGlobalState } from '../../../Context'\n\nclass RpcServer extends Component {\n  state = {\n    modalOpen: false\n  }\n  openModal = () => {\n    this.setState({\n      modalOpen: true\n    })\n  }\n  handleProviderSelection = ({ name, url }) => {\n    const { global } = this.props\n    // completely reset connection here. will be re-created in App.js\n    global.setState({\n      selectedProvider: name,\n      provider: undefined,\n      isConnected: false\n    })\n    this.setState({\n      modalOpen: false\n    })\n  }\n  render() {\n    const { modalOpen } = this.state\n    const { global } = this.props\n    const { state: globalState } = global\n    const { provider, providers, selectedProvider } = globalState\n\n    return (\n      <Fragment>\n        <Clickable onClick={this.openModal} style={{ paddingTop: 0 }}>\n          <StatusItem label=\"Provider\" value={ selectedProvider } />\n        </Clickable>\n        <Modal show={modalOpen} onClose={() => this.setState({ modalOpen: false })}>\n          <Column style={{\n            padding: 20,\n            justifyContent: 'normal'\n          }}>\n            <h2>Select your provider</h2>\n            <List\n              header={ false }\n              items={providers}\n              renderItem={provider => <ListItem key={provider.name} onClick={() => this.handleProviderSelection(provider)} style={{ fontSize: '1.25rem', padding: 10 }}>{`${provider.name} - ${provider.url}`} </ListItem> }\n            />\n          </Column>\n        </Modal>\n      </Fragment>\n    )\n  }\n}\n\nexport default withGlobalState(RpcServer)\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class Currency extends Component {\n  render() {\n    return (\n      <StatusItem label={\"Currency\"} value=\"ETH\" />\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Clickable from './Clickable'\nimport Text from './Text'\nimport { withGlobalState } from '../Context'\n\nclass Address extends Component {\n  handleClick = () => {\n    let { address } = this.props\n    // TODO handle not available\n    navigator.clipboard.writeText(address).then(function () {\n      console.log('Async: Copying to clipboard was successful!');\n      alert('copied')\n    }, function (err) {\n      console.error('Async: Could not copy text: ', err);\n      alert('failed to copy')\n    });\n  }\n  render() {\n    let { address, short = false, contract = false, style = {}, label, global } = this.props\n    const useAlias = global.state.alias\n    if (short) {\n      address = [\n        ...address.split('').slice(0, 7),\n        '...',\n        ...address.split('').slice(42 - 5)\n      ].join('')\n    }\n    if (useAlias) {\n      const aliases = global.state.aliases\n      address = address in aliases ? aliases[address] : address\n    }\n    return (\n      <Fragment>\n        {label && <Text text={label} style={{ paddingRight: 7 }} />}\n        <Clickable\n          onClick={this.handleClick}\n          style={{\n            ...style,\n            fontWeight: contract ? 'bold' : 'normal',\n          }}\n        >\n          <span>\n            {address}\n          </span>\n        </Clickable>\n      </Fragment>\n    )\n  }\n}\n\nexport default withGlobalState(Address)\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport Address from '../../../widgets/Address'\n\nexport default class Signer extends Component {\n  state = {\n    address: ''\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const signer = await provider.getSigner()\n      const address = await signer.getAddress()\n      this.setState({\n        address\n      })\n    } catch (error) {\n      this.setState({\n        address: ''\n      })\n    }\n  } \n  render() {\n    const { address } = this.state\n    return (\n      <StatusItem label={\"Signer\"} value={() => <Address address={address} short={true} style={{ padding: 0 }} />} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class StateTime extends Component {\n  render() {\n    return (\n      <StatusItem label=\"State\" value=\"now\" />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from './StatusItem'\nimport Clickable from '../../widgets/Clickable'\nimport { withGlobalState } from '../../Context'\n\nclass Toggle extends Component {\n  toggle = () => {\n    const { global, options, name } = this.props\n    const value = global.state[name]\n    const newValue = options.find(option => option !== value)\n    const newState = {}\n    newState[name] = newValue\n    global.setState(newState)\n  }\n  render() {\n    const { global, name, label } = this.props\n    let value = global.state[name]\n    return (\n      <StatusItem label={label} value={() => <Clickable onClick={this.toggle} style={{ padding: 0 }}>{value.toString()}</Clickable> } />\n    )\n  }\n}\n\nexport default withGlobalState(Toggle)","import React, { Component } from 'react'\n\nexport default class SyncState extends Component {\n  state = {\n    intervalHandler: undefined,\n    isSyncing: false,\n    syncInfo: {\n      startingBlock: 0,\n      currentBlock: 0,\n      highestBlock: 0\n    }\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    const intervalHandler = setInterval(async () => {\n      try {\n        const syncInfo = await provider.send('eth_syncing')\n        if (syncInfo) {\n          this.setState({\n            isSyncing: true,\n            syncInfo: {\n              ...syncInfo\n            }\n          })\n        }\n      } catch (error) {\n        this.setState({\n          isSyncing: false\n        })\n      }\n    }, 1500)\n    this.setState({\n      intervalHandler\n    })\n  }\n  componentWillUnmount = () => {\n    const { intervalHandler } = this.state\n    if (intervalHandler) {\n      clearInterval(intervalHandler)\n    }\n  }\n  render() {\n    const { renderSyncState = () => <div>No renderer</div>} = this.props\n    let { syncInfo, isSyncing } = this.state\n    if (syncInfo) {\n      const { highestBlock } = syncInfo\n      if (highestBlock === 0) {\n        syncInfo = false\n      }\n    }\n    if (!isSyncing) {\n      syncInfo = undefined\n    }\n    return renderSyncState(syncInfo)\n  }\n}","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport SyncState from '../../../widgets/SyncState'\n\nconst getSyncPercentage = ({ currentBlock, highestBlock }) => Math.ceil((currentBlock / highestBlock) * 100)\n\nexport default class Syncing extends Component {\n  render() {\n    return (\n      <SyncState\n        provider={this.props.provider}\n        renderSyncState={syncInfo => {\n          return (\n            <StatusItem label=\"Sync\" value={syncInfo === undefined ? 'no sync' : ( syncInfo === false ? '100' : `${getSyncPercentage(syncInfo)}%` )} />\n          )\n        }}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport CurrentBlockNumber from './StatusItems/CurrentBlockNumber'\nimport GasPrice from './StatusItems/GasPrice'\n// import GasLimit from './StatusItems/GasLimit'\nimport HardforkName from './StatusItems/HardforkName'\nimport NetworkId from './StatusItems/NetworkId'\nimport RpcServer from './StatusItems/RpcServer'\nimport Currency from './StatusItems/Currency'\nimport Signer from './StatusItems/Signer'\nimport StateTime from './StatusItems/StateTime'\nimport { withGlobalState } from '../../Context'\nimport { useTheme } from '../../Theme'\nimport GlobalToggle from './GlobalToggle'\nimport Syncing from './StatusItems/Syncing'\n\nclass StatusBar extends Component {\n  renderItem = (item, provider) => {\n    const { createdAt } = provider || { createdAt: 'not_set' }\n    const { name, exclude } = item\n    // this is a trick: detect if the provider instance has changed\n    // it will trigger a re-mount on all status items\n    const key = name+'_'+createdAt\n    if (exclude) {\n      return\n    }\n    if (name === 'sync') {\n      return <Syncing key={key} provider={provider} block={this.props.currentBlock} />\n    } \n    if (name === 'current_block') {\n      return <CurrentBlockNumber key={key} provider={provider} block={this.props.currentBlock} />\n    } \n    else if(name === 'state_time'){\n      return <StateTime key={key} />\n    }\n    else if(name === 'gas_price'){\n      return <GasPrice key={key} provider={provider} />\n    }\n    /* <GasLimit provider={provider} /> */ \n    else if(name === 'hardfork'){\n      return <HardforkName key={key} provider={provider} />\n    }\n    else if(name === 'network'){\n      return <NetworkId key={key} provider={provider} />\n    }\n    else if(name === 'provider'){\n      return <RpcServer key={key} provider={provider} />\n    }  \n    else if(name === 'currency'){\n      return <Currency key={key}/>\n    }  \n    else if(name === 'signer'){\n      return <Signer key={key} provider={provider}/>\n    }\n    else if(name === 'alias'){\n      return <GlobalToggle key={key} label=\"Alias\" name={\"alias\"} options={[true, false]} />\n    }\n    else if(name === 'time'){\n      return <GlobalToggle key={key} label=\"Time\" name={\"time\"} options={['block', 'unix']} />\n    }           \n    else if(name === 'theme'){\n      return <GlobalToggle key={key} label=\"Theme\" name={\"theme\"} options={['light', 'dark']}  />\n    } \n  }\n  render() {\n    const { provider, global } = this.props\n    const theme = useTheme(global)\n\n    const items = global.state.statusBarItems\n\n    return (\n      <div className=\"StatusBar\" style={{\n        display: 'flex',\n        backgroundColor: theme.statusBar.backgroundColor,\n        padding: 5,\n        marginBottom: 5,\n        fontSize: '0.8rem',\n        boxShadow: 'rgba(31, 30, 30, 0.1) 0px 2px 4px 0px'\n      }}>\n        {\n          items.map(item => this.renderItem(item, provider))\n        }\n      </div>\n    )\n  }\n}\n\nexport default withGlobalState(StatusBar)\n","import React from 'react'\nimport moment from 'moment'\n\nexport default function DateField({ ts, relative = false, style }) {\n  return (\n    <span style={{\n      ...style\n    }}>\n      { relative\n      ? moment.unix(ts).from()\n      : moment.unix(ts).format(\"YYYY-MM-DD HH:mm:ss\") \n      }\n    </span>\n  )\n}\n","import React, { Component } from 'react'\n\nexport default class Pill extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: '#08a79c',\n        paddingLeft: 10,\n        paddingRight: 10,\n        paddingTop: 5,\n        paddingBottom: 5,\n        borderRadius: 20,\n        color: 'white',\n        alignSelf: 'center'\n      }}>{this.props.children}</div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Gas extends Component {\n  render() {\n    const { gas } = this.props\n    // const gasPriceGwei = 10\n    return (\n      <span style={{\n      }}>\n        { gas !== undefined ? gas.toString() : 'undefined' }\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ListItem from '../../../widgets/ListItem'\nimport DateField from '../../../widgets/DateField'\nimport Pill from '../../../widgets/Pill'\nimport Address from '../../../widgets/Address'\nimport Gas from '../../../widgets/Gas'\n\nfunction BlockInfo({ number }) {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'left',\n      padding: 5,\n      marginRight: 5\n    }}>\n      <span>Block</span>\n      <span style={{\n        fontWeight: 'bold',\n      }}># { number }</span>\n    </div>\n  )\n}\n\nfunction TxInfo({ txHashes }) {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'left',\n      padding: 5\n    }}>\n\n      <Pill>{ txHashes.length } Transactions</Pill>\n    </div>\n  )\n}\n\nexport default class Block extends Component {\n  render() {\n    const { block } = this.props\n    const {\n      parentHash,\n      hash,\n      number,\n      difficulty,\n      timestamp,\n      nonce,\n      // extraData,\n      // gasLimit,\n      gasUsed,\n      miner,\n      transactions: txHashes\n    } = block\n    return (\n      <ListItem className=\"BlockListItem\" to={`/blocks/${number}`}>\n        <BlockInfo number={number} />\n        <div style={{\n          flex: 1,\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <span>Hash: { hash }</span>\n          <span>Parent: { parentHash.toString() }</span>\n          <span>Nonce: { nonce }</span>\n          <span>Difficulty: { difficulty }</span>\n          <span>Gas Used: <Gas gas={gasUsed} /></span>\n          <span>Mined: <DateField ts={timestamp} /> by: <Address address={miner} /></span>\n        </div>\n        <TxInfo txHashes={txHashes} />\n      </ListItem>\n    )\n  }\n}\n\n","\nexport class DataProvider {\n  constructor(provider) {\n    this.provider = provider\n  }\n  getAllAddresses = async () => {\n    const accounts = await this.provider.listAccounts()\n    return [...accounts]\n  }\n  getBlocks = async (end, start=0) => {\n    const blocks = []\n    let i = Math.max(start, 0)\n    while (i <= end) {\n      const block = await this.provider.getBlock(i)\n      blocks.push(block)\n      i++\n    }\n    return blocks\n  }\n  getAllTransactionForBlock = async (block) => {\n    if (!block) return []\n    const { transactions: txHashes } = block\n    const transactions = []\n    for (const txHash of txHashes) {\n      const transaction = await this.provider.getTransaction(txHash)\n      transactions.push(transaction)\n    }\n    return transactions\n  }\n  getAllTransactions = async () => {\n    const latestBlock = await this.provider.getBlockNumber()\n    const blocks = await this.getBlocks(latestBlock)\n    const transactions = []\n    for (const block of blocks) {\n      const tx = await this.getAllTransactionForBlock(block)\n      transactions.push(...tx)\n    }\n    return transactions\n  }\n  getAllTxByContract = async (contractAddress) => {\n    const allTx = await this.getAllTransactions()\n    const contractTx = allTx.filter(tx => tx.to === contractAddress || tx.creates === contractAddress)\n    return contractTx\n  }\n  getAllContracts = async () => {\n    const transactions = await this.getAllTransactions()\n    const contractCreations = transactions.filter(tx => tx.creates).map(tx => tx.hash)\n    const receipts = []\n    for (const txHash of contractCreations) {\n      const receipt = await this.provider.getTransactionReceipt(txHash)\n      receipts.push(receipt)\n    }\n    return receipts\n  }\n}\n\nexport const getDataProvider = provider => new DataProvider(provider)","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\nimport List from '../widgets/List'\n\n/*\n * a list whose data provider is set to the global ethereum provider\n * if the provider is changed it will request a re-render\n */\nclass ProviderList extends Component {\n  render() {\n    const { global, className, elements, itemName, loadItems, renderItem, processItems } = this.props\n    const { state } = global\n    const { provider } = state\n    return (\n      <List \n        className={className}\n        elements={elements}\n        dataSource={provider.createdAt}\n        itemName={itemName}\n        loadItems={() => loadItems(provider)}\n        processItems={processItems}\n        renderItem={item => renderItem({ provider, item }) }\n      />\n    )\n  }\n}\n\nexport default withGlobalState(ProviderList)\n","import React, { Component, Fragment } from 'react'\nimport Container from './Container'\nimport Button from './Button'\nimport { withGlobalState } from '../Context'\n\nclass NoConnection extends Component {\n  renderError() {\n    return (\n      <Container>\n        <h2>No connection to the Ethersnet ;-( </h2>\n        <Button>Fix it</Button>\n      </Container>\n    )\n  }\n  render() {\n    const { children } = this.props\n    const { global } = this.props\n    const { state: globalState } = global\n    const { isConnected } = globalState\n    return (\n      <Fragment>\n        { isConnected\n        ? { ...children }\n        : this.renderError()\n        }\n      </Fragment>\n    )\n  }\n}\n\nexport default withGlobalState(NoConnection)\n","import React, { Component } from 'react'\nimport Block from './BlockListItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class BlockList extends Component {\n  render() {\n    const latestBlock = undefined\n    let { start, end } = this.props\n    end = latestBlock || end\n    start = Math.max(end - 100, 0)\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"BlockList\"\n            itemName=\"Blocks\"\n            elements={() => <div>Block: {start}-{end}</div>}\n            loadItems={provider => getDataProvider(provider).getBlocks(end, start)}\n            processItems={items => items.reverse()} // display latest block first\n            renderItem={({ provider, item: block}) => <Block key={block.number} block={block} /> }\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React from 'react'\nimport { useTheme } from '../Theme'\nimport { withGlobalState } from '../Context'\nimport Text from './Text'\n\nexport const LabeledField = withGlobalState(({ children, label, value, valueEl, style = {}, alignValue = 'left', global, styleValue = {} }) => {\n  const theme = useTheme(global)\n  return (\n    <div style={{\n      padding: 5,\n      display: 'flex',\n      flexDirection: 'column',\n      ...style\n    }}>\n      <div style={{ \n        fontSize: '0.8rem', \n        color: theme.field.label.color,\n        alignSelf: alignValue,\n      }}>\n        <Text>{label}</Text>\n      </div>\n      <div style={{\n        color: theme.field.value.color,\n        alignSelf: alignValue,\n        ...styleValue\n      }}>\n        {\n          typeof valueEl === 'function'\n          ? valueEl()\n          : (value !== undefined ? value.toString() : (children || undefined))\n        }\n      </div>\n    </div>\n  )\n})","import React, { Component } from 'react'\nimport Clickable from './Clickable'\nimport DateField from './DateField'\nimport { withGlobalState } from '../Context'\n\nclass BlockTime extends Component {\n  state = {\n    block: undefined,\n    error: undefined\n  }\n  componentDidMount = async () => {\n    const { block: blockNumber, global } = this.props\n    const { state: globalState } = global\n    const { provider } = globalState\n    try {\n      const block = await provider.getBlock(blockNumber)\n      this.setState({\n        block\n      })\n    } catch (error) {\n      this.setState({ error })\n    }\n  }\n  render() {\n    const { block, error } = this.state\n    const { block: blockNumber, global } = this.props\n    const { state: globalState } = global\n\n    let blockTime = blockNumber\n    if (globalState.time === 'unix') {\n      blockTime = block ? block.timestamp : 0\n    }\n\n    return (\n      <Clickable style={{\n        ...this.props.style\n      }}>\n        { error\n          ? <span>{error.message}</span>\n          : globalState.time === 'block' ?  `#${blockTime}` : <DateField ts={blockTime} />\n        }\n      </Clickable>\n    )\n  }\n}\n\nexport default withGlobalState(BlockTime)\n","import React, { Component } from 'react'\nimport { Row } from '../../../widgets/Row'\nimport { Column } from '../../../widgets/Column'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport ListItem from '../../../widgets/ListItem'\nimport Pill from '../../../widgets/Pill'\nimport Address from '../../../widgets/Address'\nimport EthValue from '../../../widgets/EthValue'\nimport Gas from '../../../widgets/Gas'\nimport BlockTime from '../../../widgets/BlockTime'\n\nexport default class TransactionItem extends Component {\n  state = {\n    receipt: undefined\n  }\n  componentDidMount = async () => {\n    const { provider, tx } = this.props\n    const { hash: txHash } = tx\n    const receipt = await provider.getTransactionReceipt(txHash)\n    this.setState({\n      receipt\n    })\n  }\n  render() {\n    const { receipt } = this.state\n    const { tx } = this.props\n    const {\n      // Only available for mined transactions\n      // blockHash,\n      blockNumber,\n      // timestamp,\n\n      // Exactly one of these will be present (send vs. deploy contract)\n      // They will always be a properly formatted checksum address\n      creates,\n      to,\n\n      hash,\n\n      // See above \"Transaction Requests\" for details\n      // data,\n      from,\n      // gasLimit,\n      // gasPrice,\n      // nonce,\n      value,\n\n      // The chain ID; 0 indicates replay-attack vulnerable\n      // (eg. 1 = Homestead mainnet, 3 = Ropsten testnet)\n      // chainId,\n\n      // r, s, v,\n      // raw\n    } = tx\n\n    const {\n      gasUsed,\n\n      blockNumber: blockNumberMined,\n\n      contractAddress\n    } = (receipt || {})\n    return (\n      <ListItem style={{\n        flexDirection: 'column'\n      }} to={`/transactions/${hash}`}>\n        <Row>\n          <LabeledField label=\"Tx Hash\" value={hash} />\n          <Pill>{creates ? 'Contract Creation' : 'Contract Call' }</Pill>\n        </Row>\n        <Row>\n          <Column>\n            <LabeledField label=\"From Address\">\n              <Address address={from} />\n            </LabeledField>\n          </Column>\n          <Column>\n            <LabeledField label={contractAddress ? \"Contract Address\" : \"To Address\"}>\n              <Address address={to || contractAddress} contract={contractAddress ? true : false} />\n            </LabeledField>\n          </Column>\n          <Column>\n            <LabeledField label=\"Value\" >\n              <EthValue wei={value} />\n            </LabeledField>\n          </Column>\n          <Column>\n            <LabeledField label=\"Gas Used\" alignValue={'flex-end'}>\n              <Gas gas={gasUsed} />\n            </LabeledField>\n          </Column>\n        </Row>\n        <Row style={{\n          justifyContent: 'normal'\n        }}>\n          <LabeledField label=\"Block Created\">\n            <BlockTime block={blockNumber} />\n          </LabeledField>\n          <LabeledField label=\"Block Mined\" >\n            <BlockTime block={blockNumberMined} />\n          </LabeledField>\n        </Row>\n\n        {/*\n        <span>block hash: { blockHash }</span>\n        <span>block #: { blockNumber }</span>\n        <span>timestamp: { timestamp }</span>\n\n        <span>creates: { creates }</span>\n        <span>to: { to }</span>\n\n        <span>data: { data }</span>\n        <span>from: { from }</span>\n        <span>gasLimit: { gasLimit && gasLimit.toString() }</span>\n        <span>gasPrice: { gasPrice && gasPrice.toString() }</span>\n        <span>nonce: { nonce }</span>\n        <span>value: { value && value.toString() }</span>\n\n        <span>chain id: { chainId }</span>\n        <span>raw sig: { raw }</span>\n        */}\n\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TransactionItem from './TransactionItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class TransactionList extends Component {\n  render() {\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"TransactionList\"\n            itemName=\"Transactions\"\n            loadItems={provider => getDataProvider(provider).getAllTransactions()}\n            processItems={items => items.reverse()}\n            renderItem={({ provider, item: tx}) => <TransactionItem key={tx.hash} provider={provider} tx={tx} /> }\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Button from './Button'\nimport { withRouter } from 'react-router-dom'\n\nclass NavButton extends Component {\n  render() {\n    const { label, children, to } = this.props\n    return (\n      <Button label={label} onClick={() => this.props.history.push(to)}>{children}</Button>\n    )\n  }\n}\n\nexport default withRouter(NavButton)\n","import React, { Component } from 'react'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport ListItem from '../../../widgets/ListItem'\nimport Address from '../../../widgets/Address'\nimport EthValue from '../../../widgets/EthValue'\nimport NavButton from '../../../widgets/NavButton'\n\nexport default class AccountListItem extends Component {\n  state = {\n    balance: '',\n    txCount: -1\n  }\n  componentDidMount = async () => {\n    const { provider, address } = this.props\n    const balance = await provider.getBalance(address)\n    const txCount = await provider.getTransactionCount(address)\n    this.setState({ balance, txCount })\n  }\n  render() {\n    const { address} = this.props\n    const { balance, txCount } = this.state\n    return (\n      <ListItem className=\"AccountListItem\" to={`/accounts/${address}`} style={{\n        justifyContent: 'space-between'\n      }}>\n        <LabeledField label=\"Address\" valueEl={() => <Address address={address} /> } style={{\n          flexBasis: '30em'\n        }}/>\n        <LabeledField label=\"Balance\" style={{\n          flexBasis: '15em',\n        }}>\n          <EthValue wei={balance} />\n        </LabeledField>\n        <LabeledField \n          label=\"Tx Count\" \n          value={ txCount || 0} \n          style={{\n            alignSelf: 'right'\n          }} \n          styleValue={{\n            paddingTop: 5\n          }}\n        />\n        <NavButton to={`/transactions/new/${address}`} label={\"send\"} />\n      </ListItem>\n    )\n  }\n}\n\n","export default class Storage {\n  static instance;\n  cache = {}\n  constructor() {\n    this.indexedDB = window.indexedDB\n  }\n  static async getInstance() {\n    if(!Storage.instance) {\n      Storage.instance = new Storage()\n      // await Storage.instance.open()\n    }\n    return Storage.instance\n  }\n  async open() { \n    const dbVersion = 1;\n    const request = indexedDB.open(\"ethGUI\", dbVersion);\n    return this.waitRequest(request)\n  }\n  waitRequest(request) {\n    return new Promise((resolve, reject) => {\n      request.onsuccess = function (event) {\n        console.log('storage opened')\n        resolve(event)\n      }\n    })\n  }\n  _makeKey(data) {\n    // var crypto = require('crypto');\n    // return crypto.createHash('md5').update(data).digest(\"hex\");\n    // console.log('key', data)\n    return data.length\n  }\n  async put(key, value){\n    const _key = this._makeKey(key)\n    // console.log('store key', _key)\n    this.cache[_key] = value\n  }\n  async get(key) {\n    const _key = this._makeKey(key)\n    // console.log('get key', _key)\n    return this.cache[_key]\n  }\n}","import { ethers } from \"ethers\"\nimport Storage from \"./Storage\"\n\nexport const parseTransaction = (abi, tx) => {\n  // TODO memoize\n  const _interface = new ethers.utils.Interface(abi)\n  const parsed = _interface.parseTransaction(tx)\n  return parsed\n}\n\nexport const tryParseTransaction = (tx, abi) => {\n  // TODO try to do abi or hash lookup by tx.data, tx address or bytecode\n  // TODO is bug? parsed constructor = null\n  const parsed = parseTransaction(abi, tx)\n  return parsed ? parsed : {\n    name: 'constructor'\n  }\n}\n\nexport const createFundedTestAccount = async (provider) => {\n  // https://github.com/paritytech/wiki/blob/master/JSONRPC-personal-module.md#personal_newaccount\n  // it becomes the new current unlocked account. There can only be one unlocked account at a time.\n  const password = ''\n  const newAccount = await provider.send('personal_newAccount', [ password ])\n\n  const accounts = await provider.listAccounts()\n  const coinbase = await provider.getSigner(accounts[0]);\n  const unlocked = await coinbase.unlock(password)\n  if (!unlocked) {\n    throw new Error('Could not unlock coinbase')\n  }\n\n  const amount = ethers.utils.parseEther('100.0');\n  const txRaw = {\n      to: newAccount,\n      value: amount\n  };\n\n  const tx = await coinbase.sendTransaction(txRaw);\n  return tx\n}\n\n\nexport const getCompilerData = async (bytecode) => {\n  const storage = await Storage.getInstance()\n  return undefined\n  // return storage.get(bytecode)\n}","import React, { Component } from 'react'\nimport AccountItem from './AccountListItem'\nimport Button from '../../../widgets/Button'\nimport { createFundedTestAccount } from '../../../js/utils'\nimport Container from '../../../widgets/Container'\nimport Connectivity from '../../../widgets/Connectivity'\nimport ProviderList from '../../ProviderList'\n\nexport default class AccountsList extends Component {\n  addAccount = async () => {\n    /* FIXME refresh logic\n    const { provider } = this.props\n    await createFundedTestAccount(provider)\n    this.loadAccounts()\n    */\n  }\n  render() {\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"AccountList\"\n            elements={() => (\n              <div>\n                <Button onClick={this.addAccount} >Add</Button>\n                <Button onClick={this.loadAccounts} >Refresh</Button>\n              </div>\n            )}\n            itemName=\"accounts\"\n            loadItems={(provider) => provider.listAccounts()}\n            renderItem={({ provider, item: address }) => <AccountItem key={address} provider={provider} address={address} /> }\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ListItem from '../../../widgets/ListItem'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport Pill from '../../../widgets/Pill'\nimport Address from '../../../widgets/Address'\nimport BlockTime from '../../../widgets/BlockTime'\n\nexport default class ContractListItem extends Component {\n  render() {\n    const { contract } = this.props\n    const { contractAddress, blockNumber } = contract\n    return (\n      <ListItem to={`/contracts/${contractAddress}`} style={{ justifyContent: 'space-between' }} >\n        <LabeledField label={'Block'}>\n          <BlockTime block={blockNumber} />\n        </LabeledField>\n        <LabeledField label={'Name'}>\n          <span>Unnamed</span>\n        </LabeledField>\n        <LabeledField label={'Address'}>\n          <Address address={contractAddress} contract={true} style={{\n            paddingLeft: 5,\n            paddingRight: 5\n          }} />\n        </LabeledField>\n        <Pill>Deployed</Pill>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ContractListItem from './ContractListItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport NavButton from '../../../widgets/NavButton'\nimport Modal from '../../../widgets/Modal'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class Contracts extends Component {\n  state = {\n    showPrompt: false\n  }\n  bookmarkContract = () => {\n    this.setState({\n      showPrompt: true\n    })\n  }\n  importContract = () => {\n    // allows to import a contract\n    // from another chain at a given block / state\n    // can be auto-synced downstream\n  }\n  render() {\n    const { showPrompt } = this.state\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            elements={() => (\n              <div>\n                <NavButton to={'/contracts/new'} label=\"New\" />\n                {/*\n                <Button onClick={this.bookmarkContract} label=\"Bookmark\" />\n                <Button onClick={this.importContract} label=\"Import\" />\n                */}\n              </div>\n            )}\n            itemName=\"contracts\"\n            loadItems={provider => getDataProvider(provider).getAllContracts()}\n            renderItem={({ provider, item: contract }) => <ContractListItem key={contract.contractAddress} provider={provider} contract={contract} />}\n          />\n          <Modal onClose={() => this.setState({ showPrompt: false })} show={showPrompt} />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Select extends Component {\n  render() {\n    const { options = [], label } = this.props\n    return (\n      <div style={{\n        display: 'inline-flex',\n        flexDirection: 'column',\n      }}>\n        <label htmlFor={label}>{label}</label>\n        <select id={label} style={{ marginTop: 5 }}>\n          {\n            options.map(option => <option key={option} value={option}>{option}</option>)\n          }\n        </select>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Text from './Text'\n\nexport default class Switch extends Component {\n  render() {\n    const { checked = false, label, onChecked = () => { }, style = {} } = this.props\n    return (\n      <span style={{\n        marginLeft: 5,\n        marginRight: 10,\n        ...style\n      }}>\n\n        <input type=\"checkbox\" id=\"scales\" name=\"scales\" checked={checked} onChange={(ev) => {\n          const exclude = !ev.target.checked\n          onChecked(exclude)\n        }} />\n        <Text style={{\n          fontWeight: 'bold',\n          color: style.color\n        }}>{label}</Text>\n      </span>\n\n    )\n  }\n}\n","// TODO replace with remote: https://github.com/philipplgh/remote\nexport const remote = (worker) => {\n  let id = 0\n  return new Proxy({}, {\n    get(target, prop) {\n      return (...args) => new Promise((resolve, reject) => {\n        const requestId = id\n        worker.postMessage({\n          id: id++,\n          method: prop,\n          arguments: [...args]\n        })\n        let responseHandler = function (event) {\n          const { data } = event\n          const { result, id: responseId, error } = data\n          if (requestId === responseId) {\n            worker.removeEventListener('message', this)\n            if (error) {\n              return reject(error)\n            }\n            resolve(result)\n          }\n        }\n        worker.addEventListener('message', responseHandler)\n      })\n    }\n  })\n}","import React, { Component } from 'react'\nimport { Row } from '../../../widgets/Row'\nimport Select from '../../../widgets/Select'\nimport Switch from '../../../widgets/Switch'\nimport CompilerWorker from '../../../js/Compiler.worker'\nimport { remote } from '../../../js/remote'\nimport Button from '../../../widgets/Button'\n\nexport default class Compiler extends Component {\n  state = {\n    compiler: undefined,\n    compilerVersions: [],\n    compiling: false,\n    result: undefined\n  }\n  componentDidMount = async () => {\n    const compiler = remote(new CompilerWorker())\n    this.setState({ compiler })\n\n    const compilerVersions = await compiler.getVersions()\n    this.setState({\n      compilerVersions: [...compilerVersions]\n    })\n  }\n  compile = async () => {\n    const { source, onData = () => {} } = this.props\n    const { compiler } = this.state\n    this.setState({\n      compiling: true\n    })\n    try {\n      const result = await compiler.compile(source)\n      this.setState({\n        compiling: false,\n        result\n      })\n      onData(result)\n    } catch (error) {\n      this.setState({\n        compiling: false,\n      })\n      alert('compiler crashed'+error.message)\n    }\n  }\n  render() {\n    const { source } = this.props\n    const { compiling, compilerVersions, result } = this.state\n    return (\n      <div>\n        <Row style={{\n          marginBottom: 10,\n          marginTop: 10,\n          padding: 20,\n          border: '1px solid #80808040',\n          justifyContent: 'normal',\n          alignItems: 'flex-end'\n        }}>\n          <Select label={\"Compiler version:\"} options={compilerVersions} />\n          <Button \n            style={{\n              marginLeft: 20,\n              marginRight: 20\n            }}\n            enabled={!!source && !compiling}\n            label=\"Compile\"\n            icon={compiling ? 'Spinner' : 'Play'}\n            onClick={this.compile}\n          />\n          <Switch style={{ alignSelf: 'flex-end' }} label=\"compile on change\"></Switch>\n        </Row>\n        <Row>\n        {result && result.errors && \n          result.errors.map((error, idx) => <span key={idx}>Compiler error: <pre>{error.formattedMessage}</pre></span>)\n        }\n        </Row>\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nconst readFile = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = (evt) => {\n    resolve(reader.result)\n  }\n  reader.readAsText(file)\n})\n\nexport default class FileChooser extends Component {\n  handleFiles = async (evt) => {\n    const files = evt.target.files; // FileList object\n    if (!files.length) {\n      alert('Please select a file!');\n      return;\n    }\n    const file = files[0]\n    let content = await readFile(file)\n    if (file.name.endsWith('.json')) {\n      content = JSON.parse(content)\n    }\n    this.props.onData(content)\n  }\n  render() {\n    return (\n      <Fragment>\n        <input type=\"file\" id=\"files\" name=\"files[]\" onChange={this.handleFiles} />\n      </Fragment>\n    )\n  }\n}","export class Visitor {\n  visit(node, callback = () => { }, context = {}) {\n    const contextNew = callback(node, context)\n    const childNodes = node.nodes || []\n    for (const child of childNodes) {\n      this.visit(child, callback, {\n        ...context,\n        ...contextNew\n      })\n    }\n  }\n}\n\nexport const transformTree = (t1, transformer) => {\n  const initialContext = {}\n  const visitor = new Visitor()\n  visitor.visit(t1, (node, context) => {\n    const newNode = transformer(node)\n    if (context.lastNode) {\n      context.lastNode.children.push(newNode)\n    } else {\n      context.root = newNode\n    }\n    return {\n      lastNode: newNode\n    }\n  }, initialContext)\n  return initialContext.root\n}\n\nexport const getNodes = (tree) => {\n  const visitor = new Visitor()\n  const nodes = [] // depth first\n  visitor.visit(tree, (node) => nodes.push(node) )\n  return nodes\n}","import React, { Component } from 'react'\nimport ReactJson from 'react-json-view'\nimport Tree from '../../../../widgets/Tree'\nimport { transformTree } from '../../../../js/TreeWalker'\n\nexport default class JsonTreeView extends Component {\n  renderTree(ast) {\n    if (!ast) {\n      return <span>No data</span>\n    }\n    console.log('ast', ast)\n    const transformer = node => ({\n      name: node.nodeType || 'root',\n      attributes: {\n        name: node.name,\n        // type: node.nodeType === \"VariableDeclaration\" && node.typeDescription.typeString ? node.typeDescription.typeString : ''\n      },\n      children: []\n    })\n    const d3Tree = ast ? transformTree(ast, transformer) : undefined\n    console.log('t', d3Tree)\n    return (\n      <Tree data={d3Tree} style={{\n        border: '1px solid gray'\n      }} />\n    )\n  }\n  renderJSON(data) {\n    return (\n      <ReactJson\n        src={data}\n        theme=\"monokai\"\n        name=\"storage\"\n        displayDataTypes={false}\n        enableClipboard={false}\n        style={{\n          padding: 10,\n          flex: 1\n        }}\n      />\n    )\n  }\n  render() {\n    const { data } = this.props\n    const isTree = true\n    return (\n      <div style={{\n        display: 'flex',\n        flex: 1\n      }}>\n        {isTree\n          ? this.renderTree(data)\n          : this.renderJSON(data)\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport FileChooser from '../../../../widgets/FileChooser'\nimport Tab from '../../../../widgets/Tab'\nimport JsonTreeView from './JsonTreeView'\n\nexport default class CodeTab extends Component {\n  state = {\n    value: '',\n    hasFocus: false\n  }\n  handleChange = (ev) => {\n    this.setState({\n      value: ev.target.value\n    })\n    this.props.onChange(ev.target.value)\n  }\n  renderOverlay() {\n    const { onData } = this.props\n    return (\n      <div style={{\n        display: 'flex',\n        position: 'absolute',\n        backgroundColor: '#cecece29',\n        left: '50%',\n        width: 200,\n        marginLeft: -110,\n        padding: 20,\n        top: '40%',\n      }}>\n        <FileChooser onData={onData} />\n      </div>\n    )\n  }\n  onFocus = () => {\n    this.setState({ hasFocus: true })\n  }\n  onBlur = () => {\n    this.setState({ hasFocus: false })\n  }\n  render() {\n    const { source, label } = this.props\n    let { value, hasFocus } = this.state\n    value = source || value\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value, null, 2)\n    }\n    return (\n      <Tab label=\"Source\"\n        onBlur={this.onBlur}\n        style={{\n          flex: 1,\n          overflow: 'auto'\n        }}\n      >\n        <div style={{\n          position: 'relative',\n          display: 'flex',\n          flex: 1\n        }}>\n          {label === 'AST'\n            ? <JsonTreeView data={source} />\n            : <textarea\n              readOnly={false}\n              style={{\n                backgroundColor: hasFocus ? 'transparent' : '#cacaca17',\n                flex: 1\n              }}\n              value={value}\n              onChange={this.handleChange}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n            />\n          }\n          {!hasFocus && !value && this.renderOverlay()}\n        </div>\n      </Tab >\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row } from '../../../../widgets/Row'\nimport Tabs from '../../../../widgets/Tabs'\nimport { getCompilerData } from '../../../../js/utils'\nimport Compiler from '../Compiler'\nimport CodeTab from './CodeTab'\n\nexport default class ContractCode extends Component {\n  state = {\n    code: '',\n    abi: '',\n    bytecode: '',\n    contractCode: '',\n    bytecodeMatch: undefined,\n  }\n  componentDidMount() {\n    const { address } = this.props\n    if (!address) {\n      return\n    }\n    this.loadArtifacts()\n  }\n  loadArtifacts = async () => {\n    const { provider, address } = this.props\n    const contractCode = await provider.getCode(address)\n    this.setState({ contractCode })\n    // try to fetch compiler info based on contract code\n    const solcArtifacts = await getCompilerData(contractCode)\n    if (solcArtifacts) {\n      this.handleSolcArtifacts(solcArtifacts, false)\n    }\n  }\n  handleCompilerData = (output) => {\n    const { source } = this.state\n    // TODO\n    const ast = undefined\n\n    const contracts = output.contracts['file.sol']\n    const contractName = Object.keys(contracts)[0]\n    const contract = contracts[contractName]\n    const { abi, evm } = contract\n    const { bytecode, deployedBytecode } = evm\n    // todo bring in form: \n    const artifact = {\n      source,\n      abi,\n      bytecode: bytecode.object,\n      ast\n    }\n    this.handleSolcArtifacts(artifact)\n  } \n  handleSolcArtifacts = (data) => {\n    const { contractCode } = this.state\n    const { source, abi, bytecode, ast } = data\n    /*\n    // https://ethereum.stackexchange.com/questions/195/how-can-i-verify-that-a-contract-on-the-blockchain-matches-the-source-code\n    const bytecodeMatch = contractCode && contractCode === bytecode\n    */\n    let bytecodeMatch = true\n\n    this.setState({\n      source,\n      abi,\n      ast,\n      bytecode,\n      bytecodeMatch\n    })\n    this.props.onData(data)\n  }\n  renderPlaceholder() {\n    return (\n      <div style={{\n        height: 100,\n        width: '100%',\n        border: '1px dashed black'\n      }}>\n      </div>\n    )\n  }\n  render() {\n    const { bytecodeMatch, source } = this.state\n    const { compiler } = this.props\n\n    const tabs = [\n      { label: 'Source', data: 'source' }\n      , { label: 'Contract Code', data: 'contractCode' }\n      , { label: 'Bytecode', data: 'bytecode' }\n      , { label: 'ABI', data: 'abi' }\n      , { label: 'AST', data: 'ast' }\n    ]\n\n    return (\n      <div\n        className=\"ContractCode\"\n        style={{\n          margin: 10,\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          ...this.props.style\n        }}>\n        { compiler === 'top' && <Compiler source={source} onData={this.handleCompilerData} /> }\n        <Tabs>\n          {tabs.map(t => <CodeTab \n            key={t.label} \n            label={t.label} \n            source={this.state[t.data]}\n            onChange={value => {\n              const change = {}\n              change[t.data] = value\n              this.handleSolcArtifacts(change) \n            }} \n            onData={value =>  {\n              // handle case where file is plain string and not .json\n              if (typeof value === 'string') {\n                const change = {}\n                change[t.data] = value\n                value = change\n              }\n              this.handleSolcArtifacts(value)\n            }} \n          />)}\n        </Tabs>\n        { compiler === 'bottom' && <Compiler source={source} onData={this.handleCompilerData} /> }\n        <div style={{\n          border: '1px solid #80808040',\n        }}>\n          {bytecodeMatch === false &&\n            <Row style={{\n              padding: 10,\n              justifyContent: 'normal',\n              letterSpacing: 1,\n              fontWeight: 'bold'\n            }}>\n              <span style={{ color: 'red', paddingRight: 5 }}>!!! WARNING !!! </span><span>Generated bytecode does not match deployed code</span>\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Button from '../../../widgets/Button'\nimport { ethers } from 'ethers'\nimport ContractCode from './ContractCode/ContractCode'\nimport { Row } from '../../../widgets/Row'\nimport { NavLink } from 'react-router-dom'\n\nexport default class CreateContractView extends Component {\n  state = {\n    source: '',\n    abi: '',\n    contract: undefined\n  }\n  handleData = (data) => {\n    const { abi, source, bytecode } = data\n    this.setState({\n      abi,\n      source,\n      bytecode\n    })\n  }\n  deployContract = async () => {\n    const { abi, bytecode } = this.state\n    // TODO show confirmation modal\n    const { provider } = this.props\n    const accounts = await provider.listAccounts()\n    // TODO global signer\n    const signer = await provider.getSigner(accounts[0]);\n    const password = ''\n    const unlocked = await signer.unlock(password)\n    console.log('unlocked?', unlocked)\n    // Create an instance of a Contract Factory\n    const factory = new ethers.ContractFactory(abi, bytecode, signer);\n    // Notice we pass in \"Hello World\" as the parameter to the constructor\n    const contract = await factory.deploy();\n    this.setState({\n      contract\n    })\n    console.log('contract', contract)\n    // TODO toast alert('deployed')\n  }\n  render() {\n    const { abi, bytecode, contract } = this.state\n    const { provider } = this.props\n    return (\n      <Container header=\"New Contract\">\n        <Row style={{ justifyContent: 'normal', marginTop: 20, marginLeft: 10, marginRight: 10, alignItems: 'center' }}>\n          { contract && <span style={{ marginLeft: 10, textDecoration: 'underscore' }}>Deployed at: <NavLink to={`/contracts/${contract.address}`}>{contract.address}</NavLink>></span>}\n          <Button \n            style={{\n              color: '#08a79c',\n              fontWeight: 'bold',\n              marginLeft: 'auto' // move to right \"justifySelf\"\n            }}\n            enabled={!!abi && !!bytecode}\n            onClick={this.deployContract} \n            icon=\"CodeBranch\"\n            label=\"Deploy\"\n          />\n        </Row>\n        <ContractCode\n          provider={provider}\n          onData={this.handleData}\n          compiler=\"top\"\n        />\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport { withRouter } from 'react-router-dom'\nimport Address from '../../../widgets/Address'\n\nclass AccountDetails extends Component {\n  render() {\n    const { match } = this.props\n    const { params } = match\n    const { address } = params\n    return (\n      <Container header={() => <Address label=\"Account\" address={address} />}>\n\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(AccountDetails)\n","import React, { Component } from 'react'\nimport ListItem from '../../../../widgets/ListItem'\nimport { Column } from '../../../../widgets/Column'\nimport { Row } from '../../../../widgets/Row'\nimport Gas from '../../../../widgets/Gas'\nimport BlockTime from '../../../../widgets/BlockTime'\nimport Address from '../../../../widgets/Address'\n\nexport default class TransactionItem extends Component {\n  state = { receipt: undefined }\n  componentDidMount = async () => {\n    const { tx } = this.props\n    try {\n      const { provider } = this.props\n      const receipt = await provider.getTransactionReceipt(tx.hash)\n      this.setState({ receipt })\n    } catch (error) {\n      \n    }\n  }\n  render() {\n    const { receipt } = this.state\n    const { tx, contract, idx } = this.props\n\n    let parsed\n    let calledFunctionName = '<unknown fn>'\n    try {\n      parsed = contract && contract.interface.parseTransaction(tx)\n      calledFunctionName = parsed ? parsed.name : (idx === 0 ? 'constructor' : calledFunctionName)\n    } catch (error) { }\n\n    const selectedBorder = '2px solid #08a79c'\n    return (\n      <ListItem\n        onClick={this.props.onClick}\n        style={{\n          flexDirection: 'column',\n          padding: 10,\n          margin: '0px 10px 0px 0px',\n          boxSizing: 'border-box',\n          borderTop: this.props.isSelected ? selectedBorder : '2px solid transparent',\n          borderBottom: this.props.isSelected ? selectedBorder : '2px solid #e6e6e6',\n          borderLeft: this.props.isSelected ? selectedBorder : '2px solid transparent',\n          borderRight: this.props.isSelected ? selectedBorder : '2px solid transparent',\n\n        }}>\n        <Column style={{\n          justifyContent: 'normal'\n        }}>\n          <span style={{\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}>\n            <span style={{ fontSize: '0.8rem' }}>At: <BlockTime block={tx.blockNumber} style={{ padding: 0 }} /> </span>\n            <span style={{ fontSize: '0.8rem' }}>Gas: <Gas gas={receipt ? receipt.gasUsed : undefined} /> </span>\n          </span>\n          <span style={{\n            fontWeight: 'bold',\n            padding: 5,\n            marginLeft: 20\n          }}>{calledFunctionName}({parsed && parsed.args ? JSON.stringify(...parsed.args) : ''})</span>\n        </Column>\n        <Row>\n          <span style={{ fontSize: '0.75rem' }}>By: <Address address={tx.from} /></span>\n        </Row>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TransactionItem from './TransactionItem'\nimport Text from '../../../../widgets/Text'\n\nexport default class ContractTransactionHistory extends Component {\n  state = {}\n  renderTransactions() {\n    const {\n      provider,\n      transactions,\n      selectedTransaction: selectedTx,\n      onSelect = () => { },\n      contractInterface\n    } = this.props\n    return (\n      transactions.map((tx, idx) =>\n        <TransactionItem\n          key={tx.hash}\n          provider={provider}\n          isSelected={selectedTx && tx.hash === selectedTx.hash}\n          tx={tx}\n          idx={idx}\n          contract={contractInterface}\n          onClick={() => onSelect(tx)}\n        />\n      )\n    )\n  }\n  render() {\n    const { transactions = [] } = this.props\n    return (\n      <div style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: 5\n      }}>\n        <Text\n          style={{\n            fontSize: '1.2rem',\n            padding: 6,\n            borderBottom: '1px solid #99999999'\n          }}\n          text={`Transactions (${transactions.length})`}\n        />\n        <div style={{\n          overflowY: 'auto',\n          flex: 1,\n        }}>\n          {this.renderTransactions()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Spinner from './Spinner'\n\nexport default class Overlay extends Component {\n  render() {\n    const { text, spinner } = this.props\n    return (\n      <div style={{\n        backgroundColor: 'rgba(144, 144, 144, 0.1)',\n        backdropFilter: 'blur(6px)',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>\n        { spinner && <Spinner size=\"1.5rem\" style={{ marginRight: 20 }} /> }\n        <span style={{\n          fontSize: '1.5rem',\n          fontWeight: 'bold',\n          color: 'rgba(238, 238, 238, 0.58)',\n        }}>{text}</span>\n      </div>\n    )\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from 'react'\nimport ReactJson from 'react-json-view'\nimport Address from '../../../widgets/Address'\nimport Switch from '../../../widgets/Switch'\nimport { Row } from '../../../widgets/Row'\nimport EthStateMachine from '../../../js/EthStateMachine'\nimport Overlay from '../../../widgets/Overlay'\n\nexport default class ContractState extends Component {\n  state = {\n    transactions: [],\n    storage: {\n    },\n    contractAddress: '',\n    isLoading: false\n  }\n  componentDidMount = async () => {\n    const { provider, address: contractAddress, transactions, until, ast } = this.props\n\n    this.setState({\n      contractAddress,\n      isLoading: true\n    })\n\n    const stateMachine = new EthStateMachine()\n    const { createdAddress, storage } = await stateMachine.replayContractTransactions(transactions, until)\n\n    // console.log('calculated storage', storage)\n    this.setState({\n      storage,\n      isLoading: false\n    })\n\n  }\n  handleSwitch = () => {\n\n  }\n  renderJson(jsonState) {\n    return (\n      <ReactJson\n        src={jsonState}\n        theme=\"monokai\"\n        name=\"storage\"\n        displayDataTypes={false}\n        enableClipboard={false}\n        style={{\n          flex: 1,\n          padding: 10,\n        }}\n      />\n    )\n  }\n  renderOverlay() {\n    return (\n      <Overlay spinner={true} text=\"calculating contract state...\" />\n    )\n  }\n  render() {\n    const { contractAddress } = this.props\n    const { storage, isLoading } = this.state\n    const jsonState = storage\n    return (\n      <div style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'rgba(0, 0, 0, 0.88)',\n        ...this.props.style\n      }}>\n        <Row>\n          <span style={{ paddingLeft: 5, color: 'white' }}>Contract: <Address address={contractAddress} /></span>\n          <Switch label=\"Decoded\" onSwitch={this.handleSwitch} style={{ color: 'white' }} />\n        </Row>\n        <div style={{\n          position: 'relative',\n          flex: 1\n        }}>\n          { this.renderJson(jsonState) }\n          { /* isLoading && this.renderOverlay() */ }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row } from '../../../../widgets/Row'\nimport BlockTime from '../../../../widgets/BlockTime'\nimport Address from '../../../../widgets/Address'\nimport ContractState from '../ContractState'\nimport Console from '../../../console/Console'\nimport Overlay from '../../../../widgets/Overlay'\n\nexport default class ContractConsole extends Component {\n  renderOverlay() {\n    return (\n      <Overlay text=\"Add ABI to interact with contract\" />\n    )\n  }\n  render() {\n    const { signerAddress, selectedTx, contractProxy } = this.props // for console\n    const { provider, transactions = [], contractAddress } = this.props // for state\n    return (\n      <div style={{\n        position: 'relative',\n        flex: 1,\n        display: 'flex',\n      }}>\n        <div style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n        }}>\n          <Row style={{\n            backgroundColor: '#000000e0',\n            color: 'white',\n            padding: 5,\n          }}>\n            <span>State at: {selectedTx && <BlockTime block={selectedTx.blockNumber} style={{ padding: 0 }} />}</span>\n            <span>Signer: <Address address={signerAddress} style={{ padding: 2 }} /></span>\n          </Row>\n          <div style={{\n            flex: 2,\n            display: 'flex'\n          }}>\n            <ContractState\n              key={selectedTx ? selectedTx.hash : '_'}\n              provider={provider}\n              contractAddress={contractAddress}\n              // ast={ast}\n              transactions={transactions}\n              until={selectedTx}\n            />\n          </div>\n          <div style={{\n            flex: 3,\n            display: 'flex'\n          }}>\n            <Console context={contractProxy}  />\n            {!contractProxy && this.renderOverlay()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Container from '../../../widgets/Container'\nimport { withRouter } from 'react-router-dom'\nimport Address from '../../../widgets/Address'\nimport { Column } from '../../../widgets/Column'\nimport { Row } from '../../../widgets/Row'\nimport ContractCode from './ContractCode/ContractCode'\nimport { ethers } from 'ethers'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport ContractTransactionBrowser from './TxBrowser/ContractTransactionBrowser'\nimport ContractConsole from './InteractiveConsole/ContractConsole'\nimport { withGlobalState } from '../../../Context'\n\nclass ContractDetails extends Component {\n  state = {\n    abi: undefined,\n    bytecode: '',\n    contractProxy: undefined, // instance of \"metaclass\"\n    signer: undefined,\n    signerAddress: undefined,\n    transactions: [],\n    selectedTx: undefined\n  }\n  getAddress() {\n    const { match } = this.props\n    const { params } = match\n    const { address } = params\n    return address\n  }\n  getProvider() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { provider } = globalState\n    return provider\n  }\n  componentDidMount = async () => {\n    const provider = this.getProvider()\n    this.loadContractTransactions(provider)\n    this.loadActiveSigner(provider)\n    try {\n      provider.on('block', this.loadContractTransactions)\n    } catch (error) { }\n  }\n  componentWillUnmount = () => {\n    const provider = this.getProvider()\n    try {\n      provider.off('block', this.loadContractTransactions)\n    } catch (error) { }\n  }\n  loadContractTransactions = async () => {\n    const provider = this.getProvider()\n    try {\n      const transactions = await getDataProvider(provider).getAllTxByContract(this.getAddress())\n      this.setState({\n        transactions,\n        selectedTx: transactions[transactions.length - 1]\n      })\n    } catch (error) {\n      this.setState({\n        transactions: [],\n        selectedTx: undefined\n      })\n    }\n  }\n  loadActiveSigner = async (provider) => {\n    try {\n      const signer = await provider.getSigner()\n      const signerAddress = await signer.getAddress()\n      this.setState({\n        signer,\n        signerAddress\n      })\n    } catch (error) {\n      this.setState({\n        signer: undefined,\n        signerAddress: undefined\n      })\n    }\n  }\n  handleSelectedTransaction = (tx) => {\n    this.setState({\n      selectedTx: tx\n    })\n  }\n  handleSolcArtifacts = async (data, persist = false) => {\n    const { abi, source, bytecode, ast } = data\n    this.setState({\n      source,\n      abi,\n      bytecode,\n      ast\n    })\n    try {\n      const { signer } = this.state\n      const provider = this.getProvider()\n      let contractProxy = new ethers.Contract(this.getAddress(), abi, signer || provider);\n      this.setState({\n        contractProxy\n      })\n    } catch (error) {\n      console.warn('could not create contract proxy', error)\n    }\n  }\n  render() {\n    const address = this.getAddress()\n    const provider = this.getProvider()\n    // required for console\n    const { contractProxy, signerAddress, selectedTx } = this.state\n    // for tx browser\n    const { transactions } = this.state\n    return (\n      <Container\n        style={{\n          padding: 0,\n          borderRadius: 0,\n          maxHeight: '100%',\n          overflowY: 'hidden'\n        }}\n        header={() => (<Fragment>Contract at <Address address={address} /></Fragment>)}\n        headerStyle={{\n          margin: 10\n        }}\n      >\n        <Column style={{\n          justifyContent: 'space-between',\n          maxHeight: '100%'\n        }}>\n          <Row style={{\n            overflowY: 'auto',\n            flex: 3,\n          }}>\n            <div style={{\n              flex: 1,\n              display: 'flex'\n            }}>\n              {provider &&\n                <ContractCode\n                  provider={provider}\n                  address={address}\n                  // called when solidity artifacts become available:\n                  // either through compilation, user selection or database\n                  onData={data => this.handleSolcArtifacts(data, true)}\n                />\n              }\n            </div>\n            <div style={{\n              flex: 1,\n              display: 'flex',\n            }}>\n              <ContractTransactionBrowser\n                provider={provider}\n                transactions={transactions}\n                selectedTransaction={selectedTx}\n                onSelect={this.handleSelectedTransaction}\n                contractInterface={contractProxy} // used to decode tx\n              />\n            </div>\n          </Row>\n          <div style={{\n            flex: 2,\n            display: 'flex'\n          }}>\n            <ContractConsole\n              signerAddress={signerAddress}\n              transactions={transactions}\n              selectedTx={selectedTx}\n              contractAddress={address}\n              contractProxy={contractProxy} // commands are executed on proxy instance\n            />\n          </div>\n        </Column>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withGlobalState(ContractDetails))\n","import React, { Component } from 'react'\n\nexport default class Form extends Component {\n  render() {\n    const { style } = this.props\n    return (\n      <div style={{\n        flex: 1,\n        maxHeight: 500,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n        border: '1px solid gray',\n        borderRadius: 10,\n        ...style\n      }}>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TextField extends Component {\n  render() {\n    const { label, value, onChange, suffix, disabled=false, required=false } = this.props\n    return (\n      <div style={{\n        alignItems: 'center',\n        margin: 10\n      }}>\n        <label\n          style={{\n            fontSize: '1rem'\n          }}\n          data-shrink=\"true\"\n          htmlFor=\"standard-required\"\n          id=\"standard-required-label\">\n          {label}\n          { required && <span>*</span> }\n        </label>\n        <div\n          style={{\n            marginTop: 5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <input\n            disabled={disabled}\n            size=\"50\"\n            style={{\n              fontSize: 'inherit',\n              boxSizing: 'content-box',\n              background: 'none',\n              margin: 0,\n              padding: 10,\n              font: 'inherit',\n              height: '1.2rem',\n              border: '1px solid gray',\n              borderRadius: 3\n            }}\n            type=\"text\"\n            aria-invalid=\"false\"\n            id=\"standard-required\"\n            required=\"\"\n            value={value}\n            onChange={e => onChange(e.target.value)}\n          />\n          { suffix && <span style={{ padding: 5, opacity: 0.7 }}>{suffix}</span>}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Button from '../../../widgets/Button'\nimport { ethers } from 'ethers';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Form from '../../../widgets/Form';\nimport TextField from '../../../widgets/TextField';\n\nclass SendTransaction extends Component {\n  state = {\n    from: '',\n    to: '',\n    amount: '1',\n    tx: undefined\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    if (!provider) return\n\n    const to = this.getTo()\n    const signer = await provider.getSigner();\n    const from = await signer.getAddress()\n    this.setState({\n      from,\n      to\n    })\n  }\n  sendTransaction = async (to, amountString) => {\n    const { provider, from } = this.props\n    const signer = await provider.getSigner();\n    const amount = ethers.utils.parseEther(amountString);\n    const txRaw = {\n        to,\n        value: amount\n    };\n    const tx = await signer.sendTransaction(txRaw);\n    this.setState({ tx })\n    console.log('tx', tx)\n  }\n  getTo() { \n    const { match } = this.props\n    const { params } = match\n    const { to } = params\n    return to\n  }\n  render() {\n    const { from, to, amount, tx } = this.state\n    return (\n      <Container\n        header={ \"Send transaction\"}\n      >\n        <Form style={{\n          marginTop: 20,\n          fontSize: '1.25rem'\n        }}>\n          <TextField label=\"From:\" type=\"address\" value={from} onChange={value => this.setState({ from: value })} />\n          <TextField label=\"To:\" type=\"address\" value={to} onChange={value => this.setState({ to: value })} />\n          <TextField label=\"Amount:\" value={amount} suffix=\"ETH\" onChange={value => this.setState({ amount: value })} />\n          <TextField label=\"Fee\" value=\"\" disabled />\n          <div>\n            <Button \n              style={{\n                marginLeft: 10,\n                borderRadius: 10,\n                padding: 10,\n                marginTop: 10,\n                border: '2px solid #08a79c', \n                fontSize: '1.25rem',\n                fontWeight: 'bold'\n              }}\n              label=\"Send\"\n              dangerous={true}\n              onClick={() => this.sendTransaction(to, amount)} />\n          </div>\n        </Form>\n        { tx && <div style={{ fontSize: '1.25rem', marginTop: 20 }}>Transaction sent: <NavLink to={`/transactions/${tx.hash}`}>{tx.hash}</NavLink>  </div>}\n      </Container>\n    )\n  }\n}\n\nexport default  withRouter(SendTransaction)\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Text from '../../../widgets/Text'\nimport { withGlobalState } from '../../../Context'\n\nclass BlockDetails extends Component {\n  state = { block: undefined }\n  componentDidMount = async () => {\n    const { global, match } = this.props\n    const { provider } = global.state\n    const { params } = match\n    const { blockNumber } = params\n    const block = await provider.getBlock(parseInt(blockNumber))\n    this.setState({\n      block\n    })\n  }\n  renderBlockDetails(block) {\n    return (\n      <div>\n        <pre>{JSON.stringify(block, null, 2)}</pre>\n      </div>\n    )\n  }\n  render() {\n    const { match } = this.props\n    const { params } = match\n    const { blockNumber } = params\n    const { block } = this.state\n    return (\n      <Container header={() => <Text text={`Block #${blockNumber}`} />}>\n        { block && this.renderBlockDetails(block) }\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(BlockDetails)","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Text from '../../../widgets/Text'\nimport { withGlobalState } from '../../../Context'\n\nclass TransactionDetails extends Component {\n  state = { tx: undefined }\n  componentDidMount = async () => {\n    const { global, match } = this.props\n    const { provider } = global.state\n    const { params } = match\n    const { txHash } = params\n    const tx = await provider.getTransaction(txHash)\n    this.setState({\n      tx\n    })\n  }\n  renderTransactionDetails(tx) {\n    return (\n      <div>\n        <pre>{JSON.stringify(tx, null, 2)}</pre>\n      </div>\n    )\n  }\n  render() {\n    const { match } = this.props\n    const { params } = match\n    const { txHash } = params\n    const { tx } = this.state\n    return (\n      <Container header={() => <Text text={`Transaction #${txHash}`} />}>\n        { tx && this.renderTransactionDetails(tx) }\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(TransactionDetails)\n","import React, { Component } from 'react'\nimport CreateScript from './CreateScript'\nimport Container from '../../../widgets/Container'\n\nexport default class ScriptList extends Component {\n  state = {\n    scripts: []\n  }\n  componentDidMount = async () => {\n    // get scripts here\n  }\n  render() {\n    const { scripts } = this.state\n    return (\n      <Container>\n        {\n          scripts.length > 0\n          ? <span>script list</span>\n          : <CreateScript />\n        }\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport { StoreContext, withGlobalState } from '../../../Context'\nimport { Row } from '../../../widgets/Row'\nimport { Column } from '../../../widgets/Column'\nimport GlobalToggle from '../../status/GlobalToggle'\n\nconst Setting = withGlobalState(({ name, item, global }) => {\n  return (\n    <div>\n      <input type=\"checkbox\" id=\"scales\" name=\"scales\" checked={!item.exclude} onChange={(ev) => {\n        const exclude = !ev.target.checked\n        const items = global.state[name]\n        const updated = items.map(el => ( (el.label !== undefined ? el.label === item.label : el.name === item.name) ? { ...el, exclude } : el))\n        const change = {}\n        change[name] = [...updated]\n        global.setState(change)\n      }} />\n      <label htmlFor=\"scales\">{item.label || item.name}</label>\n    </div>\n  )\n})\n\nclass OptionGroup extends Component {\n  handleOnChange() {\n\n  }\n  render() {\n    const { options } = this.props\n    const name = Date.now()\n    return (\n      <div>\n        {\n          options.map((option, idx) => (\n            <label style={{ marginLeft: 5 }} key={option} >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={true}\n                onChange={() => this.handleOnChange(option, idx)}\n              />\n              {option}\n            </label>\n          ))\n        }\n\n      </div>\n    )\n  }\n}\n\nclass Settings extends Component {\n  static contextType = StoreContext\n  render() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { navItems, statusBarItems } = globalState\n    return (\n      <Container>\n        <h2> Settings </h2>\n\n        {/* \n        <h4>Language</h4>\n        <OptionGroup\n          options={['English', 'Deutsch']}\n        />\n        */}\n\n        <h4>Theme</h4>\n        {\n          global.state.theme\n        }\n\n        {/*\n        TODO custom provider settings\n        <h4>Dangerous</h4>\n        <GlobalToggle label=\"Dangerous operations\" name={\"dangerous\"} options={[true, false]}  />\n\n\n        <h4>Mode</h4>\n\n        <OptionGroup\n          options={['Default', 'Minimal', 'Expert', 'Custom']}\n        />\n        */}\n\n        <Row style={{\n          justifyContent: 'normal',\n          borderTop: '1px solid gray',\n          marginTop: 10\n        }}>\n          <Column>\n            <h4>Navigation</h4>\n            {\n              navItems.map((item, idx) => <Setting key={item.label || item.name} name=\"navItems\" item={item}  />)\n            }\n          </Column>\n          <Column>\n            <h4>Statusbar</h4>\n            {\n              statusBarItems.map((item, idx) => <Setting key={item.label || item.name} name=\"statusBarItems\" item={item}  />)\n            }\n          </Column>\n          <Column />\n          <Column />\n        </Row>\n\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(Settings)\n","import React, { Component } from 'react'\n\nexport default class InplaceEdit extends Component {\n  state = {\n    showInput: false,\n    value: ''\n  }\n  componentDidMount = () => {\n    const { value } = this.props\n    this.setState({\n      value\n    })\n  }\n  /*\n  static getDerivedStateFromProps(props, state){\n    console.log('get derived')\n    if (props.value) {\n      // state.value = props.value\n    }\n    return state\n  }\n  */\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({ value: this.props.value })\n    }\n  }\n  onKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.setState({\n        showInput: false\n      })\n      this.props.onChange(this.state.value)\n      // e.stopPropagation();\n      // e.preventDefault();\n    }\n  }\n  onChange = (ev) => {\n    this.setState({ value: ev.target.value })\n  }\n  handleClick = () => {\n    this.setState({ showInput: true })\n    setTimeout(() => {\n      this.focus()\n    }, 500)\n  }\n  focus() {\n    this.userInput.focus();\n  }\n  onBlur = () => {\n    this.setState({\n      showInput: false\n    })\n  }\n  render() {\n    const { showInput, value } = this.state\n    let { placeholder = 'Edit me' } = this.props\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: 20,\n          ...this.props.style\n        }}\n        onBlur={this.onBlur}\n      >\n        <div\n          style={{\n            display: showInput ? 'none' : 'block'\n          }}\n          onClick={this.handleClick}\n        >{value || placeholder}</div>\n        <input\n          type=\"text\"\n          ref={(input) => { this.userInput = input; }}\n          style={{\n            visibility: showInput ? 'visible' : 'hidden'\n          }}\n          value={value}\n          onBlur={this.onBlur}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ListItem from '../../../widgets/ListItem'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport Address from '../../../widgets/Address'\nimport EthValue from '../../../widgets/EthValue'\nimport InplaceEdit from '../../../widgets/InplaceEdit'\nimport { withGlobalState } from '../../../Context'\n\nclass AddressListItem extends Component {\n  state = {\n    balance: 0,\n    txCount: 0,\n    alias: ''\n  }\n  componentDidMount = async () => {\n    const { provider, address, global } = this.props\n    const { state : globalState } = global\n    const { aliases } = globalState\n    const alias = aliases[address] || ''\n    const balance = await provider.getBalance(address)\n    const txCount = await provider.getTransactionCount(address)\n    this.setState({ balance, txCount, alias })\n  }\n  handleSetAlias = (alias) => {\n    this.setState({\n      alias\n    })\n    const { global, address } = this.props\n    const { state : globalState } = global\n    const { aliases } = globalState\n    let newState = {\n      ...aliases\n    }\n    newState[address] = alias\n    global.setState({ aliases: newState})\n  }\n  render() {\n    const { address, } = this.props\n    const { balance, alias } = this.state\n    return (\n      <ListItem \n        clickable={false}\n        style={{\n          justifyContent: 'space-between'\n        }}\n      >\n        <LabeledField label=\"Address\" style={{\n          flexBasis: '30em'\n        }} >\n          <Address address={address} />\n        </LabeledField>\n        <LabeledField label=\"Alias\">\n          <InplaceEdit style={{ paddingTop: 5 }} value={alias} onChange={this.handleSetAlias} />\n        </LabeledField>\n        {/*spacer*/}\n        <span></span>\n        <LabeledField label=\"Balance\" style={{\n          flexBasis: '15em',\n        }}>\n          <EthValue wei={balance} />\n        </LabeledField>\n        <LabeledField label=\"Contract\" value=\"false\" styleValue={{ paddingTop: 5 }} />\n      </ListItem>\n    )\n  }\n}\n\nexport default withGlobalState(AddressListItem)\n","import React, { Component } from 'react'\nimport AddressItem from './AddressListItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class AddressList extends Component {\n  render() {\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"AddressList\"\n            itemName=\"Addresses\"\n            loadItems={provider => getDataProvider(provider).getAllAddresses()}\n            renderItem={({ provider, item: address}) => <AddressItem key={address} provider={provider} address={address} />}\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Tree from '../../../widgets/Tree'\nimport Error from '../../../widgets/Error'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class Network extends Component {\n  state = {\n    networkData: undefined,\n    error: undefined\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    // const modules = await provider.send('rpc_modules', [])\n    // console.log('modules', modules)\n    const root = {\n      name: 'This Computer',\n      children: []\n    }\n    try {\n      const peers = await provider.send('admin_peers')\n      console.log('peers', peers)\n\n      for (const peer of peers) {\n        const {\n          name, // client-version-info\n          id,\n          enode,\n          enr,\n          protocol,\n          network\n        } = peer\n        root.children.push({\n          name,\n          attributes: network,\n          children: []\n        })\n      }\n\n    } catch (error) {\n      console.log('error', error)\n      return this.setState({\n        error\n      })\n    }\n    this.setState({\n      networkData: root\n    })\n  }\n  render() {\n    const { networkData, error } = this.state\n    return (\n      <Connectivity>\n        <Container>\n          {networkData && <Tree\n            data={networkData}\n            orientation=\"horizontal\"\n            pathFunc=\"straight\"\n            centered=\"vertically\"\n          />}\n          <Error error={error} />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Clickable from './Clickable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaste } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default class CopyClipboardButton extends Component {\n  copyToClipboard = () => {\n    const { value } = this.props\n    if (!value) { return }\n    navigator.clipboard.writeText(value).then(function () {\n      console.log('Async: Copying to clipboard was successful!');\n      alert('copied: '+value)\n    }, function (err) {\n      console.error('Async: Could not copy text: ', err);\n      alert('failed to copy')\n    });\n  }\n  render() {\n    return (\n      <Clickable onClick={this.copyToClipboard} style={{ width: '1.5rem', height: '1.5rem'}}>\n        <FontAwesomeIcon icon={faPaste} style={{ width: '100%', height: '100%', color: '#666' }} />\n      </Clickable>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport CopyClipboardButton from './CopyClipboardButton'\n\nexport default class CommandLineSnippet extends Component {\n  render() {\n    const { command } = this.props\n    return (\n      <div style={{\n        display: 'flex',\n        alignItems: 'center'\n      }}>\n        <pre style={{\n          backgroundColor: '#313131',\n          color: 'white',\n          padding: 10,\n          paddingTop: 15,\n          marginRight: 10,\n          borderRadius: 5,\n          fontSize: '1.2rem',\n          overflow: 'scroll'\n        }}>$ {command}</pre> <CopyClipboardButton value={command} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport CommandLineSnippet from '../../../widgets/CommandLineSnippet'\nimport { withGlobalState } from '../../../Context'\n\nclass Client extends Component {\n  state = {}\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const clientInfo = await provider.send('web3_clientVersion')\n      this.setState({\n        clientInfo\n      })\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n  renderClientInfo = () => {\n    const { provider } = this.props\n    const { clientInfo } = this.state\n    return (\n      <div>\n        <h2>Client info:</h2>\n        <pre>\n          {JSON.stringify(clientInfo, null, 2)}\n        </pre>\n        {/* <Grid /> */ }\n        {/* <SyncState provider={provider} /> */}\n      </div>\n    )\n  }\n  renderHowTo = () => {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { selectedProvider } = globalState\n    const command = './geth --dev --rpc --rpccorsdomain=\"*\" --rpcapi \"eth,web3,personal,net,debug\" --allow-insecure-unlock'\n    return (\n      <div style={{\n        height: 200,\n        border: '2px solid #ff9245',\n        borderRadius: 20,\n        padding: 30,\n        fontSize: '1.2rem'\n      }}>\n        <div>It seems your client is not running or your connection has problems.</div>\n        <div>Try selecting a different provider or restart your client.</div>\n        <br />\n        <div>Client start command:</div>\n        {selectedProvider === 'Ganache'? <span>Download and run Ganache: https://github.com/trufflesuite/ganache/releases/latest</span> : <CommandLineSnippet command={command} /> }\n      </div>\n    )\n  }\n  render() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { isConnected } = globalState\n    return (\n      <Container>\n        {isConnected\n          ? this.renderClientInfo()\n          : this.renderHowTo()\n        }\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(Client)","const fetchJson = async (_url) => {\n  const data = await fetch(_url)\n  return data.json()\n}\n\nconst request = async (url, data) => {\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    body: JSON.stringify(data)\n  })\n  return response.json();\n}\n\nlet i = 0\n\nclass Grid {\n  constructor() {\n    \n  }\n  async getVersionList() {\n    let versionList = await fetchJson('http://localhost:4743/clients')\n    return versionList\n  }\n  async searchWorkflows(query) {\n    let workflows = await request('http://localhost:4743/rpc', {\n      method: 'searchWorkflows',\n      params: [query],\n      id: i++\n    })\n    return workflows\n  }\n  async runWorkflow(workflowId) {\n    await request('http://localhost:4743/rpc', {\n      method: 'runWorkflow',\n      params: [workflowId],\n      id: i++\n    })\n  }\n  async getJobs() {\n    let jobs = await request('http://localhost:4743/rpc', {\n      method: 'getJobs',\n      params: [],\n      id: i++\n    })\n    return jobs\n  }\n}\n\nexport default new Grid()","import React, { Component } from 'react'\nimport { Row } from '../../../widgets/Row'\nimport Button from '../../../widgets/Button'\nimport DateField from '../../../widgets/DateField'\nimport Address from '../../../widgets/Address'\nimport { Column } from '../../../widgets/Column'\nimport ListItem from '../../../widgets/ListItem'\nimport Pill from '../../../widgets/Pill'\n\nexport default class WorkflowListItem extends Component {\n  render() {\n    const { workflow } = this.props\n    const {\n      projectId,\n      version,\n      // created_at,\n      updated_at,\n      displayName,\n      shortDescription,\n      publisher\n    } = workflow\n    const { name: publisherName, address } = publisher\n    // TODO support tags\n    const hasTags = false\n    return (\n      <ListItem to={`/workflows/${projectId}`}>\n        <Column>\n          <Row>\n            <Button\n              icon=\"Play\"\n              iconColor=\"#08a79c\"\n              label=\"\"\n              onClick={() => this.props.onRunWorkflow(workflow)}\n            />\n            <Column>\n              <Row style={{ marginBottom: 5 }}>\n                <div style={{\n                  margin: 5,\n                  display: 'flex',\n                  flex: 1,\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                }}>\n                  <span style={{ fontWeight: 'bold' }}>{displayName}</span>\n                  <span style={{ marginTop: -5, marginLeft: 10 }}>v{version}</span>\n                  <DateField ts={updated_at / 1000} relative style={{ marginLeft: 'auto' }} />\n                </div>\n                <div style={{ display: 'none', flexDirection: 'column' }}>\n                  <div style={{ alignSelf: 'flex-end' }}>{publisherName}</div>\n                  <Address address={address} />\n                </div>\n              </Row>\n              <Row>\n                <span style={{ marginLeft: 5, marginTop: -5 }}>{shortDescription}</span>\n              </Row>\n            </Column>\n          </Row>\n          {hasTags &&\n            <Row style={{\n              paddingLeft: 52\n            }}>\n              <Pill>Beginner</Pill>\n            </Row>\n          }\n        </Column>\n\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport ListItem from '../../../widgets/ListItem'\nimport Button from '../../../widgets/Button'\nimport Spinner from '../../../widgets/Spinner'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { Column } from '../../../widgets/Column'\nimport { Row } from '../../../widgets/Row'\n\nexport default class JobListItem extends Component {\n  render() {\n    const { job } = this.props\n    const {\n      id, // job id\n      workflowId, // \n      name,\n      displayName,\n      version,\n      isInstalled,\n      state,\n      started_at,\n      finished_at\n    } = job\n    const isRunning = !job.finished_at\n\n    return (\n      <ListItem \n      to={`/workflows/jobs/${id.replace('jobId:','')}`}\n      style={{\n        alignItems: 'center'\n      }}>\n        <div style={{\n          width: 20,\n          height: 20,\n          padding: 5\n        }}>\n          {isRunning\n            ? <Spinner />\n            : <FontAwesomeIcon icon={faCheck} style={{ color: '#08a79c', width: '100%', height: '100%' }} />\n          }\n        </div>\n        <Column>\n          <Row style={{\n            justifyContent: 'normal',\n            margin: 10\n          }}>\n            <div style={{\n              margin: 5,\n              display: 'flex',\n              alignItems: 'center'\n            }}>\n              <span style={{ fontWeight: 'bold' }}>{displayName}</span>\n              <span style={{ marginTop: -5, marginLeft: 10 }}>v{version}</span>\n            </div>\n          </Row>\n          <div style={{\n            marginLeft: 15\n          }}>\n            {\n              isRunning\n                ? <span>started {moment(job.started_at).from()}</span>\n                : <span>finished {moment(job.finished_at).from()}</span>\n            }\n          </div>\n        </Column>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport GridAPI from '../grid/GridAPI'\n\nimport Tabs from '../../../widgets/Tabs'\nimport Tab from '../../../widgets/Tab'\nimport WorkflowListItem from './WorkflowListItem'\nimport JobListItem from './JobListItem'\nimport List from '../../../widgets/List'\n\nexport default class Workflows extends Component {\n  handleRunWorkflow = (workflow) => {\n    GridAPI.runWorkflow(workflow.releaseId)\n  }\n  renderGridRequired = () => {\n    return (\n      <div style={{\n        height: 200,\n        border: '2px solid #ff9245',\n        borderRadius: 20,\n        padding: 30,\n        fontSize: '1.2rem'\n      }}>\n        <div>Workflows require Grid to be running</div>\n        <div>Check back another day to see instructions for a setup.</div>\n      </div>\n    )\n  }\n  renderTabs = () => {\n    return (\n      <Tabs style={{\n        fontSize: '1.25rem',\n        padding: 7,\n        marginBottom: 10 \n      }}>\n        <Tab label=\"Workflows\" key=\"1\">\n          <List\n            header={false}\n            loadItems={() => GridAPI.searchWorkflows()}\n            itemName=\"workflows\"\n            renderItem={workflow => <WorkflowListItem key={workflow.name} workflow={workflow} onRunWorkflow={this.handleRunWorkflow} />}\n          />\n        </Tab>\n        <Tab label=\"Jobs\" key=\"2\">\n          <List\n            loadItems={() => GridAPI.getJobs()}\n            itemName=\"jobs\"\n            polling={5 * 1000}\n            renderItem={job => <JobListItem key={job.id} job={job} />}\n          />\n        </Tab>\n      </Tabs>\n    )\n  }\n  render() {\n    const inNano = true\n    const isGridConnected = false\n    return (\n      <Container\n        isCard={inNano ? false : true}\n        style={{\n          padding: inNano ? 0 : 10\n        }}\n      >\n        {isGridConnected\n        ? this.renderTabs()\n        : this.renderGridRequired()\n        }\n      </Container>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Container from '../../../widgets/Container'\nimport { withRouter } from 'react-router-dom'\n\nclass WorkflowDetails extends Component {\n  state = {\n    workflowId: ''\n  }\n  componentDidMount = () => {\n    this.setState({\n      workflowId: this.getWorkflowId()\n    })\n  }\n  getWorkflowId() {\n    const { match } = this.props\n    const { params } = match\n    const { workflowId } = params\n    return workflowId\n  }\n  render() {\n    const { workflowId } = this.state\n    return (\n      <Container\n        style={{\n          borderRadius: 0,\n          maxHeight: '100%',\n          overflowY: 'hidden'\n        }}\n        header={() => (<Fragment>Workflow details: \"{workflowId}\"</Fragment>)}\n        headerStyle={{\n          margin: 10\n        }}\n      >\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(WorkflowDetails)","import React, { Component, Fragment } from 'react'\nimport Container from '../../../widgets/Container'\nimport Tabs from '../../../widgets/Tabs'\nimport Tab from '../../../widgets/Tab'\nimport GridAPI from '../grid/GridAPI'\nimport { withRouter } from 'react-router-dom'\n\n\nclass JobDetails extends Component {\n  state = {\n    jobId: ''\n  }\n  componentDidMount = () => {\n    const jobId = this.getJobId()\n    this.setState({\n      jobId\n    })\n    this.fetchJobDetails(jobId)\n  }\n  getJobId() {\n    const { match } = this.props\n    const { params } = match\n    const { jobId } = params\n    return jobId\n  }\n  fetchJobDetails = async (jobId) => {\n    const jobs = await GridAPI.getJobs()\n    const job = jobs.find(job => job.id.includes(jobId))\n    this.setState({\n      job\n    })\n  }\n  renderJobDetails(job) {\n    const {\n      id, // job id\n      workflowId, // \n      name,\n      displayName,\n      version,\n      isInstalled,\n      state,\n      started_at,\n      finished_at\n    } = job\n    return (\n      <div style={{\n        border: '1px solid black',\n        padding: 50,\n        display: 'flex',\n        flexDirection: 'column'\n      }}>\n        <span>Name: {name}</span>\n        <span>Version: {version}</span>\n      </div>\n    )\n  }\n  render() {\n    const { jobId, job } = this.state\n    return (\n      <Container\n        style={{\n          borderRadius: 0,\n          maxHeight: '100%',\n          overflowY: 'hidden'\n        }}\n        header={() => (<Fragment>Job details: {jobId}</Fragment>)}\n        headerStyle={{\n          margin: 10\n        }}\n      >\n        {job && this.renderJobDetails(job)}\n        <h3>Processes</h3>\n        <Tabs>\n          <Tab label=\"Process 1\">\n            <span>hello world</span>\n          </Tab>\n          <Tab label=\"Process 2\">\n            <span>hello world2</span>\n          </Tab>\n        </Tabs>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(JobDetails)\n\n","\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nexport default ({ component: C, props: cProps, ...rest }) => <Route {...rest} render={props => <C {...props} {...cProps} />} />;\n","import React from 'react';\n\nimport {\n  Switch,\n} from \"react-router-dom\"\n\nimport BlockList from './components/main/blocks/BlockList';\nimport TransactionList from './components/main/transactions/TransactionList';\nimport AccountsList from './components/main/accounts/AccountsList';\nimport Contracts from './components/main/contracts/Contracts';\nimport CreateContractView from './components/main/contracts/CreateContractView';\nimport AccountDetails from './components/main/accounts/AccountDetails';\nimport ContractDetails from './components/main/contracts/ContractDetails';\nimport SendTransaction from './components/main/transactions/SendTransaction';\nimport BlockDetails from './components/main/blocks/BlockDetails';\nimport TransactionDetails from './components/main/transactions/TransactionDetails';\nimport ScriptList from './components/main/scripts/ScriptList';\nimport Settings from './components/main/settings/Settings';\nimport AddressList from './components/main/addresses/AddressList';\nimport Tools from './components/main/tools/Tools';\nimport Network from './components/main/network/Network';\nimport Client from './components/main/client/Client';\nimport Workflows from './components/main/workflows/Workflows';\nimport WorkflowDetails from './components/main/workflows/WorkflowDetails';\nimport JobDetails from './components/main/workflows/JobDetails';\nimport AppliedRoute from './AppliedRoute';\n\nexport default ({ provider, currentBlock }) =>\n  <Switch>\n    <AppliedRoute path=\"/accounts/:address\" component={AccountDetails} props={{ provider }}  />\n    <AppliedRoute path=\"/\" exact component={AccountsList} />\n    <AppliedRoute path=\"/accounts\" component={AccountsList} />\n    <AppliedRoute path=\"/addresses\" component={AddressList} />\n    <AppliedRoute path=\"/blocks/:blockNumber\" component={BlockDetails} props={{ provider }} />\n    <AppliedRoute path=\"/blocks\" component={BlockList} props={{ start: 0, end: currentBlock }} />\n    <AppliedRoute path=\"/transactions/new/:to\" component={SendTransaction} key={provider ? provider.createdAt : 'not_set'} props={{ provider }} />\n    <AppliedRoute path=\"/transactions/:txHash\" component={TransactionDetails}  />\n    <AppliedRoute path=\"/transactions\" component={TransactionList} props={{ blockNumber: currentBlock }} />\n    <AppliedRoute path=\"/contracts/new\" component={CreateContractView} props={{ provider }} />\n    <AppliedRoute path=\"/contracts/:address\" component={ContractDetails} key={provider ? provider.createdAt : 'not_set'}  />\n    <AppliedRoute path=\"/contracts\" component={Contracts} />\n    <AppliedRoute path=\"/network\" component={Network} props={{ provider }} />\n    <AppliedRoute path=\"/client\" component={Client} key={provider ? provider.createdAt : 'not_set'} props={{ provider }} />\n    <AppliedRoute path=\"/workflows/jobs/:jobId\" component={JobDetails} props={{ provider }} />\n    <AppliedRoute path=\"/workflows/:workflowId\" component={WorkflowDetails} props={{ provider }} />\n    <AppliedRoute path=\"/workflows\" component={Workflows} props={{ provider }} />\n    <AppliedRoute path=\"/scripts\" component={ScriptList} props={{ provider }} />\n    {/* <AppliedRoute path=\"/tools\" component={Tools} props={{ provider }} /> */ }\n    <AppliedRoute path=\"/settings\" component={Settings} props={{ provider }} />\n  </Switch>\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ethers, providers } from 'ethers';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\"\nimport TopNavigation from './components/navigation/TopNavigation';\nimport StatusBar from './components/status/StatusBar';\nimport Error from './widgets/Error';\nimport { Row } from './widgets/Row';\nimport { withNewContext, withGlobalState } from './Context'\nimport { useTheme } from './Theme';\nimport Routes from './Routes';\n\nconst createProvider = (selectedProvider, providers) => {\n  const providerConfig = providers.find(p => p.name === selectedProvider)\n  const { url, name } = providerConfig\n  let newProvider\n  if (url === 'web3') {\n    newProvider = new ethers.providers.Web3Provider(window.web3.currentProvider)\n  } else {\n    newProvider = new ethers.providers.JsonRpcProvider(`http://${url}`)\n  }\n  // we need a way to detect new instances of provider\n  newProvider.createdAt = Date.now()\n  return newProvider\n}\n\nclass App extends Component {\n  state = {\n    currentBlock: 0,\n    interval: undefined\n  }\n  componentDidMount = async () => {\n    this.tryConnect()\n  }\n  tryConnect = () => {\n    let { interval } = this.state\n    if (interval) {\n      return\n    }\n    const { global: _global } = this.props\n    const connectionInterval = _global.state.connectionInterval || 2000\n\n    const checkConnection = async () => {\n      const { global } = this.props\n      const { state: globalState } = global\n      // some values are cached on old provider sow e should not re-use it when the connection comes back\n      // such as the createdAt flag & potentially calls to getNetwork()\n      // if we want to detect network changes of re-started clients we have to reset completely\n      let { /*provider,*/ isConnected, selectedProvider, providers, } = globalState\n      let provider = createProvider(selectedProvider, providers)\n      let block\n      try {\n        block = await provider.getBlockNumber()\n        // network cannot be used to check - seems to get cached\n        // const network = await provider.getNetwork()\n        if (block !== undefined && !isConnected) {\n          global.setState({ isConnected: true, provider: provider })\n        }\n      } catch (error) {\n        // console.log('error', error)\n        if (isConnected) {\n          global.setState({ isConnected: false })\n        }\n      }\n      // only update if changed?\n      // FIXME this causes many re-renders on all components\n      if (block && this.state.currentBlock !== block) {\n        this.setState({\n          currentBlock: block || 0\n        })\n      }\n    }\n\n    // run once immediately\n    checkConnection()\n    interval = setInterval(checkConnection, connectionInterval)\n    this.setState({\n      interval,\n    })\n  }\n  render() {\n    const { state: globalState } = this.props.global\n    const theme = useTheme(this.props.global)\n    const navItems = globalState.navItems.filter(item => !item.exclude)\n    const { currentBlock, error } = this.state\n    const { provider } = globalState\n\n    // TODO allows workflow to be part of url so that a link to a contract e.g. includes the infrastructure info\n    return (\n      <Router>\n        <div className=\"App\" style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100vh',\n          backgroundColor: theme.backgroundColor,\n          fontFamily: `'Roboto', sans-serif`\n        }} >\n          <Row style={{ padding: 3, fontSize: '1.0rem' }}>\n            <span style={{ color: '#939393' }}>Ethereum GUI v1.0.0</span>\n            <span style={{ color: '#939393', marginRight: 10 }}>philipplgh.eth</span>\n          </Row>\n          <TopNavigation items={navItems} />\n          <StatusBar provider={provider} currentBlock={currentBlock} />\n          {error\n            ? <Error error={error} />\n            : (\n              <main>\n                <Routes provider={provider} currentBlock={currentBlock} />\n              </main>\n            )\n          }\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withNewContext(withGlobalState(App))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nexport default class Resizable extends Component {\n  state = {\n    width: 0,\n    height: 0\n  }\n  componentDidMount = () => {\n    window.addEventListener('resize', this.handleResize)\n    this.getDimensions()\n  }\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.handleResize)\n  }\n  getDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    this.setState({\n      width,\n      height\n    })\n  }\n  handleResize = () => {\n    this.getDimensions()\n  }\n  render() {\n    const { width, height } = this.state\n    return (\n      <Fragment>\n        { this.props.children }\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Workflows from '../main/workflows/Workflows'\nimport { withGlobalState, withNewContext } from '../../Context'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nclass Nano extends Component {\n  render() {\n    return (\n      <Router>\n        <div style={{\n          width: 320,\n          height: 420,\n          backgroundColor: 'white',\n          fontSize: '10px'\n        }}>\n          <Workflows />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default withNewContext(withGlobalState(Nano))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Resizable from './widgets/Resizable'\nimport Nano from './components/nano/Nano';\n\nfunction Responsive({ width = window.innerWidth }) {\n  return (\n    (width <= 320)\n    ? <Nano />\n    : <App />\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Resizable>\n      <Responsive />\n    </Resizable>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Spinner extends Component {\n  state = {\n    dimensions: undefined\n  }\n  componentDidMount() {\n    const dimensions = this.container.getBoundingClientRect();\n    const { width } = dimensions\n    this.setState({\n      dimensions: {\n        width\n      }\n    });\n  }\n  render() {\n    let { size } = this.props\n    const { dimensions } = this.state\n    size = size || (dimensions ? dimensions.width * 1 : undefined)\n    const fillColor = '#08a79c'\n    return (\n      <div \n      ref={c => (this.container = c)}\n      style={{\n        display: 'flex',\n        flex: this.props.size ? 0 : 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...this.props.style\n      }} >\n        <svg\n          version=\"1.1\"\n          viewBox=\"0 0 32 32\"\n          width={ size || '48px'}\n          height={ size || '48px'}\n          fill={ fillColor }\n        >\n          <path\n            opacity=\".25\"\n            d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n          />\n          <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 16 16\"\n              to=\"360 16 16\"\n              dur=\"0.8s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </svg>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Error extends Component {\n  render() {\n    const { error } = this.props\n    return (\n      <div style={{ color: 'red' }}>\n        { error && error.message }\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Tree from 'react-d3-tree';\n\nexport default class TreeRenderer extends React.Component {\n  state = {}\n  componentDidMount() {\n    const { centered = 'default' } = this.props\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    const values = {\n      vertically: {\n        x: 50,\n        y: dimensions.height / 2\n      },\n      default: {\n        x: dimensions.width / 2,\n        y: dimensions.height / 5 // 20%\n      }\n    }\n    this.setState({\n      translate: {\n        ...values[centered]\n      }\n    });\n  }\n  render() {\n    const { data, style, orientation = 'vertical', pathFunc='straight' } = this.props\n    const { translate } = this.state\n    return (\n      <div \n      ref={tc => (this.treeContainer = tc)}\n      style={{\n        flex: 1,\n        ...style\n      }}>\n        <Tree \n          data={data} \n          orientation={orientation}\n          pathFunc={pathFunc}\n          translate={{...translate}}\n          />\n      </div>\n    );\n  }\n}"],"sourceRoot":""}