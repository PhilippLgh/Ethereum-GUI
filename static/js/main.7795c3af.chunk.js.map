{"version":3,"sources":["widgets/Spinner.js","widgets/Tree.js","State.js","Context.js","widgets/Row.js","widgets/BackButton.js","widgets/ContainerHeader.js","widgets/Container.js","widgets/Button.js","widgets/ListItem.js","widgets/Text.js","Theme.js","widgets/Clickable.js","js/Compiler.worker.js","js/EthStateMachine/index.js","js/TxWrapper.js","components/console/Console.js","widgets/AutoCompleteField.js","components/main/scripts/CreateScript.js","widgets/LabeledForm.js","components/main/tools/TrieViz.js","components/main/tools/Ethpkg.js","widgets/Tab.js","widgets/Pagination.js","widgets/List.js","widgets/Error.js","widgets/Tabs.js","components/main/tools/Tools.js","widgets/Badge.js","components/navigation/NavItem.js","components/navigation/TopNavigation.js","components/status/StatusItem.js","components/status/StatusItems/CurrentBlockNumber.js","widgets/EthValue.js","components/status/StatusItems/GasPrice.js","components/status/StatusItems/HardforkName.js","components/status/StatusItems/NetworkId.js","widgets/Modal.js","widgets/Column.js","components/status/StatusItems/RpcServer.js","components/status/StatusItems/Currency.js","widgets/Address.js","components/status/StatusItems/Signer.js","components/status/StatusItems/StateTime.js","components/status/GlobalToggle.js","widgets/SyncState.js","components/status/StatusItems/Syncing.js","components/status/StatusBar.js","widgets/DateField.js","widgets/Pill.js","widgets/Gas.js","components/main/blocks/BlockListItem.js","js/DataProvider.js","components/ProviderList.js","widgets/Connectivity.js","components/main/blocks/BlockList.js","widgets/LabeledField.js","widgets/BlockTime.js","components/main/transactions/TransactionItem.js","components/main/transactions/TransactionList.js","widgets/NavButton.js","components/main/accounts/AccountListItem.js","js/Storage.js","js/utils.js","components/main/accounts/AccountsList.js","components/main/contracts/ContractListItem.js","components/main/contracts/Contracts.js","widgets/Select.js","widgets/Switch.js","js/remote.js","components/main/contracts/Compiler.js","widgets/FileChooser.js","js/TreeWalker.js","components/main/contracts/ContractCode/JsonTreeView.js","components/main/contracts/ContractCode/CodeTab.js","components/main/contracts/ContractCode/ContractCode.js","components/main/contracts/CreateContractView.js","components/main/accounts/AccountDetails.js","components/main/contracts/TxBrowser/TransactionItem.js","components/main/contracts/TxBrowser/ContractTransactionBrowser.js","widgets/Overlay.js","components/main/contracts/ContractState.js","components/main/contracts/InteractiveConsole/ContractConsole.js","components/main/contracts/ContractDetails.js","widgets/Form.js","widgets/TextField.js","components/main/transactions/SendTransaction.js","components/main/blocks/BlockDetails.js","components/main/transactions/TransactionDetails.js","components/main/scripts/ScriptList.js","components/main/settings/Settings.js","widgets/InplaceEdit.js","components/main/addresses/AddressListItem.js","components/main/addresses/AddressList.js","components/main/network/Network.js","widgets/CopyClipboardButton.js","widgets/CommandLineSnippet.js","components/main/grid/GetGridOverlay.js","components/main/grid/GridAPI.js","components/main/grid/VersionList.js","components/main/grid/ClientSettings.js","components/main/grid/Controls.js","components/main/grid/ClientConfiguration.js","components/main/grid/Grid.js","components/main/client/Client.js","components/main/workflows/WorkflowListItem.js","components/main/workflows/JobListItem.js","components/main/workflows/Workflows.js","components/main/workflows/WorkflowDetails.js","components/main/workflows/JobDetails.js","AppliedRoute.js","Routes.js","App.js","serviceWorker.js","widgets/Resizable.js","components/nano/Nano.js","index.js"],"names":["Spinner","state","dimensions","undefined","width","this","container","getBoundingClientRect","setState","size","props","ref","c","style","display","flex","alignItems","justifyContent","version","viewBox","height","fill","opacity","d","attributeName","type","from","to","dur","repeatCount","Component","TreeRenderer","centered","treeContainer","values","vertically","x","y","default","translate","data","orientation","pathFunc","tc","React","globalState","theme","alias","time","badge","dangerous","isConnected","selectedProvider","connectionInterval","providers","name","url","provider","navItems","label","route","exclude","statusBarItems","aliases","StoreContext","createContext","withNewContext","WrappedComponent","Provider","value","withGlobalState","Consumer","val","global","Row","children","flexDirection","withRouter","history","Button","onClick","goBack","icon","ContainerHeader","title","BackButton","fontSize","color","alignSelf","Container","header","isCard","useTheme","className","padding","maxHeight","overflowY","backgroundColor","margin","borderRadius","headerStyle","handleOnClick","e","console","warn","stopPropagation","preventDefault","enabled","iconColor","paddingTop","paddingBottom","cursor","foreground","disabled","icons","pulse","ListItem","clickable","push","borderTop","marginBottom","Text","text","dark","Themes","light","topNav","item","statusBar","field","Clickable","hover","onMouseOver","onMouseEnter","onMouseOut","module","exports","Worker","__webpack_public_path__","EthStateMachine","setAccount","vm","address","nonce","a","putAccount","Account","balance","getAccount","log","runTx","tx","txData","_hex","gasLimit","gasPrice","TxWrapper","result","runTxSafe","sender","transactions","contractAddressOriginal","storage","length","createdAddress","VM","pStateManager","bind","stateManager","opcodes","opcodeListener","event","opcode","fee","stack","splice","reverse","key","toString","on","off","execResult","gasUsedTotal","contractAddress","ethutil","Error","gasUsed","gasRefund","exceptionError","logs","returnValue","error","errorType","parseInt","hash","fields","allowLess","Buffer","allowZero","BN","imul","iadd","flattenObject","ob","toReturn","i","hasOwnProperty","flatObject","Console","handleFocus","autoCompleteField","focus","handleBlur","blur","handleEnter","input","context","eval","flattened","options","Object","keys","filter","el","includes","tabIndex","onFocus","onBlur","fontWeight","autoComplete","onEnter","message","maxWidth","wordWrap","JSON","stringify","OptionListItem","option","isActive","onMouseLeave","OptionList","selectedIndex","_sIdx","top","left","_selectedIndex","position","minWidth","minHeight","visibility","boxShadow","map","idx","getTextLength","font","document","createElement","split","join","String","fromCharCode","textNode","createTextNode","appendChild","body","w","removeChild","getSuggestions","userInput","words","suggestions","word","startsWith","suggestion","slice","AutoCompleteField","suggestBox","onKeyDown","keyCode","ctrlKey","displaySuggestionsFor","onChange","currentTarget","box","s","caretColor","border","outline","onKeyPress","scriptCode","CreateScript","code","componentDidMount","setTimeout","runScript","ev","target","api","createAccount","rows","ui","button","run","LabeledForm","TrieViz","trie","Trie","add","put","Promise","resolve","reject","get","_root","onNode","nodeRef","node","walkController","next","onDone","_walkTrie","Ethpkg","Tab","FlatButton","Pagination","List","items","isLoading","intervalHandler","dataSource","polling","loadItems","startPolling","providedItems","processItems","interval","setInterval","stopPolling","clearInterval","prevProps","prevState","elements","renderItem","itemName","overflow","renderHeader","renderLoading","renderItems","nextProps","Tabs","selectedTab","Array","isArray","borderBottom","InputField","marginTop","marginRight","flexGrow","Tools","path","match","tools","renderOverview","exact","Badge","right","NavItem","hasBadge","marginLeft","activeClassName","textDecoration","TopNavigation","StatusItem","textTransform","CurrentBlockNumber","block","prices","eth","usd","eur","EthValue","selectedCurrency","changeCurrency","currencies","findIndex","wei","unit","valueString","ethers","utils","formatUnits","weiToUnit","replace","toUpperCase","price","etherString","formatEther","commify","parseFloat","toFixed","weiTo","GasPrice","getGasPrice","HardforkName","network","getNetwork","Network","networkId","networkName","chainId","Modal","show","onClose","zIndex","Column","RpcServer","modalOpen","openModal","handleProviderSelection","Currency","Address","handleClick","navigator","clipboard","writeText","then","alert","err","short","contract","useAlias","paddingRight","Signer","getSigner","signer","getAddress","StateTime","Toggle","toggle","newValue","find","newState","SyncState","isSyncing","syncInfo","startingBlock","currentBlock","highestBlock","send","componentWillUnmount","renderSyncState","getSyncPercentage","Math","ceil","Syncing","StatusBar","createdAt","NetworkId","GlobalToggle","DateField","ts","relative","moment","unix","format","Pill","paddingLeft","Gas","gas","BlockInfo","number","TxInfo","txHashes","Block","parentHash","difficulty","timestamp","miner","DataProvider","getAllAddresses","listAccounts","accounts","getBlocks","end","start","blocks","max","getBlock","getAllTransactionForBlock","txHash","getTransaction","transaction","getAllTransactions","getBlockNumber","latestBlock","getAllTxByContract","allTx","contractTx","creates","getAllContracts","contractCreations","receipts","getTransactionReceipt","receipt","getDataProvider","ProviderList","NoConnection","renderError","BlockList","Connectivity","LabeledField","valueEl","alignValue","styleValue","BlockTime","blockNumber","blockTime","TransactionItem","blockNumberMined","TransactionList","NavButton","AccountListItem","txCount","getBalance","getTransactionCount","flexBasis","Storage","cache","indexedDB","window","request","open","waitRequest","onsuccess","_key","_makeKey","instance","getCompilerData","bytecode","getInstance","AccountsList","addAccount","loadAccounts","ContractListItem","Contracts","showPrompt","bookmarkContract","importContract","CustomSelect","htmlFor","defaultValue","Switch","checked","onChecked","id","remote","worker","Proxy","prop","args","requestId","postMessage","method","arguments","addEventListener","responseId","removeEventListener","Compiler","compiler","compilerVersions","compiling","CompilerWorker","getVersions","compile","source","onData","selectOptions","errors","formattedMessage","readFile","file","reader","FileReader","onload","evt","readAsText","FileChooser","handleFiles","files","content","endsWith","parse","Visitor","callback","contextNew","childNodes","nodes","child","visit","JsonTreeView","ast","d3Tree","t1","transformer","initialContext","newNode","lastNode","root","transformTree","nodeType","attributes","Tree","src","displayDataTypes","enableClipboard","renderTree","CodeTab","hasFocus","handleChange","readOnly","renderOverlay","ContractCode","abi","contractCode","bytecodeMatch","loadArtifacts","getCode","solcArtifacts","handleSolcArtifacts","handleCompilerData","output","contracts","evm","artifact","deployedBytecode","object","t","change","letterSpacing","CreateContractView","handleData","deployContract","unlock","unlocked","factory","ContractFactory","deploy","AccountDetails","params","parsed","calledFunctionName","interface","parseTransaction","boxSizing","isSelected","borderLeft","borderRight","ContractTransactionHistory","selectedTx","selectedTransaction","onSelect","contractInterface","renderTransactions","Overlay","spinner","backdropFilter","ContractState","until","stateMachine","replayContractTransactions","handleSwitch","jsonState","onSwitch","renderJson","ContractConsole","signerAddress","contractProxy","ContractDetails","getProvider","loadContractTransactions","loadActiveSigner","handleSelectedTransaction","Contract","Form","TextField","suffix","required","data-shrink","background","aria-invalid","SendTransaction","amount","getTo","sendTransaction","amountString","parseEther","txRaw","BlockDetails","renderBlockDetails","TransactionDetails","renderTransactionDetails","ScriptList","scripts","Setting","updated","Settings","contextType","InplaceEdit","showInput","placeholder","AddressListItem","handleSetAlias","AddressList","networkData","peers","peer","enode","enr","protocol","CopyClipboardButton","copyToClipboard","faPaste","CommandLineSnippet","command","fetchJson","_url","fetch","json","response","versionList","query","registry","Registry","queryProjects","projects","workflowId","jobs","VersionList","GridAPI","getVersionList","v","selectedOption","CLIENT_SETTINGS","flag","ignoreIfEmpty","ClientConfiguration","setting","o","defaultOption","data-test-id","variant","fullWidth","flexWrap","renderField","ClientItem","client","selected","borderWidth","borderStyle","borderColor","logo","Grid","renderMainPanel","Client","clientInfo","renderClientInfo","renderHowTo","WorkflowListItem","workflow","projectId","updated_at","displayName","shortDescription","publisher","publisherName","onRunWorkflow","JobListItem","job","isRunning","isInstalled","started_at","finished_at","faCheck","Workflows","handleRunWorkflow","renderGridRequired","renderTabs","searchWorkflows","getJobs","WorkflowDetails","getWorkflowId","JobDetails","jobId","getJobId","fetchJobDetails","renderJobDetails","C","component","cProps","rest","render","AppliedRoute","createProvider","newProvider","providerConfig","p","Web3Provider","web3","currentProvider","JsonRpcProvider","Date","now","App","tryConnect","checkConnection","fontFamily","Routes","Boolean","location","hostname","Resizable","handleResize","getDimensions","innerWidth","innerHeight","Nano","Responsive","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7795c3af.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Spinner extends Component {\n  state = {\n    dimensions: undefined\n  }\n  componentDidMount() {\n    const dimensions = this.container.getBoundingClientRect();\n    const { width } = dimensions\n    this.setState({\n      dimensions: {\n        width\n      }\n    });\n  }\n  render() {\n    let { size } = this.props\n    const { dimensions } = this.state\n    size = size || (dimensions ? dimensions.width * 1 : undefined)\n    const fillColor = '#08a79c'\n    return (\n      <div \n      ref={c => (this.container = c)}\n      style={{\n        display: 'flex',\n        flex: this.props.size ? 0 : 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...this.props.style\n      }} >\n        <svg\n          version=\"1.1\"\n          viewBox=\"0 0 32 32\"\n          width={ size || '48px'}\n          height={ size || '48px'}\n          fill={ fillColor }\n        >\n          <path\n            opacity=\".25\"\n            d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n          />\n          <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 16 16\"\n              to=\"360 16 16\"\n              dur=\"0.8s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </svg>\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport Tree from 'react-d3-tree';\n\nexport default class TreeRenderer extends React.Component {\n  state = {}\n  componentDidMount() {\n    const { centered = 'default' } = this.props\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    const values = {\n      vertically: {\n        x: 50,\n        y: dimensions.height / 2\n      },\n      default: {\n        x: dimensions.width / 2,\n        y: dimensions.height / 5 // 20%\n      }\n    }\n    this.setState({\n      translate: {\n        ...values[centered]\n      }\n    });\n  }\n  render() {\n    const { data, style, orientation = 'vertical', pathFunc='straight' } = this.props\n    const { translate } = this.state\n    return (\n      <div \n      ref={tc => (this.treeContainer = tc)}\n      style={{\n        flex: 1,\n        ...style\n      }}>\n        <Tree \n          data={data} \n          orientation={orientation}\n          pathFunc={pathFunc}\n          translate={{...translate}}\n          />\n      </div>\n    );\n  }\n}","// TODO init from storage\n\nexport const globalState = {\n  theme: 'light',\n  alias: false,\n  time: 'block',\n  badge: '',\n  dangerous: false,\n  isConnected: false,\n  selectedProvider: 'Ganache', // user setting\n  connectionInterval: 2000, // test for connection every x ms\n  providers: [\n    { name: 'Geth', url: '127.0.0.1:8545' }\n   ,{ name: 'Ganache', url: '127.0.0.1:7545' }\n   ,{ name: 'Metamask', url: 'web3' }\n   // ,{ name: 'Infura', url: '' }\n  ],\n  provider: undefined, // provider instance\n  navItems: [\n    { label: 'Accounts', route: '/accounts', exclude: false },\n    { label: 'Addresses', route: '/addresses', exclude: false },\n    { label: 'Blocks', route: '/blocks', exclude: false },\n    { label: 'Transactions', route: '/transactions', exclude: false },\n    { label: 'Contracts', route: '/contracts', exclude: false },\n    /*\n    'Events',\n    'Logs',\n    */\n    { label: 'Network', route: '/network', exclude: false },\n    { label: 'Client', route: '/client', exclude: false },\n    { label: 'Workflows', route: '/workflows', exclude: false },\n    // { label: 'Tools', route: '/tools', exclude: false },\n    { label: 'Scripts', route: '/scripts', exclude: true },\n    { label: 'Settings', route: '/settings', exclude: false },\n  ],\n  statusBarItems: [\n    { name: 'provider', exclude: false },\n    { name: 'network', exclude: false },\n    { name: 'current_block', exclude: false },\n    { name: 'sync', exclude: false },\n\n    { name: 'state_time', exclude: false },\n    { name: 'gas_price', exclude: false },\n\n\n    /*\n    { name: 'hardfork', exclude: false },\n    */\n\n    { name: 'currency', exclude: false },\n    { name: 'time', exclude: false },\n    { name: 'alias', exclude: false },\n    { name: 'signer', exclude: false },\n    { name: 'theme', exclude: false }\n  ],\n  aliases: {\n  }\n }\n","import React from 'react';\nimport { globalState } from './State'\n\nexport const StoreContext = React.createContext({})\n\nexport const withNewContext = WrappedComponent => {\n  return class extends React.Component {\n    state = globalState\n    render() {\n      return (\n        <StoreContext.Provider value={this}>\n          <WrappedComponent {...this.props} />\n        </StoreContext.Provider>\n      )\n    }\n  }\n}\n\nexport const withGlobalState = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return (\n        <StoreContext.Consumer>\n          { (val) => {\n            // console.log('render with ctx value', val)\n            return <WrappedComponent {...this.props } global={val} />\n          }}\n        </StoreContext.Consumer>\n      )\n    }\n  }\n}","import React from 'react'\n\nexport function Row({ children, style = {} }) { \n  return <div style={{\n    flexDirection: 'row', \n    justifyContent: 'space-between',\n    display: 'flex', \n    ...style \n  }}>{ children }</div>\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Button from './Button'\n\nexport default withRouter(({ history, style }) => {\n  return (\n    <Button \n      style={style} \n      onClick={() => history.goBack()}\n      icon=\"ArrowLeft\"\n      label=\"Back\"\n    />\n  )\n})","import React, { Component } from 'react'\nimport { Row } from './Row'\nimport BackButton from './BackButton'\n\nexport default class ContainerHeader extends Component {\n  render() {\n    const { title } = this.props\n    return (\n      <Row style={{\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        ...this.props.style\n      }}>\n        <BackButton />\n        <span style={{\n          fontSize: '1.35rem',\n          color: '#666',\n          alignSelf: 'center'\n        }}>{typeof title === 'function' ? title() : title}</span>\n        {/* space element */}\n        <div></div>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\nimport { useTheme } from '../Theme'\nimport ContainerHeader from './ContainerHeader'\n\nclass Container extends Component {\n  render() {\n    const { style = {}, global, header, isCard=true } = this.props\n    const theme = useTheme(global)\n    return (\n      <div className={isCard ? 'card' : ''} style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 10,\n        maxHeight: '100%',\n        overflowY: 'scroll',\n        backgroundColor: theme.container.backgroundColor,\n        color: theme.container.color,\n        margin: 10,\n        borderRadius: 10,\n        ...style\n      }}>\n        { header && <ContainerHeader style={this.props.headerStyle} title={header} /> }\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nexport default withGlobalState(Container)\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\nimport { useTheme } from '../Theme'\nimport Text from './Text'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\n\nclass Button extends Component {\n  handleOnClick = (e) => {\n    const { onClick = () => { console.warn('No button click handler provided') } } = this.props\n    if (e) {\n      e.stopPropagation()\n      e.preventDefault()\n    }\n    onClick(e)\n  }\n  render() {\n    const { style, global, enabled= true, icon, iconColor = undefined, dangerous = false } = this.props\n    // TODO disable when dangerous active + conditions\n    const theme = useTheme(global)\n    return (\n      <button \n        style={{\n          display: 'inline-flex',\n          paddingTop: 3,\n          paddingBottom: 3,\n          cursor: enabled ? 'pointer' : 'not-allowed',\n          color: theme.foreground,\n          ...style,\n          backgroundColor: 'transparent',\n        }}\n        disabled={!enabled}\n        onClick={this.handleOnClick}\n      >\n        <div style={{\n          display: 'inline-flex',\n          flex: 1,\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          opacity: enabled ? 1 : 0.25\n        }}>\n          { icon && <FontAwesomeIcon icon={icons['fa'+icon]} style={{ color: iconColor, margin: 5 }} pulse={icon === 'Spinner'} /> }\n          {this.props.children || <Text>{this.props.label}</Text>}\n        </div>\n      </button>\n    )\n  }\n}\n\nexport default withGlobalState(Button)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Clickable from './Clickable'\n\nclass ListItem extends Component {\n  render() {\n    const { children, clickable = true, style, to, onClick = (() => {\n      if(!to) return\n      this.props.history.push(to)\n    })} = this.props\n    return (\n      <Clickable clickable={clickable} onClick={onClick} style={{\n        display: 'flex',\n        cursor: clickable? 'pointer' : 'default',\n        borderTop: '1px solid #e6e6e6',\n        color: '#3e3e3e',\n        padding: 5,\n        marginBottom: 2,\n        ...style\n      }}>\n        { children }\n      </Clickable>\n    )\n  }\n}\n\nexport default withRouter(ListItem)\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\n\nclass Text extends Component {\n  render() {\n    // const { global } = this.props\n    let { text } = this.props\n    if (typeof this.props.children === 'string') {\n      text = this.props.children\n    } else {\n      text = text || \"<invalid>\"\n    }\n    return (\n      <span style={{...this.props.style}}>\n        {text}\n      </span>\n    )\n  }\n}\n\nexport default withGlobalState(Text)\n","const dark = {\n  primaryBackground: '#292929'\n}\n\n// TODO consider simplification to foreground & background\nexport const Themes = {\n  light: {\n    foreground: '#636363',\n    backgroundColor: '#FBFAFC',\n    topNav: {\n      backgroundColor: '#fff',\n      item: {\n        color: 'rgb(38, 68, 82)'\n      }\n    },\n    statusBar: {\n      backgroundColor: '#fff',\n      label: {\n        color: '#5e5e5e'\n      },\n      value: {\n        color: '#3e3e3e'\n      }\n    },\n    field: {\n      label: {\n        color: '#636363' \n      },\n      value: {\n        color: '#3e3e3e'\n      }\n    },\n    container: {\n      backgroundColor: 'white'\n    }\n  },\n  dark: {\n    foreground: 'white',\n    backgroundColor: '#262626',\n    topNav: {\n      backgroundColor: dark.primaryBackground,\n      item: {\n        color: 'white'\n      }\n    },\n    statusBar: {\n      backgroundColor: dark.primaryBackground,\n      label: {\n        color: '#9e9e9e'\n      },\n      value: {\n        color: '#cecece'\n      }\n    },\n    field: {\n      label: {\n        color: 'white' \n      },\n      value: {\n        color: 'white'\n      } \n    },\n    container: {\n      backgroundColor: dark.primaryBackground,\n      color: 'white',\n    }\n  },\n};\n\nexport const useTheme = (global) => {\n  const { state: globalState } = global\n  const theme = Themes[globalState.theme]\n  return theme\n}","import React, { Component } from 'react'\n\nexport default class Clickable extends Component {\n  state = {\n    hover: false\n  }\n  onMouseOver = (e) => {\n    // only display hover on top most element:\n    this.setState({\n      hover: true\n    })\n    e.stopPropagation();\n  }\n  render() {\n    const { onClick = () => { }, style = {}, clickable = true } = this.props\n    const { hover } = this.state\n    return (\n      <div\n        onClick={(e) => {\n          onClick()\n          e.stopPropagation()\n          e.preventDefault()\n        }}\n        className={clickable ? 'clickable' : ''}\n        style={{\n          display: 'inline-block',\n          paddingTop: 5,\n          paddingBottom: 5,\n          cursor: 'pointer',\n          ...style,\n          backgroundColor: (hover && clickable) ? '#bdbdbd15' : style.backgroundColor\n        }}\n        onMouseEnter={this.onMouseOver}\n        onMouseOver={this.onMouseOver}\n        onMouseOut={() => this.setState({ hover: false})}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"a97412092dd0a8bc61b6.worker.js\");\n};","import TxWrapper from \"../TxWrapper\"\nimport Account from \"ethereumjs-account\"\nimport VM from \"ethereumjs-vm\"\nimport * as ethutil from 'ethereumjs-util'\n\nconst to32Bytes = (num) => {\n  let numStr = num.toString()\n  // const key =  Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\n  return Buffer.from(`${'0'.repeat(64 - numStr.length)}${numStr}`, 'hex')\n}\n\nexport default class EthStateMachine {\n  setAccount = async (vm, address, nonce) => {\n    try {\n      // https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/account/src/index.ts#L31\n      // fund account with balance in wei and set nonce to correct tx nonce\n      await vm.putAccount(address, new Account({ balance: 100e18, nonce }))\n      const result = await vm.getAccount(address)\n      // console.log('account set', address, result)\n    } catch (error) {\n      console.log('error funding address', error)\n    }\n  }\n  runTx = async (vm, tx) => {\n    // convert ethers bn to string values to be parsed by BN\n    const txData = {\n      value: tx.value._hex,\n      gasLimit: tx.gasLimit._hex, // We assume that 2M is enough,\n      gasPrice: tx.gasPrice._hex,\n      data: tx.data,\n      nonce: tx.nonce,\n      to: tx.to\n    }\n    // const parsed = tryParseTransaction(tx)\n    // console.log('process', parsed.name)\n    // console.log('set tx.from', tx.from)\n    tx = new TxWrapper(txData, tx.from)\n    // https://github.com/ethereumjs/ethereumjs-vm/blob/e2c191b1c93e71f832413bb904f4db521208ebac/packages/vm/lib/runTx.ts#L89\n    const result = await vm.runTx({ tx })\n    return result\n  }\n  runTxSafe = async (vm, tx) => {\n    const { from: sender } = tx\n    // make sure sender has funds to run tx\n    await this.setAccount(vm, sender, tx.nonce)\n    return this.runTx(vm, tx)\n  }\n  async replayContractTransactions(transactions = [], to, contractAddressOriginal) {\n\n    const storage = {}\n\n    if (!transactions || transactions.length === 0) {\n      return { createdAddress: undefined, storage }\n    }\n\n    const vm = new VM()\n    vm.putAccount = vm.pStateManager.putAccount.bind(vm.stateManager)\n    vm.getAccount = vm.pStateManager.getAccount.bind(vm.stateManager)\n\n    const opcodes = []\n    let contractAddress\n\n    const opcodeListener = (event) => {\n      // https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/vm/lib/evm/interpreter.ts#L179\n      let { opcode, address } = event\n      const { fee, name } = opcode\n      const stack = [...event.stack]\n      const copy = { ...event, stack }\n      if (name === \"SSTORE\") {\n        const [key, value] = stack.splice(-2).reverse()\n        storage[key] = value.toString('hex')\n        // console.log('store detected', address.toString('hex'), key.toString('hex'), value.toString('hex'))\n      }\n      opcodes.push(opcode)\n    }\n\n    // process all transactions...\n    // this will set contractAddress and intercept calls to storage\n    for (const tx of transactions) {\n      // console.log('process tx', tx.hash)\n\n      vm.on('step', opcodeListener)\n      const result = await this.runTxSafe(vm, tx)\n      vm.off('step', opcodeListener)\n\n      const { execResult, gasUsedTotal, createdAddress } = result\n\n      if (createdAddress) {\n        // TODO provide network id\n        contractAddress = ethutil.toChecksumAddress('0x' + createdAddress.toString('hex'))\n      }\n\n      // if we end up having a wrong contract address replicating the state failed\n      if (createdAddress && contractAddressOriginal && contractAddress !== contractAddressOriginal) {\n        throw new Error(`Contract address mismatch: ${contractAddress} !== ${contractAddressOriginal}`)\n      }\n\n      const { gasUsed /* BN */, gasRefund /* BN */, exceptionError, logs /* [] */, returnValue /* Buffer */ } = execResult\n      const { error, errorType } = (exceptionError || {})\n      // console.log(`gasUsed: ${gasUsed} opcodes: ${opcodes.length}, gasRefund: ${gasRefund} exceptionError: ${error} created: ${createdAddress ? createdAddress.toString('hex') : ''}`)\n\n      // TODO if valid tx fails in simulation throw\n      if (exceptionError) {\n        console.log('failed tx', parseInt(tx.gasLimit._hex), tx)\n        console.error(error, exceptionError)\n        // throw new Error(error)\n      }\n\n      if (to && tx.hash === to.hash) {\n        break;\n      }\n    }\n\n    // TODO do we have to wait for event emitter?\n\n\n    // TODO turn results into receipts\n    // https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/vm/lib/runBlock.ts#L224\n    return {\n      createdAddress: contractAddress,\n      storage\n    }\n\n  }\n}","import * as ethutil from 'ethereumjs-util'\nimport { BN } from 'ethereumjs-util'\n\n/**\n * provides interface to call vm.runTx\n */\nexport default class TxWrapper {\n  constructor(txData, sender) {\n    this.tx = txData\n    this.sender = sender\n    const fields = [\n      {\n        name: 'nonce',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'gasPrice',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'gasLimit',\n        alias: 'gas',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'to',\n        allowZero: true,\n        length: 20,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'value',\n        length: 32,\n        allowLess: true,\n        default: Buffer.from([]),\n      },\n      {\n        name: 'data',\n        alias: 'input',\n        allowZero: true,\n        default: Buffer.from([]),\n      }\n    ]\n    ethutil.defineProperties(this, fields, txData)\n  }\n  /**\n   * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md\n   */\n  getBaseFee() {\n    /**\n    const fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'))\n    if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this._common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n    */\n    // FIXME calculate base fee\n    return new BN('1') // gasLimit must be higher\n  }\n  getSenderAddress() {\n    // getSenderAddress is where the signature check is performed\n    // <- unsigned tx with hardcoded sender possible\n    // return this.tx.getSenderAddress()\n    return this.sender\n  }\n  getUpfrontCost() {\n    return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value))\n  }\n}","import React, { Component } from 'react'\nimport AutoCompleteField from '../../widgets/AutoCompleteField'\nimport { Row } from '../../widgets/Row'\n\nconst flattenObject = function(ob) {\n\tvar toReturn = {};\n\tfor (var i in ob) {\n\t\tif (!ob.hasOwnProperty(i)) continue;\n\t\tif ((typeof ob[i]) == 'object') {\n\t\t\tvar flatObject = flattenObject(ob[i]);\n\t\t\tfor (var x in flatObject) {\n\t\t\t\tif (!flatObject.hasOwnProperty(x)) continue;\n\t\t\t\ttoReturn[i + '.' + x] = flatObject[x];\n\t\t\t}\n\t\t} else {\n\t\t\ttoReturn[i] = ob[i];\n\t\t}\n\t}\n\treturn toReturn;\n}\n\nexport default class Console extends Component {\n  state = {\n  }\n  handleFocus = (e) => {\n    this.autoCompleteField.focus();\n  }\n  handleBlur = () => {\n    this.autoCompleteField.blur();\n  }\n  handleEnter = async (input) => {\n      // eslint-disable-next-line\n    const { context = {} } = this.props\n    try {\n      // eslint-disable-next-line\n      const result = await eval(`context.${input}`)\n      this.setState({ result, error: undefined })\n    } catch (error) {\n      console.log('error', error)\n      this.setState({ error })\n    }\n  }\n  render() {\n    const { result, error } = this.state\n    const { context = {} } = this.props\n    const flattened = flattenObject(context)\n    const options = Object.keys(flattened).filter(el => !el.includes('.'))\n    // console.log('options', options)\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          backgroundColor: 'rgb(39, 40, 34)',\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          ...this.props.style\n        }}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n      >\n        <Row style={{\n          backgroundColor: 'rgba(85, 85, 85, 0.22)',\n          justifyContent: 'left',\n          alignItems: 'center'\n        }}>\n          <span style={{ color: 'cyan', padding: 5, fontWeight: 'bold' }}>{\">\"}</span>\n          <AutoCompleteField \n            ref={(autoComplete) => { this.autoCompleteField = autoComplete; }}\n            fontSize={14}\n            options={options}\n            onEnter={this.handleEnter}\n            style={{\n              color: '#ffffffb8'\n            }}\n          />\n        </Row>\n        {error &&\n        <span style={{\n          fontWeight: 'bold',\n          fontSize: '1rem',\n          color: '#da4747c9',\n          padding: 5,\n          backgroundColor: '#ef565629'\n        \n        }}>Error: {error.message}</span>\n        }\n        {!error && result &&  <div style={{\n          padding: 5,\n          color: '#ffffff6b',\n          maxWidth: '100%',\n          wordWrap: 'break-word',\n          overflowY: 'scroll'\n        }}> {\"<- \" + JSON.stringify(result, null, 2)}</div>}\n\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nclass OptionListItem extends Component {\n  render() {\n    const { option, isActive, onMouseEnter, onMouseLeave } = this.props\n    return (\n      <div\n        style={{\n          backgroundColor: isActive ? '#6f6f6f6b' : 'transparent',\n          color: isActive ? 'greenyellow' : '#eee',\n          padding: 2\n        }}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        {option}\n      </div>\n    )\n  }\n}\n\nclass OptionList extends Component {\n  state = {\n    selectedIndex: undefined\n  }\n  render() {\n    const { selectedIndex: _sIdx } = this.state\n    const { options, selectedIndex = 0, top = 0, left = 0 } = this.props\n    let _selectedIndex = _sIdx !== undefined ? _sIdx : selectedIndex\n    return (\n      <div style={{\n        position: 'fixed',\n        top,\n        left,\n        minWidth: 200,\n        minHeight: 50,\n        backgroundColor: '#3c3c3c',\n        visibility: (options && options.length > 1) ? 'visible' : 'hidden',\n        boxShadow: 'rgba(72, 154, 212, 0.2) 0px 1px 2px 0px'\n      }}>\n        {options && options.map((option, idx) => {\n          const isActive = idx === _selectedIndex\n          return (\n            <OptionListItem \n              key={idx}\n              option={option} \n              isActive={isActive} \n              onMouseEnter={() => this.setState({ selectedIndex: idx })}\n              onMouseLeave={() => this.setState({ selectedIndex: undefined })}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\n/*\nconst _getTextLength = (text, fontSize) => {\n  const c = document.createElement('canvas');\n  const ctx = c.getContext(\"2d\");\n  ctx.font = `${fontSize}px Arial`;\n  return Math.ceil(ctx.measureText(text).width + 1)\n}\n*/\n\nconst getTextLength = (text, font) => {\n  const el = document.createElement('div');\n  text = text.split(' ').join(String.fromCharCode(160)) // replace space with &nbsp;\n  const textNode = document.createTextNode(text)\n  el.appendChild(textNode)\n  el.style.font = font;\n  el.style.position = 'absolute'\n  el.style.visibility = 'hidden'\n  el.style.left = '-999px'\n  el.style.top = '-999px'\n  el.style.height = 'auto'\n\n  document.body.appendChild(el)\n  // let wString = getComputedStyle(el).width\n  // const w = parseFloat(wString.replace('px', ''))\n  const box = el.getBoundingClientRect()\n  const w = box.width\n  document.body.removeChild(el)\n  return w\n}\n\nconst getSuggestions = (userInput, words) => {\n  const suggestions = []\n  userInput = userInput || ''\n  for (const word of words) {\n    if (word.startsWith(userInput)) {\n      suggestions.push({\n        word,\n        suggestion: word.slice(userInput.length)\n      })\n    }\n  }\n  return suggestions\n}\n\nexport default class AutoCompleteField extends Component {\n  state = {\n    value: '',\n    suggestion: '',\n    suggestions: [],\n    selectedIndex: 0,\n    suggestBox: {\n      top: 0,\n      left: 0\n    }\n  }\n  componentDidMount() {\n    const box = this.userInput.getBoundingClientRect()\n    this.setState({\n      suggestBox: {\n        top: box.top + box.height + 3,\n        left: box.left\n      }\n    })\n  }\n  onKeyDown = (e) => {\n    const SPACE = 32\n    if (e.keyCode === SPACE && e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n      return this.displaySuggestionsFor(this.state.value)\n    }\n    else if (e.key === 'Escape') {\n      this.setState({\n        suggestions: []\n      })\n    }\n    else if (e.key === 'Tab') {\n      const { value: userInput, selectedIndex } = this.state\n      const suggestions = getSuggestions(userInput, this.props.options)\n      const suggestion = suggestions.length > 0 ? suggestions[selectedIndex].word : ''\n      this.setState({\n        value: suggestion,\n        suggestions: [],\n        selectedIndex: 0\n      })\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    else if(e.key === 'Enter') {\n      const { value: userInput, selectedIndex } = this.state\n      const suggestions = getSuggestions(userInput, this.props.options)\n      const suggestion = suggestions.length > 0 ? suggestions[selectedIndex].word : ''\n      if (!suggestion || suggestion === userInput) {\n        this.props.onEnter(userInput)\n      } else {\n        // user accepts suggestion (same as tab)\n        this.setState({\n          value: suggestion,\n          suggestions: [],\n          selectedIndex: 0\n        })\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    else if (e.key === 'ArrowUp') {\n      let { selectedIndex, suggestions } = this.state\n      if (suggestions.length === 0) {\n        return\n      }\n      this.setState({\n        selectedIndex: (selectedIndex - 1) >= 0 ? selectedIndex - 1 : (suggestions.length - 1)\n      })\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    else if (e.key === 'ArrowDown') {\n      let { selectedIndex, suggestions } = this.state\n      if (suggestions.length === 0) {\n        return\n      }\n      this.setState({\n        selectedIndex: (selectedIndex + 1) % suggestions.length\n      })\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n  displaySuggestionsFor(userInput) {\n    const suggestions = getSuggestions(userInput, this.props.options)\n    this.setState({\n      value: userInput,\n      suggestions: [...suggestions],\n      selectedIndex: 0\n    })\n  }\n  onChange = (e) => {\n    const userInput = e.currentTarget.value;\n    this.displaySuggestionsFor(userInput)\n  }\n  focus() {\n    this.userInput.focus();\n  }\n  blur = () => {\n    // hide suggestions\n    this.setState({\n      suggestions: []\n    })\n  }\n  render() {\n    const { value, suggestions, selectedIndex, suggestBox } = this.state\n    const suggestion = suggestions.length > selectedIndex ? suggestions[selectedIndex].suggestion : ''\n    const { fontSize = 16 } = this.props\n    return (\n      <Fragment>\n        <OptionList\n          selectedIndex={selectedIndex}\n          options={suggestions.map(s => s.word)}\n          top={suggestBox.top}\n          left={suggestBox.left}\n        />\n        <input\n          type=\"text\"\n          ref={(input) => { this.userInput = input; }}\n          style={{\n            backgroundColor: 'transparent',\n            font: `${fontSize}px Arial`,\n            color: 'white',\n            caretColor: 'cyan',\n            padding: 0,\n            border: 'none',\n            outline: 'none',\n            width: `${getTextLength(value, `${fontSize}px Arial`) || 1}px`,\n            ...this.props.style\n          }}\n          value={value}\n          onKeyPress={this.onKeyPress}\n          onKeyDown={this.onKeyDown}\n          onChange={this.onChange}\n        />\n        <span style={{\n          color: 'rgba(197, 197, 197, 0.4)',\n          fontSize: `${fontSize}px`,\n        }}>{suggestion}</span>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Button from '../../../widgets/Button'\nimport Tabs from '../../../widgets/Tabs'\nimport Tab from '../../../widgets/Tab'\n\nconst scriptCode = `\nconst run = async () => {\n  let i = 0\n  while(i++ < 10){\n    await api.createAccount(100)\n  }\n}\nmodule.exports = { run, ui: { button: { label: 'Create 10' }, insert: 'accounts' } }\n`\n\nexport default class CreateScript extends Component {\n  state = {\n    code: scriptCode,\n    result: undefined,\n    error: undefined\n  }\n  componentDidMount = () => {\n    setTimeout(() => {\n      this.runScript(this.state.code)\n    }, 1000)\n  }\n  onChange = (ev) => {\n    const code = ev.target.value\n    this.setState({\n      code\n    })\n    this.runScript(code)\n  }\n  runScript = (code) => {\n    // eslint-disable-next-line\n    const api = {\n      createAccount: async () => {\n        console.log('create account called')\n\n      }\n    }\n    let result\n    try {\n      // eslint-disable-next-line\n      result = eval(code)\n    } catch (error) {\n      return this.setState({\n        error\n      })\n    }\n    console.log('result', result)\n    this.setState({\n      result,\n      error: undefined\n    })\n  }\n  render() {\n    const { code, result, error } = this.state\n    return (\n      <div>\n        <h3>Create a script</h3>\n        <h5>Examples</h5>\n        <Tabs>\n          <Tab label=\"Create 10 random accounts\">\n            <textarea\n              value={code}\n              onChange={this.onChange}\n              rows=\"15\"\n              style={{\n                flex: 1\n              }}\n            />\n          </Tab>\n        </Tabs>\n\n        <h3>Preview</h3>\n        <div style={{ height: 200, border: '1px solid black', padding: 5, marginBottom: 10 }}>\n          {\n            result && result.ui && !error\n              ? <Button label={result.ui.button.label} onClick={result.run} />\n              : <span>error: {error ? error.message : ''}</span>\n          }\n        </div>\n        <Button>Save</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class LabeledForm extends Component {\n  render() {\n    const { label } = this.props\n    return (\n      <div className=\"card\" style={{\n        backgroundColor: '#f3f3f34d',\n        width: 500,\n        height: 300,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        padding: 20,\n        margin: 10,\n        borderRadius: 20\n      }}>\n        <fieldset>\n          <legend>{label}</legend>\n          { this.props.children }\n        </fieldset>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Trie from 'merkle-patricia-tree'\nimport Button from '../../../widgets/Button'\nimport Tree from '../../../widgets/Tree'\n\nexport default class TrieViz extends Component {\n  state = {\n    trie: undefined,\n    data: {\n      name: 'root',\n      children: []\n    }\n  }\n  componentDidMount = () => {\n    this.setState({\n      trie: new Trie()\n    })\n  }\n  add = async () => {\n    const { trie } = this.state\n    const put = (key, val) => new Promise((resolve, reject) => {\n      trie.put(key, val, (error, data) => {\n        if(error) return reject(error)\n        return resolve(data)\n      })\n    })\n    \n    await put(Buffer.from('test'), Buffer.from('one'))\n    await put(Buffer.from('foo'), Buffer.from('boz'))\n    await put(Buffer.from('bar'), Buffer.from('baz'))\n    const value = await new Promise((resolve, reject) => {\n      trie.get(Buffer.from('test'), (error, data) => {\n        if(error) return reject(error)\n        return resolve(data)\n      })\n    })\n\n    console.log(trie._root.toString('hex'))\n    const onNode = (nodeRef, node, key, walkController) => {\n      console.log('on node called', nodeRef.toString('hex'), node, key)\n      walkController.next()\n    }\n    const onDone = () => {\n      console.log('on done called')\n    }\n    trie._walkTrie(trie._root, onNode, onDone)\n\n    console.log('transform trie', trie)\n\n    console.log(value.toString())\n  }\n  render() {\n    const { data } = this.state\n    return (\n      <div style={{\n        border: '1px solid black'\n      }}>\n        <Button label=\"add\" onClick={this.add}/>\n        <Tree data={data} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Ethpkg extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Ethpkg</h2>\n        <div style={{\n          width: '100%',\n          height: 500,\n          border: '2px dashed blue'\n        }}>\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Tab extends Component {\n  render() {\n    const { children, style } = this.props\n    return (\n      <div \n        className=\"Tab\"\n        style={{ display: 'flex', flex: 1, ...style }}\n      >{children}</div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nfunction FlatButton({ label }) {\n  return(\n    <div style={{ \n      display: 'inline-flex', \n      padding: 5,\n      backgroundColor: '#f5f6fa',\n      border: '1px solid #f5f6fa',\n      color: '#a3a9b5',\n      fontWeight: 'bold'\n      }}>\n      {label}\n    </div>\n  )\n}\n\nexport default class Pagination extends Component {\n  render() {\n    return (\n      <div style={{\n        alignSelf: 'flex-end',\n        padding: 5,\n        borderRadius: 10,\n        fontSize: '0.7rem'\n      }}>\n      <FlatButton label=\"<\"/> <FlatButton label=\"Page 2\"/> <FlatButton label=\">\"/> \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Pagination from './Pagination'\nimport Spinner from './Spinner'\nimport Error from './Error'\nimport { Row } from './Row'\n\n// TODO implement list header\n// class ListHeader extends Component { }\n\nexport default class List extends Component {\n  state = {\n    items: [],\n    isLoading: false,\n    error: undefined,\n    intervalHandler: undefined,\n    dataSource: undefined\n  }\n  componentDidMount = async () => {\n    const { polling, dataSource } = this.props\n    this.setState({\n      dataSource\n    })\n    this.loadItems()\n    if (polling) {\n      this.startPolling(polling)\n    }\n  }\n  componentWillUnmount() {\n    this.stopPolling()\n  }\n  loadItems = async () => {\n    const { loadItems = () => undefined, items: providedItems = [], processItems } = this.props\n    this.setState({\n      isLoading: true\n    })\n    try {\n      let items = (await loadItems()) || providedItems\n      // filter null and undefined\n      items = items.filter(item => !!item)\n      if (typeof processItems === 'function') {\n        items = processItems(items)\n      }\n      this.setState({\n        items,\n        isLoading: false\n      })\n    } catch (error) {\n      console.log('loading error', error)\n      this.setState({\n        error,\n        isLoading: false\n      })\n    }\n  }\n  startPolling = (interval) => {\n    const intervalHandler = setInterval(this.loadItems, interval)\n    this.setState({\n      intervalHandler\n    })\n  }\n  stopPolling = () => {\n    const { intervalHandler } = this.state\n    if (intervalHandler) {\n      clearInterval(intervalHandler)\n    }\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.dataSource !== prevState.dataSource) {\n      return { dataSource: nextProps.dataSource }\n    }\n    return null\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.dataSource !== this.props.dataSource ){\n      console.log('data source changed in list', this.props.dataSource)\n      this.loadItems()\n      // TODO handle polling here\n    }\n  }\n  renderLoading() {\n    return (\n      <div style={{\n        maxHeight: 300,\n        display: 'flex',\n        flexDirection: 'column',\n        opacity: 0.6,\n        alignItems: 'center'\n      }}>\n        <div style={{\n          fontSize: '2rem',\n          alignSelf: 'center',\n          margin: 20\n        }}>Loading items...</div>\n        <Spinner style={{\n          width: 50,\n          height: 50\n        }} />\n      </div>\n    )\n  }\n  renderHeader() {\n    const { items } = this.state\n    const { elements } = this.props\n    return (\n      <Row style={{\n        height: 40,\n        padding: 10,\n        backgroundColor: 'rgba(243, 243, 243, 0.1)',\n        alignItems: 'center'\n      }}>\n        {elements && elements()}\n\n        {items.length > 100 && <Pagination />}\n      </Row>\n    )\n  }\n  renderItems() {\n    const { items } = this.state\n    const { style, renderItem = () => { }, itemName = \"items\" } = this.props\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n      }}>\n        {items.length > 0\n          ? items.map(renderItem)\n          : <h2 style={{ alignSelf: 'center', color: '#ccc' }}>No {itemName} found</h2>\n        }\n      </div>\n    )\n  }\n  render() {\n    const { isLoading, error } = this.state\n    const { header = true } = this.props\n    return (\n      <div\n        className=\"List\"\n        style={{\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'column',\n        }}>\n        {header && this.renderHeader()}\n        {error\n          ? <Error error={error} />\n          : isLoading ? this.renderLoading() : this.renderItems()\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Error extends Component {\n  render() {\n    const { error } = this.props\n    return (\n      <div style={{ color: 'red' }}>\n        { error && error.message }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row } from './Row'\n\nexport default class Tabs extends Component {\n  state = {\n    selectedTab: 0\n  }\n  render() {\n    let { selectedTab } = this.state\n    selectedTab = this.props.selectedTab || selectedTab\n    let { children, style } = this.props\n    if (!Array.isArray(children)) {\n      children = [children]\n    }\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n      }}>\n        <Row style={{ justifyContent: 'normal' }}>{children.map((c, idx) => <div\n          key={idx}\n          style={{ \n            margin: 5, \n            fontWeight: 'bold',\n            borderBottom: idx === selectedTab ? '2px solid #08a79c' : 'none',\n            cursor: 'pointer',\n            ...style \n          }}\n          onClick={() => this.setState({ selectedTab: idx })}\n        >{c.props.label}</div>)}</Row>\n\n        {children[selectedTab]}\n\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport { Row } from '../../../widgets/Row'\nimport { utils } from 'ethers'\nimport LabeledForm from '../../../widgets/LabeledForm'\nimport TrieViz from './TrieViz'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport ListItem from '../../../widgets/ListItem'\nimport List from '../../../widgets/List'\nimport Ethpkg from './Ethpkg'\n\nclass InputField extends Component {\n  render() {\n    const { label, value, onChange = () => { } } = this.props\n    return (\n      <Row style={{\n        justifyContent: 'normal',\n        marginTop: 10,\n        fontSize: '1.1rem'\n      }}>\n        <span style={{ marginRight: 10, width: 50, padding: 5 }}>{label}</span>\n        <input style={{ flexGrow: 1 }} type=\"text\" value={value} onChange={(e) => onChange(e.target.value)} />\n      </Row>\n    )\n  }\n}\n\nclass Converter extends Component {\n  state = {\n    input: '',\n    output: ''\n  }\n  handleInput = (input) => {\n    this.setState({\n      input,\n      output: utils.keccak256(Buffer.from(input))\n      // output: utils.keccak256(utils.toUtf8Bytes(input))\n    })\n  }\n  render() {\n    const { input, output } = this.state\n    return (\n      <LabeledForm label=\"Converter\">\n        <select value=\"keccak\">\n          <option value=\"volvo\">keccak</option>\n        </select>\n        <InputField label=\"Input\" value={input} onChange={this.handleInput} />\n        <InputField label=\"Output\" value={output} />\n      </LabeledForm>\n    )\n  }\n}\n\nclass Tools extends Component {\n  renderOverview() {\n    const { match } = this.props\n    const { path } = match\n    const tools = [\n      { name: 'ethpkg', to: `${path}/ethpkg` }\n      , { name: 'trie', to: `${path}/trie` }\n    ]\n    return (\n      <List\n        items={tools}\n        renderItem={item => <ListItem key={item.to} to={item.to}><span>{item.name}</span></ListItem>}\n      />\n    )\n  }\n  render() {\n    const { match } = this.props\n    const { path } = match\n    console.log('route path', match)\n    return (\n      <Container>\n        <h2>Tools</h2>\n        {this.renderOverview()}\n        <div style={{\n          flex: 5\n        }}>\n          <Switch>\n            <Route exact path={path}>\n              {/* \n            <Row>\n              <Converter />\n              next contract address calculator + lurch support\n              <span></span>\n              <span></span>\n            </Row>\n            */}\n            </Route>\n            <Route path={`${path}/ethpkg`}>\n              <Ethpkg />\n            </Route>\n            <Route path={`${path}/trie`}>\n              <TrieViz />\n            </Route>\n          </Switch>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(Tools)\n","import React, { Component } from 'react'\n\nexport default class Badge extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: '#ff22a7e0',\n        position: 'absolute',\n        width: 10,\n        height: 10,\n        padding: 5,\n        borderRadius: 10,\n        top: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>\n        <span style={{\n          fontSize: '1.25rem',\n          color: 'white',\n          fontWeight: 'bold'\n        }}>!</span>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Badge from '../../widgets/Badge';\nimport {\n  NavLink\n} from \"react-router-dom\"\nimport Text from '../../widgets/Text';\n\nexport default class NavItem extends Component {\n  render() {\n    const { route, label, color, hasBadge } = this.props\n    return (\n      <div className=\"NavItem\" key={route} style={{\n        position: 'relative',\n        padding: 10,\n        fontWeight: 200,\n        fontSize: '1.25rem',\n        marginLeft: 10,\n        marginRight: 10\n      }}>\n        <NavLink to={route} activeClassName=\"ActiveNav\" style={{\n          color,\n          textDecoration: 'none',\n          padding: 5\n        }}><Text>{label}</Text></NavLink>\n        { hasBadge && <Badge /> }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NavItem from './NavItem'\nimport { withGlobalState } from '../../Context'\nimport { useTheme } from '../../Theme'\n\nclass TopNavigation extends Component {\n  render() {\n    const { state: globalState } = this.props.global\n    const theme = useTheme(this.props.global)\n    const { items: navItems } = this.props\n    const { isConnected } = globalState\n    return (\n      <nav className=\"TopNav\" style={{\n        backgroundColor: theme.topNav.backgroundColor,\n        padding: 5,\n        display: 'flex',\n        justifyContent: 'left',\n        borderBottom: '1px solid #c5c5c5'\n      }}>\n        {navItems.map(({ route, label }) => <NavItem \n        key={label}\n        route={route} \n        label={label} \n        hasBadge={globalState.badge === label || (label === 'Client' && !isConnected) }\n        color={theme.topNav.item.color} \n        />)}\n      </nav>\n    )\n  }\n}\n\nexport default withGlobalState(TopNavigation)\n","import React, { Component } from 'react'\nimport { withGlobalState } from '../../Context'\nimport { useTheme } from '../../Theme'\nimport Text from '../../widgets/Text'\n\nclass StatusItem extends Component {\n  render() {\n    const { label, value, global } = this.props\n    const theme = useTheme(global)\n    return (\n      <div className=\"StatusItem\">\n        <span className=\"StatusLabel\" style={{\n          color: theme.statusBar.label.color,\n          textTransform: 'uppercase',\n          fontWeight: 'bold',\n          paddingTop: 5\n        }}><Text>{ label }</Text></span>\n        <span className=\"StatusValue\" style={{\n          color: theme.statusBar.value.color\n        }}>\n          { typeof value === 'function' ? value() : value }\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default withGlobalState(StatusItem)\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class CurrentBlockNumber extends Component {\n  render() {\n    const { block } = this.props\n    return (\n      <StatusItem label=\"Current Block\" value={block} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { ethers } from 'ethers'\nimport Clickable from './Clickable'\n\nconst prices = {\n  eth: 1,\n  usd: 159.59,\n  eur: 144.36\n}\n\n// TODO  move to utils\nconst weiTo = (wei, selectedCurrency) => {\n  const price = prices[selectedCurrency]\n  const etherString= ethers.utils.formatEther(wei, { commify: 2})\n  // FIXME dangerous but bigNumberify('100.00') not working\n  const _ethers = parseFloat(etherString)\n  return (price * _ethers).toFixed(2)\n}\n\nconst weiToUnit = (wei, unit) => {\n  return ethers.utils.formatUnits(wei, unit) // as string\n}\n\nexport default class EthValue extends Component {\n  state = {\n    selectedCurrency: 'eth'\n  }\n  changeCurrency = (e) => {\n    const { selectedCurrency } = this.state\n    const currencies = Object.keys(prices)\n    const idx = currencies.findIndex(el => el === selectedCurrency)\n    this.setState({\n      selectedCurrency: currencies[(idx + 1) % currencies.length]\n    })\n  }\n  render() {\n    const { selectedCurrency } = this.state\n    const { wei, unit, style } = this.props\n\n    let valueString = ''\n    if (unit) {\n      valueString = weiToUnit(wei, unit).replace('.0', '') + ' ' + unit.toUpperCase()\n    } else {\n      valueString = weiTo(wei, selectedCurrency) + ' ' +  selectedCurrency.toUpperCase()\n    }\n    if (valueString.length > 20) {\n      valueString = '∞' + ' ' + selectedCurrency.toUpperCase()\n    }\n    return (\n      <Clickable onClick={this.changeCurrency} style={{\n        ...style\n      }}>\n        <span>\n          <span>{valueString}</span>\n        </span>\n      </Clickable>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport EthValue from '../../../widgets/EthValue'\n\nexport default class GasPrice extends Component {\n  state = {\n    gasPrice: -1\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const gasPrice = await provider.getGasPrice()\n      this.setState({\n        gasPrice\n      })\n    } catch (error) {\n      this.setState({\n        gasPrice: -1\n      })\n    }\n\n  }\n  render() {\n    const { gasPrice } = this.state\n    return (\n      <StatusItem label=\"Gas Price\" value={() => <EthValue wei={gasPrice} unit=\"gwei\" style={{ padding: 0}} />} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class HardforkName extends Component {\n  state = {\n    network: undefined\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    const network = await provider.getNetwork() \n    this.setState({\n      network\n    })\n  }\n  render() {\n    return (\n      <StatusItem label=\"Hardfork\" value=\"Petersburg\" />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport { withGlobalState } from '../../../Context'\n\nclass Network extends Component {\n  state = {\n    networkId: 'no network',\n    networkName: ''\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const network = await provider.getNetwork() \n      console.log('network', network)\n      const { chainId: networkId, name: networkName } = network\n      this.setState({\n        networkId,\n        networkName\n      }) \n    } catch (error) {\n      // reset\n      this.setState({\n        networkId: 'no network',\n        networkName: ''\n      }) \n    }\n  }\n  render() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { isConnected } = globalState\n    const { networkId, networkName } = this.state\n    return (\n      <StatusItem label=\"Network\" value={isConnected ? `${networkId} ${networkName ? `(${networkName})` : ''}` : 'offline' } />\n    )\n  }\n}\n\nexport default withGlobalState(Network)\n","import React, { Component } from 'react'\n\nexport default class Modal extends Component {\n  state = {\n    visibility: 'hidden'\n  } \n  render() {\n    // let { visibility = this.props.show } = this.state\n    let { show, onClose = () => {}, children } = this.props\n    let visibility = show ? 'visible' : 'hidden'\n    return (\n      <div style={{\n        position: 'fixed',\n        display: 'flex',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: '#2222227a',\n        alignItems: 'center', \n        justifyContent: 'center',\n        zIndex: 10,\n        visibility\n      }}\n      onClick={() => { \n        // TODO hide here for immediate feedback?\n        onClose() \n      }}\n      >\n        <div className=\"card\" style={{\n          backgroundColor: 'white',\n          width: 500,\n          height: 250,\n          display: 'flex',\n          visibility\n        }}>\n          { children }\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport function Column({ children, style }) { \n  return <div style={{ \n    flexDirection: 'column', \n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    ...style \n  }}>{ children }</div>\n}\n","import React, { Component, Fragment } from 'react'\nimport StatusItem from '../StatusItem'\nimport Clickable from '../../../widgets/Clickable'\nimport Modal from '../../../widgets/Modal'\nimport { Column } from '../../../widgets/Column'\nimport List from '../../../widgets/List'\nimport ListItem from '../../../widgets/ListItem'\nimport { withGlobalState } from '../../../Context'\n\nclass RpcServer extends Component {\n  state = {\n    modalOpen: false\n  }\n  openModal = () => {\n    this.setState({\n      modalOpen: true\n    })\n  }\n  handleProviderSelection = ({ name, url }) => {\n    const { global } = this.props\n    // completely reset connection here. will be re-created in App.js\n    global.setState({\n      selectedProvider: name,\n      provider: undefined,\n      isConnected: false\n    })\n    this.setState({\n      modalOpen: false\n    })\n  }\n  render() {\n    const { modalOpen } = this.state\n    const { global } = this.props\n    const { state: globalState } = global\n    const { provider, providers, selectedProvider } = globalState\n\n    return (\n      <Fragment>\n        <Clickable onClick={this.openModal} style={{ paddingTop: 0 }}>\n          <StatusItem label=\"Provider\" value={ selectedProvider } />\n        </Clickable>\n        <Modal show={modalOpen} onClose={() => this.setState({ modalOpen: false })}>\n          <Column style={{\n            padding: 20,\n            justifyContent: 'normal'\n          }}>\n            <h2>Select your provider</h2>\n            <List\n              header={ false }\n              items={providers}\n              renderItem={provider => <ListItem key={provider.name} onClick={() => this.handleProviderSelection(provider)} style={{ fontSize: '1.25rem', padding: 10 }}>{`${provider.name} - ${provider.url}`} </ListItem> }\n            />\n          </Column>\n        </Modal>\n      </Fragment>\n    )\n  }\n}\n\nexport default withGlobalState(RpcServer)\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class Currency extends Component {\n  render() {\n    return (\n      <StatusItem label={\"Currency\"} value=\"ETH\" />\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Clickable from './Clickable'\nimport Text from './Text'\nimport { withGlobalState } from '../Context'\n\nclass Address extends Component {\n  handleClick = () => {\n    let { address } = this.props\n    // TODO handle not available\n    navigator.clipboard.writeText(address).then(function () {\n      console.log('Async: Copying to clipboard was successful!');\n      alert('copied')\n    }, function (err) {\n      console.error('Async: Could not copy text: ', err);\n      alert('failed to copy')\n    });\n  }\n  render() {\n    let { address, short = false, contract = false, style = {}, label, global } = this.props\n    const useAlias = global.state.alias\n    if (short) {\n      address = [\n        ...address.split('').slice(0, 7),\n        '...',\n        ...address.split('').slice(42 - 5)\n      ].join('')\n    }\n    if (useAlias) {\n      const aliases = global.state.aliases\n      address = address in aliases ? aliases[address] : address\n    }\n    return (\n      <Fragment>\n        {label && <Text text={label} style={{ paddingRight: 7 }} />}\n        <Clickable\n          onClick={this.handleClick}\n          style={{\n            ...style,\n            fontWeight: contract ? 'bold' : 'normal',\n          }}\n        >\n          <span>\n            {address}\n          </span>\n        </Clickable>\n      </Fragment>\n    )\n  }\n}\n\nexport default withGlobalState(Address)\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport Address from '../../../widgets/Address'\n\nexport default class Signer extends Component {\n  state = {\n    address: ''\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const signer = await provider.getSigner()\n      const address = await signer.getAddress()\n      this.setState({\n        address\n      })\n    } catch (error) {\n      this.setState({\n        address: ''\n      })\n    }\n  } \n  render() {\n    const { address } = this.state\n    return (\n      <StatusItem label={\"Signer\"} value={() => <Address address={address} short={true} style={{ padding: 0 }} />} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\n\nexport default class StateTime extends Component {\n  render() {\n    return (\n      <StatusItem label=\"State\" value=\"now\" />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport StatusItem from './StatusItem'\nimport Clickable from '../../widgets/Clickable'\nimport { withGlobalState } from '../../Context'\n\nclass Toggle extends Component {\n  toggle = () => {\n    const { global, options, name } = this.props\n    const value = global.state[name]\n    const newValue = options.find(option => option !== value)\n    const newState = {}\n    newState[name] = newValue\n    global.setState(newState)\n  }\n  render() {\n    const { global, name, label } = this.props\n    let value = global.state[name]\n    return (\n      <StatusItem label={label} value={() => <Clickable onClick={this.toggle} style={{ padding: 0 }}>{value.toString()}</Clickable> } />\n    )\n  }\n}\n\nexport default withGlobalState(Toggle)","import React, { Component } from 'react'\n\nexport default class SyncState extends Component {\n  state = {\n    intervalHandler: undefined,\n    isSyncing: false,\n    syncInfo: {\n      startingBlock: 0,\n      currentBlock: 0,\n      highestBlock: 0\n    }\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    const intervalHandler = setInterval(async () => {\n      try {\n        const syncInfo = await provider.send('eth_syncing')\n        if (syncInfo) {\n          this.setState({\n            isSyncing: true,\n            syncInfo: {\n              ...syncInfo\n            }\n          })\n        }\n      } catch (error) {\n        this.setState({\n          isSyncing: false\n        })\n      }\n    }, 1500)\n    this.setState({\n      intervalHandler\n    })\n  }\n  componentWillUnmount = () => {\n    const { intervalHandler } = this.state\n    if (intervalHandler) {\n      clearInterval(intervalHandler)\n    }\n  }\n  render() {\n    const { renderSyncState = () => <div>No renderer</div>} = this.props\n    let { syncInfo, isSyncing } = this.state\n    if (syncInfo) {\n      const { highestBlock } = syncInfo\n      if (highestBlock === 0) {\n        syncInfo = false\n      }\n    }\n    if (!isSyncing) {\n      syncInfo = undefined\n    }\n    return renderSyncState(syncInfo)\n  }\n}","import React, { Component } from 'react'\nimport StatusItem from '../StatusItem'\nimport SyncState from '../../../widgets/SyncState'\n\nconst getSyncPercentage = ({ currentBlock, highestBlock }) => Math.ceil((currentBlock / highestBlock) * 100)\n\nexport default class Syncing extends Component {\n  render() {\n    return (\n      <SyncState\n        provider={this.props.provider}\n        renderSyncState={syncInfo => {\n          return (\n            <StatusItem label=\"Sync\" value={syncInfo === undefined ? 'no sync' : ( syncInfo === false ? '100' : `${getSyncPercentage(syncInfo)}%` )} />\n          )\n        }}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport CurrentBlockNumber from './StatusItems/CurrentBlockNumber'\nimport GasPrice from './StatusItems/GasPrice'\n// import GasLimit from './StatusItems/GasLimit'\nimport HardforkName from './StatusItems/HardforkName'\nimport NetworkId from './StatusItems/NetworkId'\nimport RpcServer from './StatusItems/RpcServer'\nimport Currency from './StatusItems/Currency'\nimport Signer from './StatusItems/Signer'\nimport StateTime from './StatusItems/StateTime'\nimport { withGlobalState } from '../../Context'\nimport { useTheme } from '../../Theme'\nimport GlobalToggle from './GlobalToggle'\nimport Syncing from './StatusItems/Syncing'\n\nclass StatusBar extends Component {\n  renderItem = (item, provider) => {\n    const { createdAt } = provider || { createdAt: 'not_set' }\n    const { name, exclude } = item\n    // this is a trick: detect if the provider instance has changed\n    // it will trigger a re-mount on all status items\n    const key = name+'_'+createdAt\n    if (exclude) {\n      return\n    }\n    if (name === 'sync') {\n      return <Syncing key={key} provider={provider} block={this.props.currentBlock} />\n    } \n    if (name === 'current_block') {\n      return <CurrentBlockNumber key={key} provider={provider} block={this.props.currentBlock} />\n    } \n    else if(name === 'state_time'){\n      return <StateTime key={key} />\n    }\n    else if(name === 'gas_price'){\n      return <GasPrice key={key} provider={provider} />\n    }\n    /* <GasLimit provider={provider} /> */ \n    else if(name === 'hardfork'){\n      return <HardforkName key={key} provider={provider} />\n    }\n    else if(name === 'network'){\n      return <NetworkId key={key} provider={provider} />\n    }\n    else if(name === 'provider'){\n      return <RpcServer key={key} provider={provider} />\n    }  \n    else if(name === 'currency'){\n      return <Currency key={key}/>\n    }  \n    else if(name === 'signer'){\n      return <Signer key={key} provider={provider}/>\n    }\n    else if(name === 'alias'){\n      return <GlobalToggle key={key} label=\"Alias\" name={\"alias\"} options={[true, false]} />\n    }\n    else if(name === 'time'){\n      return <GlobalToggle key={key} label=\"Time\" name={\"time\"} options={['block', 'unix']} />\n    }           \n    else if(name === 'theme'){\n      return <GlobalToggle key={key} label=\"Theme\" name={\"theme\"} options={['light', 'dark']}  />\n    } \n  }\n  render() {\n    const { provider, global } = this.props\n    const theme = useTheme(global)\n\n    const items = global.state.statusBarItems\n\n    return (\n      <div className=\"StatusBar\" style={{\n        display: 'flex',\n        backgroundColor: theme.statusBar.backgroundColor,\n        padding: 5,\n        marginBottom: 5,\n        fontSize: '0.8rem',\n        boxShadow: 'rgba(31, 30, 30, 0.1) 0px 2px 4px 0px'\n      }}>\n        {\n          items.map(item => this.renderItem(item, provider))\n        }\n      </div>\n    )\n  }\n}\n\nexport default withGlobalState(StatusBar)\n","import React from 'react'\nimport moment from 'moment'\n\nexport default function DateField({ ts, relative = false, style }) {\n  return (\n    <span style={{\n      ...style\n    }}>\n      { relative\n      ? moment.unix(ts).from()\n      : moment.unix(ts).format(\"YYYY-MM-DD HH:mm:ss\") \n      }\n    </span>\n  )\n}\n","import React, { Component } from 'react'\n\nexport default class Pill extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: '#08a79c',\n        paddingLeft: 10,\n        paddingRight: 10,\n        paddingTop: 5,\n        paddingBottom: 5,\n        borderRadius: 20,\n        color: 'white',\n        alignSelf: 'center'\n      }}>{this.props.children}</div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Gas extends Component {\n  render() {\n    const { gas } = this.props\n    // const gasPriceGwei = 10\n    return (\n      <span style={{\n      }}>\n        { gas !== undefined ? gas.toString() : 'undefined' }\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ListItem from '../../../widgets/ListItem'\nimport DateField from '../../../widgets/DateField'\nimport Pill from '../../../widgets/Pill'\nimport Address from '../../../widgets/Address'\nimport Gas from '../../../widgets/Gas'\n\nfunction BlockInfo({ number }) {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'left',\n      padding: 5,\n      marginRight: 5\n    }}>\n      <span>Block</span>\n      <span style={{\n        fontWeight: 'bold',\n      }}># { number }</span>\n    </div>\n  )\n}\n\nfunction TxInfo({ txHashes }) {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'left',\n      padding: 5\n    }}>\n\n      <Pill>{ txHashes.length } Transactions</Pill>\n    </div>\n  )\n}\n\nexport default class Block extends Component {\n  render() {\n    const { block } = this.props\n    const {\n      parentHash,\n      hash,\n      number,\n      difficulty,\n      timestamp,\n      nonce,\n      // extraData,\n      // gasLimit,\n      gasUsed,\n      miner,\n      transactions: txHashes\n    } = block\n    return (\n      <ListItem className=\"BlockListItem\" to={`/blocks/${number}`}>\n        <BlockInfo number={number} />\n        <div style={{\n          flex: 1,\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <span>Hash: { hash }</span>\n          <span>Parent: { parentHash.toString() }</span>\n          <span>Nonce: { nonce }</span>\n          <span>Difficulty: { difficulty }</span>\n          <span>Gas Used: <Gas gas={gasUsed} /></span>\n          <span>Mined: <DateField ts={timestamp} /> by: <Address address={miner} /></span>\n        </div>\n        <TxInfo txHashes={txHashes} />\n      </ListItem>\n    )\n  }\n}\n\n","\nexport class DataProvider {\n  constructor(provider) {\n    this.provider = provider\n  }\n  getAllAddresses = async () => {\n    const accounts = await this.provider.listAccounts()\n    return [...accounts]\n  }\n  getBlocks = async (end, start=0) => {\n    const blocks = []\n    let i = Math.max(start, 0)\n    while (i <= end) {\n      const block = await this.provider.getBlock(i)\n      blocks.push(block)\n      i++\n    }\n    return blocks\n  }\n  getAllTransactionForBlock = async (block) => {\n    if (!block) return []\n    const { transactions: txHashes } = block\n    const transactions = []\n    for (const txHash of txHashes) {\n      const transaction = await this.provider.getTransaction(txHash)\n      transactions.push(transaction)\n    }\n    return transactions\n  }\n  getAllTransactions = async () => {\n    const latestBlock = await this.provider.getBlockNumber()\n    const blocks = await this.getBlocks(latestBlock)\n    const transactions = []\n    for (const block of blocks) {\n      const tx = await this.getAllTransactionForBlock(block)\n      transactions.push(...tx)\n    }\n    return transactions\n  }\n  getAllTxByContract = async (contractAddress) => {\n    const allTx = await this.getAllTransactions()\n    const contractTx = allTx.filter(tx => tx.to === contractAddress || tx.creates === contractAddress)\n    return contractTx\n  }\n  getAllContracts = async () => {\n    const transactions = await this.getAllTransactions()\n    const contractCreations = transactions.filter(tx => tx.creates).map(tx => tx.hash)\n    const receipts = []\n    for (const txHash of contractCreations) {\n      const receipt = await this.provider.getTransactionReceipt(txHash)\n      receipts.push(receipt)\n    }\n    return receipts\n  }\n}\n\nexport const getDataProvider = provider => new DataProvider(provider)","import React, { Component } from 'react'\nimport { withGlobalState } from '../Context'\nimport List from '../widgets/List'\n\n/*\n * a list whose data provider is set to the global ethereum provider\n * if the provider is changed it will request a re-render\n */\nclass ProviderList extends Component {\n  render() {\n    const { global, className, elements, itemName, loadItems, renderItem, processItems } = this.props\n    const { state } = global\n    const { provider } = state\n    return (\n      <List \n        className={className}\n        elements={elements}\n        dataSource={provider.createdAt}\n        itemName={itemName}\n        loadItems={() => loadItems(provider)}\n        processItems={processItems}\n        renderItem={item => renderItem({ provider, item }) }\n      />\n    )\n  }\n}\n\nexport default withGlobalState(ProviderList)\n","import React, { Component, Fragment } from 'react'\nimport Container from './Container'\nimport Button from './Button'\nimport { withGlobalState } from '../Context'\n\nclass NoConnection extends Component {\n  renderError() {\n    return (\n      <Container>\n        <h2>No connection to the Ethersnet ;-( </h2>\n        <Button>Fix it</Button>\n      </Container>\n    )\n  }\n  render() {\n    const { children } = this.props\n    const { global } = this.props\n    const { state: globalState } = global\n    const { isConnected } = globalState\n    return (\n      <Fragment>\n        { isConnected\n        ? { ...children }\n        : this.renderError()\n        }\n      </Fragment>\n    )\n  }\n}\n\nexport default withGlobalState(NoConnection)\n","import React, { Component } from 'react'\nimport Block from './BlockListItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class BlockList extends Component {\n  render() {\n    const latestBlock = undefined\n    let { start, end } = this.props\n    end = latestBlock || end\n    start = Math.max(end - 100, 0)\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"BlockList\"\n            itemName=\"Blocks\"\n            elements={() => <div>Block: {start}-{end}</div>}\n            loadItems={provider => getDataProvider(provider).getBlocks(end, start)}\n            processItems={items => items.reverse()} // display latest block first\n            renderItem={({ provider, item: block}) => <Block key={block.number} block={block} /> }\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React from 'react'\nimport { useTheme } from '../Theme'\nimport { withGlobalState } from '../Context'\nimport Text from './Text'\n\nexport const LabeledField = withGlobalState(({ children, label, value, valueEl, style = {}, alignValue = 'left', global, styleValue = {} }) => {\n  const theme = useTheme(global)\n  return (\n    <div style={{\n      padding: 5,\n      display: 'flex',\n      flexDirection: 'column',\n      ...style\n    }}>\n      <div style={{ \n        fontSize: '0.8rem', \n        color: theme.field.label.color,\n        alignSelf: alignValue,\n      }}>\n        <Text>{label}</Text>\n      </div>\n      <div style={{\n        color: theme.field.value.color,\n        alignSelf: alignValue,\n        ...styleValue\n      }}>\n        {\n          typeof valueEl === 'function'\n          ? valueEl()\n          : (value !== undefined ? value.toString() : (children || undefined))\n        }\n      </div>\n    </div>\n  )\n})","import React, { Component } from 'react'\nimport Clickable from './Clickable'\nimport DateField from './DateField'\nimport { withGlobalState } from '../Context'\n\nclass BlockTime extends Component {\n  state = {\n    block: undefined,\n    error: undefined\n  }\n  componentDidMount = async () => {\n    const { block: blockNumber, global } = this.props\n    const { state: globalState } = global\n    const { provider } = globalState\n    try {\n      const block = await provider.getBlock(blockNumber)\n      this.setState({\n        block\n      })\n    } catch (error) {\n      this.setState({ error })\n    }\n  }\n  render() {\n    const { block, error } = this.state\n    const { block: blockNumber, global } = this.props\n    const { state: globalState } = global\n\n    let blockTime = blockNumber\n    if (globalState.time === 'unix') {\n      blockTime = block ? block.timestamp : 0\n    }\n\n    return (\n      <Clickable style={{\n        ...this.props.style\n      }}>\n        { error\n          ? <span>{error.message}</span>\n          : globalState.time === 'block' ?  `#${blockTime}` : <DateField ts={blockTime} />\n        }\n      </Clickable>\n    )\n  }\n}\n\nexport default withGlobalState(BlockTime)\n","import React, { Component } from 'react'\nimport { Row } from '../../../widgets/Row'\nimport { Column } from '../../../widgets/Column'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport ListItem from '../../../widgets/ListItem'\nimport Pill from '../../../widgets/Pill'\nimport Address from '../../../widgets/Address'\nimport EthValue from '../../../widgets/EthValue'\nimport Gas from '../../../widgets/Gas'\nimport BlockTime from '../../../widgets/BlockTime'\n\nexport default class TransactionItem extends Component {\n  state = {\n    receipt: undefined\n  }\n  componentDidMount = async () => {\n    const { provider, tx } = this.props\n    const { hash: txHash } = tx\n    const receipt = await provider.getTransactionReceipt(txHash)\n    this.setState({\n      receipt\n    })\n  }\n  render() {\n    const { receipt } = this.state\n    const { tx } = this.props\n    const {\n      // Only available for mined transactions\n      // blockHash,\n      blockNumber,\n      // timestamp,\n\n      // Exactly one of these will be present (send vs. deploy contract)\n      // They will always be a properly formatted checksum address\n      creates,\n      to,\n\n      hash,\n\n      // See above \"Transaction Requests\" for details\n      // data,\n      from,\n      // gasLimit,\n      // gasPrice,\n      // nonce,\n      value,\n\n      // The chain ID; 0 indicates replay-attack vulnerable\n      // (eg. 1 = Homestead mainnet, 3 = Ropsten testnet)\n      // chainId,\n\n      // r, s, v,\n      // raw\n    } = tx\n\n    const {\n      gasUsed,\n\n      blockNumber: blockNumberMined,\n\n      contractAddress\n    } = (receipt || {})\n    return (\n      <ListItem style={{\n        flexDirection: 'column'\n      }} to={`/transactions/${hash}`}>\n        <Row>\n          <LabeledField label=\"Tx Hash\" value={hash} />\n          <Pill>{creates ? 'Contract Creation' : 'Contract Call' }</Pill>\n        </Row>\n        <Row>\n          <Column>\n            <LabeledField label=\"From Address\">\n              <Address address={from} />\n            </LabeledField>\n          </Column>\n          <Column>\n            <LabeledField label={contractAddress ? \"Contract Address\" : \"To Address\"}>\n              <Address address={to || contractAddress} contract={contractAddress ? true : false} />\n            </LabeledField>\n          </Column>\n          <Column>\n            <LabeledField label=\"Value\" >\n              <EthValue wei={value} />\n            </LabeledField>\n          </Column>\n          <Column>\n            <LabeledField label=\"Gas Used\" alignValue={'flex-end'}>\n              <Gas gas={gasUsed} />\n            </LabeledField>\n          </Column>\n        </Row>\n        <Row style={{\n          justifyContent: 'normal'\n        }}>\n          <LabeledField label=\"Block Created\">\n            <BlockTime block={blockNumber} />\n          </LabeledField>\n          <LabeledField label=\"Block Mined\" >\n            <BlockTime block={blockNumberMined} />\n          </LabeledField>\n        </Row>\n\n        {/*\n        <span>block hash: { blockHash }</span>\n        <span>block #: { blockNumber }</span>\n        <span>timestamp: { timestamp }</span>\n\n        <span>creates: { creates }</span>\n        <span>to: { to }</span>\n\n        <span>data: { data }</span>\n        <span>from: { from }</span>\n        <span>gasLimit: { gasLimit && gasLimit.toString() }</span>\n        <span>gasPrice: { gasPrice && gasPrice.toString() }</span>\n        <span>nonce: { nonce }</span>\n        <span>value: { value && value.toString() }</span>\n\n        <span>chain id: { chainId }</span>\n        <span>raw sig: { raw }</span>\n        */}\n\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TransactionItem from './TransactionItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class TransactionList extends Component {\n  render() {\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"TransactionList\"\n            itemName=\"Transactions\"\n            loadItems={provider => getDataProvider(provider).getAllTransactions()}\n            processItems={items => items.reverse()}\n            renderItem={({ provider, item: tx}) => <TransactionItem key={tx.hash} provider={provider} tx={tx} /> }\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Button from './Button'\nimport { withRouter } from 'react-router-dom'\n\nclass NavButton extends Component {\n  render() {\n    const { label, children, to } = this.props\n    return (\n      <Button label={label} onClick={() => this.props.history.push(to)}>{children}</Button>\n    )\n  }\n}\n\nexport default withRouter(NavButton)\n","import React, { Component } from 'react'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport ListItem from '../../../widgets/ListItem'\nimport Address from '../../../widgets/Address'\nimport EthValue from '../../../widgets/EthValue'\nimport NavButton from '../../../widgets/NavButton'\n\nexport default class AccountListItem extends Component {\n  state = {\n    balance: '',\n    txCount: -1\n  }\n  componentDidMount = async () => {\n    const { provider, address } = this.props\n    const balance = await provider.getBalance(address)\n    const txCount = await provider.getTransactionCount(address)\n    this.setState({ balance, txCount })\n  }\n  render() {\n    const { address} = this.props\n    const { balance, txCount } = this.state\n    return (\n      <ListItem className=\"AccountListItem\" to={`/accounts/${address}`} style={{\n        justifyContent: 'space-between'\n      }}>\n        <LabeledField label=\"Address\" valueEl={() => <Address address={address} /> } style={{\n          flexBasis: '30em'\n        }}/>\n        <LabeledField label=\"Balance\" style={{\n          flexBasis: '15em',\n        }}>\n          <EthValue wei={balance} />\n        </LabeledField>\n        <LabeledField \n          label=\"Tx Count\" \n          value={ txCount || 0} \n          style={{\n            alignSelf: 'right'\n          }} \n          styleValue={{\n            paddingTop: 5\n          }}\n        />\n        <NavButton to={`/transactions/new/${address}`} label={\"send\"} />\n      </ListItem>\n    )\n  }\n}\n\n","export default class Storage {\n  static instance;\n  cache = {}\n  constructor() {\n    this.indexedDB = window.indexedDB\n  }\n  static async getInstance() {\n    if(!Storage.instance) {\n      Storage.instance = new Storage()\n      // await Storage.instance.open()\n    }\n    return Storage.instance\n  }\n  async open() { \n    const dbVersion = 1;\n    const request = indexedDB.open(\"ethGUI\", dbVersion);\n    return this.waitRequest(request)\n  }\n  waitRequest(request) {\n    return new Promise((resolve, reject) => {\n      request.onsuccess = function (event) {\n        console.log('storage opened')\n        resolve(event)\n      }\n    })\n  }\n  _makeKey(data) {\n    // var crypto = require('crypto');\n    // return crypto.createHash('md5').update(data).digest(\"hex\");\n    // console.log('key', data)\n    return data.length\n  }\n  async put(key, value){\n    const _key = this._makeKey(key)\n    // console.log('store key', _key)\n    this.cache[_key] = value\n  }\n  async get(key) {\n    const _key = this._makeKey(key)\n    // console.log('get key', _key)\n    return this.cache[_key]\n  }\n}","import { ethers } from \"ethers\"\nimport Storage from \"./Storage\"\n\nexport const parseTransaction = (abi, tx) => {\n  // TODO memoize\n  const _interface = new ethers.utils.Interface(abi)\n  const parsed = _interface.parseTransaction(tx)\n  return parsed\n}\n\nexport const tryParseTransaction = (tx, abi) => {\n  // TODO try to do abi or hash lookup by tx.data, tx address or bytecode\n  // TODO is bug? parsed constructor = null\n  const parsed = parseTransaction(abi, tx)\n  return parsed ? parsed : {\n    name: 'constructor'\n  }\n}\n\nexport const createFundedTestAccount = async (provider) => {\n  // https://github.com/paritytech/wiki/blob/master/JSONRPC-personal-module.md#personal_newaccount\n  // it becomes the new current unlocked account. There can only be one unlocked account at a time.\n  const password = ''\n  const newAccount = await provider.send('personal_newAccount', [ password ])\n\n  const accounts = await provider.listAccounts()\n  const coinbase = await provider.getSigner(accounts[0]);\n  const unlocked = await coinbase.unlock(password)\n  if (!unlocked) {\n    throw new Error('Could not unlock coinbase')\n  }\n\n  const amount = ethers.utils.parseEther('100.0');\n  const txRaw = {\n      to: newAccount,\n      value: amount\n  };\n\n  const tx = await coinbase.sendTransaction(txRaw);\n  return tx\n}\n\n\nexport const getCompilerData = async (bytecode) => {\n  const storage = await Storage.getInstance()\n  return undefined\n  // return storage.get(bytecode)\n}","import React, { Component } from 'react'\nimport AccountItem from './AccountListItem'\nimport Button from '../../../widgets/Button'\nimport { createFundedTestAccount } from '../../../js/utils'\nimport Container from '../../../widgets/Container'\nimport Connectivity from '../../../widgets/Connectivity'\nimport ProviderList from '../../ProviderList'\n\nexport default class AccountsList extends Component {\n  addAccount = async () => {\n    /* FIXME refresh logic\n    const { provider } = this.props\n    await createFundedTestAccount(provider)\n    this.loadAccounts()\n    */\n  }\n  render() {\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"AccountList\"\n            elements={() => (\n              <div>\n                <Button onClick={this.addAccount} >Add</Button>\n                <Button onClick={this.loadAccounts} >Refresh</Button>\n              </div>\n            )}\n            itemName=\"accounts\"\n            loadItems={(provider) => provider.listAccounts()}\n            renderItem={({ provider, item: address }) => <AccountItem key={address} provider={provider} address={address} /> }\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ListItem from '../../../widgets/ListItem'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport Pill from '../../../widgets/Pill'\nimport Address from '../../../widgets/Address'\nimport BlockTime from '../../../widgets/BlockTime'\n\nexport default class ContractListItem extends Component {\n  render() {\n    const { contract } = this.props\n    const { contractAddress, blockNumber } = contract\n    return (\n      <ListItem to={`/contracts/${contractAddress}`} style={{ justifyContent: 'space-between' }} >\n        <LabeledField label={'Block'}>\n          <BlockTime block={blockNumber} />\n        </LabeledField>\n        <LabeledField label={'Name'}>\n          <span>Unnamed</span>\n        </LabeledField>\n        <LabeledField label={'Address'}>\n          <Address address={contractAddress} contract={true} style={{\n            paddingLeft: 5,\n            paddingRight: 5\n          }} />\n        </LabeledField>\n        <Pill>Deployed</Pill>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ContractListItem from './ContractListItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport NavButton from '../../../widgets/NavButton'\nimport Modal from '../../../widgets/Modal'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class Contracts extends Component {\n  state = {\n    showPrompt: false\n  }\n  bookmarkContract = () => {\n    this.setState({\n      showPrompt: true\n    })\n  }\n  importContract = () => {\n    // allows to import a contract\n    // from another chain at a given block / state\n    // can be auto-synced downstream\n  }\n  render() {\n    const { showPrompt } = this.state\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            elements={() => (\n              <div>\n                <NavButton to={'/contracts/new'} label=\"New\" />\n                {/*\n                <Button onClick={this.bookmarkContract} label=\"Bookmark\" />\n                <Button onClick={this.importContract} label=\"Import\" />\n                */}\n              </div>\n            )}\n            itemName=\"contracts\"\n            loadItems={provider => getDataProvider(provider).getAllContracts()}\n            renderItem={({ provider, item: contract }) => <ContractListItem key={contract.contractAddress} provider={provider} contract={contract} />}\n          />\n          <Modal onClose={() => this.setState({ showPrompt: false })} show={showPrompt} />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Select from 'react-select'\n\nexport default class CustomSelect extends Component {\n  render() {\n    const { options = [], label, value } = this.props\n    return (\n      <div>\n        <label htmlFor={label}>{label}</label>\n        <div style={{\n          marginTop: 5,\n          width: 330\n        }}>\n          <Select \n            defaultValue={value}\n            options={options} \n            />\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Text from './Text'\n\nexport default class Switch extends Component {\n  render() {\n    const { checked = false, label, onChecked = () => { }, style = {} } = this.props\n    return (\n      <span style={{\n        marginLeft: 5,\n        marginRight: 10,\n        ...style\n      }}>\n\n        <input type=\"checkbox\" id=\"scales\" name=\"scales\" checked={checked} onChange={(ev) => {\n          const exclude = !ev.target.checked\n          onChecked(exclude)\n        }} />\n        <Text style={{\n          fontWeight: 'bold',\n          color: style.color\n        }}>{label}</Text>\n      </span>\n\n    )\n  }\n}\n","// TODO replace with remote: https://github.com/philipplgh/remote\nexport const remote = (worker) => {\n  let id = 0\n  return new Proxy({}, {\n    get(target, prop) {\n      return (...args) => new Promise((resolve, reject) => {\n        const requestId = id\n        worker.postMessage({\n          id: id++,\n          method: prop,\n          arguments: [...args]\n        })\n        let responseHandler = function (event) {\n          const { data } = event\n          const { result, id: responseId, error } = data\n          if (requestId === responseId) {\n            worker.removeEventListener('message', this)\n            if (error) {\n              return reject(error)\n            }\n            resolve(result)\n          }\n        }\n        worker.addEventListener('message', responseHandler)\n      })\n    }\n  })\n}","import React, { Component } from 'react'\nimport { Row } from '../../../widgets/Row'\nimport Select from '../../../widgets/Select'\nimport Switch from '../../../widgets/Switch'\nimport CompilerWorker from '../../../js/Compiler.worker'\nimport { remote } from '../../../js/remote'\nimport Button from '../../../widgets/Button'\n\nexport default class Compiler extends Component {\n  state = {\n    compiler: undefined,\n    compilerVersions: [],\n    compiling: false,\n    result: undefined\n  }\n  componentDidMount = async () => {\n    const compiler = remote(new CompilerWorker())\n    this.setState({ compiler })\n\n    const compilerVersions = await compiler.getVersions()\n    this.setState({\n      compilerVersions: [...compilerVersions]\n    })\n  }\n  compile = async () => {\n    const { source, onData = () => {} } = this.props\n    const { compiler } = this.state\n    this.setState({\n      compiling: true\n    })\n    try {\n      const result = await compiler.compile(source)\n      this.setState({\n        compiling: false,\n        result\n      })\n      onData(result)\n    } catch (error) {\n      this.setState({\n        compiling: false,\n      })\n      alert('compiler crashed'+error.message)\n    }\n  }\n  render() {\n    const { source } = this.props\n    const { compiling, compilerVersions, result } = this.state\n    const selectOptions = compilerVersions.map(version => ({ label: version, value: version }))\n    return (\n      <div>\n        <Row style={{\n          marginBottom: 10,\n          marginTop: 10,\n          padding: 20,\n          border: '1px solid #80808040',\n          justifyContent: 'normal',\n          alignItems: 'flex-end'\n        }}>\n          <Select label={\"Compiler version:\"} options={selectOptions} />\n          <Button \n            style={{\n              marginLeft: 20,\n              marginRight: 20\n            }}\n            enabled={!!source && !compiling}\n            label=\"Compile\"\n            icon={compiling ? 'Spinner' : 'Play'}\n            onClick={this.compile}\n          />\n          <Switch style={{ alignSelf: 'flex-end' }} label=\"compile on change\"></Switch>\n        </Row>\n        <Row>\n        {result && result.errors && \n          result.errors.map((error, idx) => <span key={idx}>Compiler error: <pre>{error.formattedMessage}</pre></span>)\n        }\n        </Row>\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nconst readFile = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = (evt) => {\n    resolve(reader.result)\n  }\n  reader.readAsText(file)\n})\n\nexport default class FileChooser extends Component {\n  handleFiles = async (evt) => {\n    const files = evt.target.files; // FileList object\n    if (!files.length) {\n      alert('Please select a file!');\n      return;\n    }\n    const file = files[0]\n    let content = await readFile(file)\n    if (file.name.endsWith('.json')) {\n      content = JSON.parse(content)\n    }\n    this.props.onData(content)\n  }\n  render() {\n    return (\n      <Fragment>\n        <input type=\"file\" id=\"files\" name=\"files[]\" onChange={this.handleFiles} />\n      </Fragment>\n    )\n  }\n}","export class Visitor {\n  visit(node, callback = () => { }, context = {}) {\n    const contextNew = callback(node, context)\n    const childNodes = node.nodes || []\n    for (const child of childNodes) {\n      this.visit(child, callback, {\n        ...context,\n        ...contextNew\n      })\n    }\n  }\n}\n\nexport const transformTree = (t1, transformer) => {\n  const initialContext = {}\n  const visitor = new Visitor()\n  visitor.visit(t1, (node, context) => {\n    const newNode = transformer(node)\n    if (context.lastNode) {\n      context.lastNode.children.push(newNode)\n    } else {\n      context.root = newNode\n    }\n    return {\n      lastNode: newNode\n    }\n  }, initialContext)\n  return initialContext.root\n}\n\nexport const getNodes = (tree) => {\n  const visitor = new Visitor()\n  const nodes = [] // depth first\n  visitor.visit(tree, (node) => nodes.push(node) )\n  return nodes\n}","import React, { Component } from 'react'\nimport ReactJson from 'react-json-view'\nimport Tree from '../../../../widgets/Tree'\nimport { transformTree } from '../../../../js/TreeWalker'\n\nexport default class JsonTreeView extends Component {\n  renderTree(ast) {\n    if (!ast) {\n      return <span>No data</span>\n    }\n    console.log('ast', ast)\n    const transformer = node => ({\n      name: node.nodeType || 'root',\n      attributes: {\n        name: node.name,\n        // type: node.nodeType === \"VariableDeclaration\" && node.typeDescription.typeString ? node.typeDescription.typeString : ''\n      },\n      children: []\n    })\n    const d3Tree = ast ? transformTree(ast, transformer) : undefined\n    console.log('t', d3Tree)\n    return (\n      <Tree data={d3Tree} style={{\n        border: '1px solid gray'\n      }} />\n    )\n  }\n  renderJSON(data) {\n    return (\n      <ReactJson\n        src={data}\n        theme=\"monokai\"\n        name=\"storage\"\n        displayDataTypes={false}\n        enableClipboard={false}\n        style={{\n          padding: 10,\n          flex: 1\n        }}\n      />\n    )\n  }\n  render() {\n    const { data } = this.props\n    const isTree = true\n    return (\n      <div style={{\n        display: 'flex',\n        flex: 1\n      }}>\n        {isTree\n          ? this.renderTree(data)\n          : this.renderJSON(data)\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport FileChooser from '../../../../widgets/FileChooser'\nimport Tab from '../../../../widgets/Tab'\nimport JsonTreeView from './JsonTreeView'\n\nexport default class CodeTab extends Component {\n  state = {\n    value: '',\n    hasFocus: false\n  }\n  handleChange = (ev) => {\n    this.setState({\n      value: ev.target.value\n    })\n    this.props.onChange(ev.target.value)\n  }\n  renderOverlay() {\n    const { onData } = this.props\n    return (\n      <div style={{\n        display: 'flex',\n        position: 'absolute',\n        backgroundColor: '#cecece29',\n        left: '50%',\n        width: 200,\n        marginLeft: -110,\n        padding: 20,\n        top: '40%',\n      }}>\n        <FileChooser onData={onData} />\n      </div>\n    )\n  }\n  onFocus = () => {\n    this.setState({ hasFocus: true })\n  }\n  onBlur = () => {\n    this.setState({ hasFocus: false })\n  }\n  render() {\n    const { source, label } = this.props\n    let { value, hasFocus } = this.state\n    value = source || value\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value, null, 2)\n    }\n    return (\n      <Tab label=\"Source\"\n        onBlur={this.onBlur}\n        style={{\n          flex: 1,\n          overflow: 'auto'\n        }}\n      >\n        <div style={{\n          position: 'relative',\n          display: 'flex',\n          flex: 1\n        }}>\n          {label === 'AST'\n            ? <JsonTreeView data={source} />\n            : <textarea\n              readOnly={false}\n              style={{\n                backgroundColor: hasFocus ? 'transparent' : '#cacaca17',\n                flex: 1\n              }}\n              value={value}\n              onChange={this.handleChange}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n            />\n          }\n          {!hasFocus && !value && this.renderOverlay()}\n        </div>\n      </Tab >\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row } from '../../../../widgets/Row'\nimport Tabs from '../../../../widgets/Tabs'\nimport { getCompilerData } from '../../../../js/utils'\nimport Compiler from '../Compiler'\nimport CodeTab from './CodeTab'\n\nexport default class ContractCode extends Component {\n  state = {\n    code: '',\n    abi: '',\n    bytecode: '',\n    contractCode: '',\n    bytecodeMatch: undefined,\n  }\n  componentDidMount() {\n    const { address } = this.props\n    if (!address) {\n      return\n    }\n    this.loadArtifacts()\n  }\n  loadArtifacts = async () => {\n    const { provider, address } = this.props\n    const contractCode = await provider.getCode(address)\n    this.setState({ contractCode })\n    // try to fetch compiler info based on contract code\n    const solcArtifacts = await getCompilerData(contractCode)\n    if (solcArtifacts) {\n      this.handleSolcArtifacts(solcArtifacts, false)\n    }\n  }\n  handleCompilerData = (output) => {\n    const { source } = this.state\n    // TODO\n    const ast = undefined\n\n    const contracts = output.contracts['file.sol']\n    const contractName = Object.keys(contracts)[0]\n    const contract = contracts[contractName]\n    const { abi, evm } = contract\n    const { bytecode, deployedBytecode } = evm\n    // todo bring in form: \n    const artifact = {\n      source,\n      abi,\n      bytecode: bytecode.object,\n      ast\n    }\n    this.handleSolcArtifacts(artifact)\n  } \n  handleSolcArtifacts = (data) => {\n    const { contractCode } = this.state\n    const { source, abi, bytecode, ast } = data\n    /*\n    // https://ethereum.stackexchange.com/questions/195/how-can-i-verify-that-a-contract-on-the-blockchain-matches-the-source-code\n    const bytecodeMatch = contractCode && contractCode === bytecode\n    */\n    let bytecodeMatch = true\n\n    this.setState({\n      source,\n      abi,\n      ast,\n      bytecode,\n      bytecodeMatch\n    })\n    this.props.onData(data)\n  }\n  renderPlaceholder() {\n    return (\n      <div style={{\n        height: 100,\n        width: '100%',\n        border: '1px dashed black'\n      }}>\n      </div>\n    )\n  }\n  render() {\n    const { bytecodeMatch, source } = this.state\n    const { compiler } = this.props\n\n    const tabs = [\n      { label: 'Source', data: 'source' }\n      , { label: 'Contract Code', data: 'contractCode' }\n      , { label: 'Bytecode', data: 'bytecode' }\n      , { label: 'ABI', data: 'abi' }\n      , { label: 'AST', data: 'ast' }\n    ]\n\n    return (\n      <div\n        className=\"ContractCode\"\n        style={{\n          margin: 10,\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          ...this.props.style\n        }}>\n        { compiler === 'top' && <Compiler source={source} onData={this.handleCompilerData} /> }\n        <Tabs>\n          {tabs.map(t => <CodeTab \n            key={t.label} \n            label={t.label} \n            source={this.state[t.data]}\n            onChange={value => {\n              const change = {}\n              change[t.data] = value\n              this.handleSolcArtifacts(change) \n            }} \n            onData={value =>  {\n              // handle case where file is plain string and not .json\n              if (typeof value === 'string') {\n                const change = {}\n                change[t.data] = value\n                value = change\n              }\n              this.handleSolcArtifacts(value)\n            }} \n          />)}\n        </Tabs>\n        { compiler === 'bottom' && <Compiler source={source} onData={this.handleCompilerData} /> }\n        <div style={{\n          border: '1px solid #80808040',\n        }}>\n          {bytecodeMatch === false &&\n            <Row style={{\n              padding: 10,\n              justifyContent: 'normal',\n              letterSpacing: 1,\n              fontWeight: 'bold'\n            }}>\n              <span style={{ color: 'red', paddingRight: 5 }}>!!! WARNING !!! </span><span>Generated bytecode does not match deployed code</span>\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Button from '../../../widgets/Button'\nimport { ethers } from 'ethers'\nimport ContractCode from './ContractCode/ContractCode'\nimport { Row } from '../../../widgets/Row'\nimport { NavLink } from 'react-router-dom'\n\nexport default class CreateContractView extends Component {\n  state = {\n    source: '',\n    abi: '',\n    contract: undefined\n  }\n  handleData = (data) => {\n    const { abi, source, bytecode } = data\n    this.setState({\n      abi,\n      source,\n      bytecode\n    })\n  }\n  deployContract = async () => {\n    const { abi, bytecode } = this.state\n    // TODO show confirmation modal\n    const { provider } = this.props\n    const accounts = await provider.listAccounts()\n    // TODO global signer\n    const signer = await provider.getSigner(accounts[0]);\n    const password = ''\n    const unlocked = await signer.unlock(password)\n    console.log('unlocked?', unlocked)\n    // Create an instance of a Contract Factory\n    const factory = new ethers.ContractFactory(abi, bytecode, signer);\n    // Notice we pass in \"Hello World\" as the parameter to the constructor\n    const contract = await factory.deploy();\n    this.setState({\n      contract\n    })\n    console.log('contract', contract)\n    // TODO toast alert('deployed')\n  }\n  render() {\n    const { abi, bytecode, contract } = this.state\n    const { provider } = this.props\n    return (\n      <Container header=\"New Contract\">\n        <Row style={{ justifyContent: 'normal', marginTop: 20, marginLeft: 10, marginRight: 10, alignItems: 'center' }}>\n          { contract && <span style={{ marginLeft: 10, textDecoration: 'underscore' }}>Deployed at: <NavLink to={`/contracts/${contract.address}`}>{contract.address}</NavLink>></span>}\n          <Button \n            style={{\n              color: '#08a79c',\n              fontWeight: 'bold',\n              marginLeft: 'auto' // move to right \"justifySelf\"\n            }}\n            enabled={!!abi && !!bytecode}\n            onClick={this.deployContract} \n            icon=\"CodeBranch\"\n            label=\"Deploy\"\n          />\n        </Row>\n        <ContractCode\n          provider={provider}\n          onData={this.handleData}\n          compiler=\"top\"\n        />\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport { withRouter } from 'react-router-dom'\nimport Address from '../../../widgets/Address'\n\nclass AccountDetails extends Component {\n  render() {\n    const { match } = this.props\n    const { params } = match\n    const { address } = params\n    return (\n      <Container header={() => <Address label=\"Account\" address={address} />}>\n\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(AccountDetails)\n","import React, { Component } from 'react'\nimport ListItem from '../../../../widgets/ListItem'\nimport { Column } from '../../../../widgets/Column'\nimport { Row } from '../../../../widgets/Row'\nimport Gas from '../../../../widgets/Gas'\nimport BlockTime from '../../../../widgets/BlockTime'\nimport Address from '../../../../widgets/Address'\n\nexport default class TransactionItem extends Component {\n  state = { receipt: undefined }\n  componentDidMount = async () => {\n    const { tx } = this.props\n    try {\n      const { provider } = this.props\n      const receipt = await provider.getTransactionReceipt(tx.hash)\n      this.setState({ receipt })\n    } catch (error) {\n      \n    }\n  }\n  render() {\n    const { receipt } = this.state\n    const { tx, contract, idx } = this.props\n\n    let parsed\n    let calledFunctionName = '<unknown fn>'\n    try {\n      parsed = contract && contract.interface.parseTransaction(tx)\n      calledFunctionName = parsed ? parsed.name : (idx === 0 ? 'constructor' : calledFunctionName)\n    } catch (error) { }\n\n    const selectedBorder = '2px solid #08a79c'\n    return (\n      <ListItem\n        onClick={this.props.onClick}\n        style={{\n          flexDirection: 'column',\n          padding: 10,\n          margin: '0px 10px 0px 0px',\n          boxSizing: 'border-box',\n          borderTop: this.props.isSelected ? selectedBorder : '2px solid transparent',\n          borderBottom: this.props.isSelected ? selectedBorder : '2px solid #e6e6e6',\n          borderLeft: this.props.isSelected ? selectedBorder : '2px solid transparent',\n          borderRight: this.props.isSelected ? selectedBorder : '2px solid transparent',\n\n        }}>\n        <Column style={{\n          justifyContent: 'normal'\n        }}>\n          <span style={{\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}>\n            <span style={{ fontSize: '0.8rem' }}>At: <BlockTime block={tx.blockNumber} style={{ padding: 0 }} /> </span>\n            <span style={{ fontSize: '0.8rem' }}>Gas: <Gas gas={receipt ? receipt.gasUsed : undefined} /> </span>\n          </span>\n          <span style={{\n            fontWeight: 'bold',\n            padding: 5,\n            marginLeft: 20\n          }}>{calledFunctionName}({parsed && parsed.args ? JSON.stringify(...parsed.args) : ''})</span>\n        </Column>\n        <Row>\n          <span style={{ fontSize: '0.75rem' }}>By: <Address address={tx.from} /></span>\n        </Row>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TransactionItem from './TransactionItem'\nimport Text from '../../../../widgets/Text'\n\nexport default class ContractTransactionHistory extends Component {\n  state = {}\n  renderTransactions() {\n    const {\n      provider,\n      transactions,\n      selectedTransaction: selectedTx,\n      onSelect = () => { },\n      contractInterface\n    } = this.props\n    return (\n      transactions.map((tx, idx) =>\n        <TransactionItem\n          key={tx.hash}\n          provider={provider}\n          isSelected={selectedTx && tx.hash === selectedTx.hash}\n          tx={tx}\n          idx={idx}\n          contract={contractInterface}\n          onClick={() => onSelect(tx)}\n        />\n      )\n    )\n  }\n  render() {\n    const { transactions = [] } = this.props\n    return (\n      <div style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: 5\n      }}>\n        <Text\n          style={{\n            fontSize: '1.2rem',\n            padding: 6,\n            borderBottom: '1px solid #99999999'\n          }}\n          text={`Transactions (${transactions.length})`}\n        />\n        <div style={{\n          overflowY: 'auto',\n          flex: 1,\n        }}>\n          {this.renderTransactions()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Spinner from './Spinner'\n\nexport default class Overlay extends Component {\n  render() {\n    const { text, spinner } = this.props\n    return (\n      <div style={{\n        backgroundColor: 'rgba(144, 144, 144, 0.1)',\n        backdropFilter: 'blur(6px)',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>\n        { spinner && <Spinner size=\"1.5rem\" style={{ marginRight: 20 }} /> }\n        <span style={{\n          fontSize: '1.5rem',\n          fontWeight: 'bold',\n          color: 'rgba(238, 238, 238, 0.58)',\n        }}>{text}</span>\n      </div>\n    )\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from 'react'\nimport ReactJson from 'react-json-view'\nimport Address from '../../../widgets/Address'\nimport Switch from '../../../widgets/Switch'\nimport { Row } from '../../../widgets/Row'\nimport EthStateMachine from '../../../js/EthStateMachine'\nimport Overlay from '../../../widgets/Overlay'\n\nexport default class ContractState extends Component {\n  state = {\n    transactions: [],\n    storage: {\n    },\n    contractAddress: '',\n    isLoading: false\n  }\n  componentDidMount = async () => {\n    const { provider, address: contractAddress, transactions, until, ast } = this.props\n\n    this.setState({\n      contractAddress,\n      isLoading: true\n    })\n\n    const stateMachine = new EthStateMachine()\n    const { createdAddress, storage } = await stateMachine.replayContractTransactions(transactions, until)\n\n    // console.log('calculated storage', storage)\n    this.setState({\n      storage,\n      isLoading: false\n    })\n\n  }\n  handleSwitch = () => {\n\n  }\n  renderJson(jsonState) {\n    return (\n      <ReactJson\n        src={jsonState}\n        theme=\"monokai\"\n        name=\"storage\"\n        displayDataTypes={false}\n        enableClipboard={false}\n        style={{\n          flex: 1,\n          padding: 10,\n        }}\n      />\n    )\n  }\n  renderOverlay() {\n    return (\n      <Overlay spinner={true} text=\"calculating contract state...\" />\n    )\n  }\n  render() {\n    const { contractAddress } = this.props\n    const { storage, isLoading } = this.state\n    const jsonState = storage\n    return (\n      <div style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'rgba(0, 0, 0, 0.88)',\n        ...this.props.style\n      }}>\n        <Row>\n          <span style={{ paddingLeft: 5, color: 'white' }}>Contract: <Address address={contractAddress} /></span>\n          <Switch label=\"Decoded\" onSwitch={this.handleSwitch} style={{ color: 'white' }} />\n        </Row>\n        <div style={{\n          position: 'relative',\n          flex: 1\n        }}>\n          { this.renderJson(jsonState) }\n          { /* isLoading && this.renderOverlay() */ }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row } from '../../../../widgets/Row'\nimport BlockTime from '../../../../widgets/BlockTime'\nimport Address from '../../../../widgets/Address'\nimport ContractState from '../ContractState'\nimport Console from '../../../console/Console'\nimport Overlay from '../../../../widgets/Overlay'\n\nexport default class ContractConsole extends Component {\n  renderOverlay() {\n    return (\n      <Overlay text=\"Add ABI to interact with contract\" />\n    )\n  }\n  render() {\n    const { signerAddress, selectedTx, contractProxy } = this.props // for console\n    const { provider, transactions = [], contractAddress } = this.props // for state\n    return (\n      <div style={{\n        position: 'relative',\n        flex: 1,\n        display: 'flex',\n      }}>\n        <div style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n        }}>\n          <Row style={{\n            backgroundColor: '#000000e0',\n            color: 'white',\n            padding: 5,\n          }}>\n            <span>State at: {selectedTx && <BlockTime block={selectedTx.blockNumber} style={{ padding: 0 }} />}</span>\n            <span>Signer: <Address address={signerAddress} style={{ padding: 2 }} /></span>\n          </Row>\n          <div style={{\n            flex: 2,\n            display: 'flex'\n          }}>\n            <ContractState\n              key={selectedTx ? selectedTx.hash : '_'}\n              provider={provider}\n              contractAddress={contractAddress}\n              // ast={ast}\n              transactions={transactions}\n              until={selectedTx}\n            />\n          </div>\n          <div style={{\n            flex: 3,\n            display: 'flex'\n          }}>\n            <Console context={contractProxy}  />\n            {!contractProxy && this.renderOverlay()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Container from '../../../widgets/Container'\nimport { withRouter } from 'react-router-dom'\nimport Address from '../../../widgets/Address'\nimport { Column } from '../../../widgets/Column'\nimport { Row } from '../../../widgets/Row'\nimport ContractCode from './ContractCode/ContractCode'\nimport { ethers } from 'ethers'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport ContractTransactionBrowser from './TxBrowser/ContractTransactionBrowser'\nimport ContractConsole from './InteractiveConsole/ContractConsole'\nimport { withGlobalState } from '../../../Context'\n\nclass ContractDetails extends Component {\n  state = {\n    abi: undefined,\n    bytecode: '',\n    contractProxy: undefined, // instance of \"metaclass\"\n    signer: undefined,\n    signerAddress: undefined,\n    transactions: [],\n    selectedTx: undefined\n  }\n  getAddress() {\n    const { match } = this.props\n    const { params } = match\n    const { address } = params\n    return address\n  }\n  getProvider() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { provider } = globalState\n    return provider\n  }\n  componentDidMount = async () => {\n    const provider = this.getProvider()\n    this.loadContractTransactions(provider)\n    this.loadActiveSigner(provider)\n    try {\n      provider.on('block', this.loadContractTransactions)\n    } catch (error) { }\n  }\n  componentWillUnmount = () => {\n    const provider = this.getProvider()\n    try {\n      provider.off('block', this.loadContractTransactions)\n    } catch (error) { }\n  }\n  loadContractTransactions = async () => {\n    const provider = this.getProvider()\n    try {\n      const transactions = await getDataProvider(provider).getAllTxByContract(this.getAddress())\n      this.setState({\n        transactions,\n        selectedTx: transactions[transactions.length - 1]\n      })\n    } catch (error) {\n      this.setState({\n        transactions: [],\n        selectedTx: undefined\n      })\n    }\n  }\n  loadActiveSigner = async (provider) => {\n    try {\n      const signer = await provider.getSigner()\n      const signerAddress = await signer.getAddress()\n      this.setState({\n        signer,\n        signerAddress\n      })\n    } catch (error) {\n      this.setState({\n        signer: undefined,\n        signerAddress: undefined\n      })\n    }\n  }\n  handleSelectedTransaction = (tx) => {\n    this.setState({\n      selectedTx: tx\n    })\n  }\n  handleSolcArtifacts = async (data, persist = false) => {\n    const { abi, source, bytecode, ast } = data\n    this.setState({\n      source,\n      abi,\n      bytecode,\n      ast\n    })\n    try {\n      const { signer } = this.state\n      const provider = this.getProvider()\n      let contractProxy = new ethers.Contract(this.getAddress(), abi, signer || provider);\n      this.setState({\n        contractProxy\n      })\n    } catch (error) {\n      console.warn('could not create contract proxy', error)\n    }\n  }\n  render() {\n    const address = this.getAddress()\n    const provider = this.getProvider()\n    // required for console\n    const { contractProxy, signerAddress, selectedTx } = this.state\n    // for tx browser\n    const { transactions } = this.state\n    return (\n      <Container\n        style={{\n          padding: 0,\n          borderRadius: 0,\n          maxHeight: '100%',\n          overflowY: 'hidden'\n        }}\n        header={() => (<Fragment>Contract at <Address address={address} /></Fragment>)}\n        headerStyle={{\n          margin: 10\n        }}\n      >\n        <Column style={{\n          justifyContent: 'space-between',\n          maxHeight: '100%'\n        }}>\n          <Row style={{\n            overflowY: 'auto',\n            flex: 3,\n          }}>\n            <div style={{\n              flex: 1,\n              display: 'flex'\n            }}>\n              {provider &&\n                <ContractCode\n                  provider={provider}\n                  address={address}\n                  // called when solidity artifacts become available:\n                  // either through compilation, user selection or database\n                  onData={data => this.handleSolcArtifacts(data, true)}\n                />\n              }\n            </div>\n            <div style={{\n              flex: 1,\n              display: 'flex',\n            }}>\n              <ContractTransactionBrowser\n                provider={provider}\n                transactions={transactions}\n                selectedTransaction={selectedTx}\n                onSelect={this.handleSelectedTransaction}\n                contractInterface={contractProxy} // used to decode tx\n              />\n            </div>\n          </Row>\n          <div style={{\n            flex: 2,\n            display: 'flex'\n          }}>\n            <ContractConsole\n              signerAddress={signerAddress}\n              transactions={transactions}\n              selectedTx={selectedTx}\n              contractAddress={address}\n              contractProxy={contractProxy} // commands are executed on proxy instance\n            />\n          </div>\n        </Column>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withGlobalState(ContractDetails))\n","import React, { Component } from 'react'\n\nexport default class Form extends Component {\n  render() {\n    const { style } = this.props\n    return (\n      <div style={{\n        flex: 1,\n        maxHeight: 500,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n        border: '1px solid gray',\n        borderRadius: 10,\n        overflow: 'auto',\n        ...style\n      }}>\n        {this.props.children.map((c, idx) => <div key={idx} style={{ margin: 10}}>{c}</div>)}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TextField extends Component {\n  render() {\n    const { label, value, onChange, suffix, disabled=false, required=false } = this.props\n    return (\n      <div style={{\n        alignItems: 'center',\n      }}>\n        <label\n          style={{\n            fontSize: '1rem'\n          }}\n          data-shrink=\"true\"\n          htmlFor=\"standard-required\"\n          id=\"standard-required-label\">\n          {label}\n          { required && <span>*</span> }\n        </label>\n        <div\n          style={{\n            marginTop: 5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <input\n            disabled={disabled}\n            size=\"50\"\n            style={{\n              fontSize: 'inherit',\n              boxSizing: 'content-box',\n              background: 'none',\n              margin: 0,\n              padding: 10,\n              font: 'inherit',\n              height: '1.2rem',\n              border: '1px solid gray',\n              borderRadius: 3\n            }}\n            type=\"text\"\n            aria-invalid=\"false\"\n            id=\"standard-required\"\n            required=\"\"\n            value={value}\n            onChange={e => onChange(e.target.value)}\n          />\n          { suffix && <span style={{ padding: 5, opacity: 0.7 }}>{suffix}</span>}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Button from '../../../widgets/Button'\nimport { ethers } from 'ethers';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Form from '../../../widgets/Form';\nimport TextField from '../../../widgets/TextField';\n\nclass SendTransaction extends Component {\n  state = {\n    from: '',\n    to: '',\n    amount: '1',\n    tx: undefined\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    if (!provider) return\n\n    const to = this.getTo()\n    const signer = await provider.getSigner();\n    const from = await signer.getAddress()\n    this.setState({\n      from,\n      to\n    })\n  }\n  sendTransaction = async (to, amountString) => {\n    const { provider, from } = this.props\n    const signer = await provider.getSigner();\n    const amount = ethers.utils.parseEther(amountString);\n    const txRaw = {\n        to,\n        value: amount\n    };\n    const tx = await signer.sendTransaction(txRaw);\n    this.setState({ tx })\n    console.log('tx', tx)\n  }\n  getTo() { \n    const { match } = this.props\n    const { params } = match\n    const { to } = params\n    return to\n  }\n  render() {\n    const { from, to, amount, tx } = this.state\n    return (\n      <Container\n        header={ \"Send transaction\"}\n      >\n        <Form style={{\n          marginTop: 20,\n          fontSize: '1.25rem'\n        }}>\n          <TextField label=\"From:\" type=\"address\" value={from} onChange={value => this.setState({ from: value })} />\n          <TextField label=\"To:\" type=\"address\" value={to} onChange={value => this.setState({ to: value })} />\n          <TextField label=\"Amount:\" value={amount} suffix=\"ETH\" onChange={value => this.setState({ amount: value })} />\n          <TextField label=\"Fee\" value=\"\" disabled />\n          <div>\n            <Button \n              style={{\n                marginLeft: 10,\n                borderRadius: 10,\n                padding: 10,\n                marginTop: 10,\n                border: '2px solid #08a79c', \n                fontSize: '1.25rem',\n                fontWeight: 'bold'\n              }}\n              label=\"Send\"\n              dangerous={true}\n              onClick={() => this.sendTransaction(to, amount)} />\n          </div>\n        </Form>\n        { tx && <div style={{ fontSize: '1.25rem', marginTop: 20 }}>Transaction sent: <NavLink to={`/transactions/${tx.hash}`}>{tx.hash}</NavLink>  </div>}\n      </Container>\n    )\n  }\n}\n\nexport default  withRouter(SendTransaction)\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Text from '../../../widgets/Text'\nimport { withGlobalState } from '../../../Context'\n\nclass BlockDetails extends Component {\n  state = { block: undefined }\n  componentDidMount = async () => {\n    const { global, match } = this.props\n    const { provider } = global.state\n    const { params } = match\n    const { blockNumber } = params\n    const block = await provider.getBlock(parseInt(blockNumber))\n    this.setState({\n      block\n    })\n  }\n  renderBlockDetails(block) {\n    return (\n      <div>\n        <pre>{JSON.stringify(block, null, 2)}</pre>\n      </div>\n    )\n  }\n  render() {\n    const { match } = this.props\n    const { params } = match\n    const { blockNumber } = params\n    const { block } = this.state\n    return (\n      <Container header={() => <Text text={`Block #${blockNumber}`} />}>\n        { block && this.renderBlockDetails(block) }\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(BlockDetails)","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Text from '../../../widgets/Text'\nimport { withGlobalState } from '../../../Context'\n\nclass TransactionDetails extends Component {\n  state = { tx: undefined }\n  componentDidMount = async () => {\n    const { global, match } = this.props\n    const { provider } = global.state\n    const { params } = match\n    const { txHash } = params\n    const tx = await provider.getTransaction(txHash)\n    this.setState({\n      tx\n    })\n  }\n  renderTransactionDetails(tx) {\n    return (\n      <div>\n        <pre>{JSON.stringify(tx, null, 2)}</pre>\n      </div>\n    )\n  }\n  render() {\n    const { match } = this.props\n    const { params } = match\n    const { txHash } = params\n    const { tx } = this.state\n    return (\n      <Container header={() => <Text text={`Transaction #${txHash}`} />}>\n        { tx && this.renderTransactionDetails(tx) }\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(TransactionDetails)\n","import React, { Component } from 'react'\nimport CreateScript from './CreateScript'\nimport Container from '../../../widgets/Container'\n\nexport default class ScriptList extends Component {\n  state = {\n    scripts: []\n  }\n  componentDidMount = async () => {\n    // get scripts here\n  }\n  render() {\n    const { scripts } = this.state\n    return (\n      <Container>\n        {\n          scripts.length > 0\n          ? <span>script list</span>\n          : <CreateScript />\n        }\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport { StoreContext, withGlobalState } from '../../../Context'\nimport { Row } from '../../../widgets/Row'\nimport { Column } from '../../../widgets/Column'\nimport GlobalToggle from '../../status/GlobalToggle'\n\nconst Setting = withGlobalState(({ name, item, global }) => {\n  return (\n    <div>\n      <input type=\"checkbox\" id=\"scales\" name=\"scales\" checked={!item.exclude} onChange={(ev) => {\n        const exclude = !ev.target.checked\n        const items = global.state[name]\n        const updated = items.map(el => ( (el.label !== undefined ? el.label === item.label : el.name === item.name) ? { ...el, exclude } : el))\n        const change = {}\n        change[name] = [...updated]\n        global.setState(change)\n      }} />\n      <label htmlFor=\"scales\">{item.label || item.name}</label>\n    </div>\n  )\n})\n\nclass OptionGroup extends Component {\n  handleOnChange() {\n\n  }\n  render() {\n    const { options } = this.props\n    const name = Date.now()\n    return (\n      <div>\n        {\n          options.map((option, idx) => (\n            <label style={{ marginLeft: 5 }} key={option} >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={true}\n                onChange={() => this.handleOnChange(option, idx)}\n              />\n              {option}\n            </label>\n          ))\n        }\n\n      </div>\n    )\n  }\n}\n\nclass Settings extends Component {\n  static contextType = StoreContext\n  render() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { navItems, statusBarItems } = globalState\n    return (\n      <Container>\n        <h2> Settings </h2>\n\n        {/* \n        <h4>Language</h4>\n        <OptionGroup\n          options={['English', 'Deutsch']}\n        />\n        */}\n\n        <h4>Theme</h4>\n        {\n          global.state.theme\n        }\n\n        {/*\n        TODO custom provider settings\n        <h4>Dangerous</h4>\n        <GlobalToggle label=\"Dangerous operations\" name={\"dangerous\"} options={[true, false]}  />\n\n\n        <h4>Mode</h4>\n\n        <OptionGroup\n          options={['Default', 'Minimal', 'Expert', 'Custom']}\n        />\n        */}\n\n        <Row style={{\n          justifyContent: 'normal',\n          borderTop: '1px solid gray',\n          marginTop: 10\n        }}>\n          <Column>\n            <h4>Navigation</h4>\n            {\n              navItems.map((item, idx) => <Setting key={item.label || item.name} name=\"navItems\" item={item}  />)\n            }\n          </Column>\n          <Column>\n            <h4>Statusbar</h4>\n            {\n              statusBarItems.map((item, idx) => <Setting key={item.label || item.name} name=\"statusBarItems\" item={item}  />)\n            }\n          </Column>\n          <Column />\n          <Column />\n        </Row>\n\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(Settings)\n","import React, { Component } from 'react'\n\nexport default class InplaceEdit extends Component {\n  state = {\n    showInput: false,\n    value: ''\n  }\n  componentDidMount = () => {\n    const { value } = this.props\n    this.setState({\n      value\n    })\n  }\n  /*\n  static getDerivedStateFromProps(props, state){\n    console.log('get derived')\n    if (props.value) {\n      // state.value = props.value\n    }\n    return state\n  }\n  */\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({ value: this.props.value })\n    }\n  }\n  onKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.setState({\n        showInput: false\n      })\n      this.props.onChange(this.state.value)\n      // e.stopPropagation();\n      // e.preventDefault();\n    }\n  }\n  onChange = (ev) => {\n    this.setState({ value: ev.target.value })\n  }\n  handleClick = () => {\n    this.setState({ showInput: true })\n    setTimeout(() => {\n      this.focus()\n    }, 500)\n  }\n  focus() {\n    this.userInput.focus();\n  }\n  onBlur = () => {\n    this.setState({\n      showInput: false\n    })\n  }\n  render() {\n    const { showInput, value } = this.state\n    let { placeholder = 'Edit me' } = this.props\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: 20,\n          ...this.props.style\n        }}\n        onBlur={this.onBlur}\n      >\n        <div\n          style={{\n            display: showInput ? 'none' : 'block'\n          }}\n          onClick={this.handleClick}\n        >{value || placeholder}</div>\n        <input\n          type=\"text\"\n          ref={(input) => { this.userInput = input; }}\n          style={{\n            visibility: showInput ? 'visible' : 'hidden'\n          }}\n          value={value}\n          onBlur={this.onBlur}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ListItem from '../../../widgets/ListItem'\nimport { LabeledField } from '../../../widgets/LabeledField'\nimport Address from '../../../widgets/Address'\nimport EthValue from '../../../widgets/EthValue'\nimport InplaceEdit from '../../../widgets/InplaceEdit'\nimport { withGlobalState } from '../../../Context'\n\nclass AddressListItem extends Component {\n  state = {\n    balance: 0,\n    txCount: 0,\n    alias: ''\n  }\n  componentDidMount = async () => {\n    const { provider, address, global } = this.props\n    const { state : globalState } = global\n    const { aliases } = globalState\n    const alias = aliases[address] || ''\n    const balance = await provider.getBalance(address)\n    const txCount = await provider.getTransactionCount(address)\n    this.setState({ balance, txCount, alias })\n  }\n  handleSetAlias = (alias) => {\n    this.setState({\n      alias\n    })\n    const { global, address } = this.props\n    const { state : globalState } = global\n    const { aliases } = globalState\n    let newState = {\n      ...aliases\n    }\n    newState[address] = alias\n    global.setState({ aliases: newState})\n  }\n  render() {\n    const { address, } = this.props\n    const { balance, alias } = this.state\n    return (\n      <ListItem \n        clickable={false}\n        style={{\n          justifyContent: 'space-between'\n        }}\n      >\n        <LabeledField label=\"Address\" style={{\n          flexBasis: '30em'\n        }} >\n          <Address address={address} />\n        </LabeledField>\n        <LabeledField label=\"Alias\">\n          <InplaceEdit style={{ paddingTop: 5 }} value={alias} onChange={this.handleSetAlias} />\n        </LabeledField>\n        {/*spacer*/}\n        <span></span>\n        <LabeledField label=\"Balance\" style={{\n          flexBasis: '15em',\n        }}>\n          <EthValue wei={balance} />\n        </LabeledField>\n        <LabeledField label=\"Contract\" value=\"false\" styleValue={{ paddingTop: 5 }} />\n      </ListItem>\n    )\n  }\n}\n\nexport default withGlobalState(AddressListItem)\n","import React, { Component } from 'react'\nimport AddressItem from './AddressListItem'\nimport { getDataProvider } from '../../../js/DataProvider'\nimport Container from '../../../widgets/Container'\nimport ProviderList from '../../ProviderList'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class AddressList extends Component {\n  render() {\n    return (\n      <Connectivity>\n        <Container>\n          <ProviderList\n            className=\"AddressList\"\n            itemName=\"Addresses\"\n            loadItems={provider => getDataProvider(provider).getAllAddresses()}\n            renderItem={({ provider, item: address}) => <AddressItem key={address} provider={provider} address={address} />}\n          />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport Tree from '../../../widgets/Tree'\nimport Error from '../../../widgets/Error'\nimport Connectivity from '../../../widgets/Connectivity'\n\nexport default class Network extends Component {\n  state = {\n    networkData: undefined,\n    error: undefined\n  }\n  componentDidMount = async () => {\n    const { provider } = this.props\n    // const modules = await provider.send('rpc_modules', [])\n    // console.log('modules', modules)\n    const root = {\n      name: 'This Computer',\n      children: []\n    }\n    try {\n      const peers = await provider.send('admin_peers')\n      console.log('peers', peers)\n\n      for (const peer of peers) {\n        const {\n          name, // client-version-info\n          id,\n          enode,\n          enr,\n          protocol,\n          network\n        } = peer\n        root.children.push({\n          name,\n          attributes: network,\n          children: []\n        })\n      }\n\n    } catch (error) {\n      console.log('error', error)\n      return this.setState({\n        error\n      })\n    }\n    this.setState({\n      networkData: root\n    })\n  }\n  render() {\n    const { networkData, error } = this.state\n    return (\n      <Connectivity>\n        <Container>\n          {networkData && <Tree\n            data={networkData}\n            orientation=\"horizontal\"\n            pathFunc=\"straight\"\n            centered=\"vertically\"\n          />}\n          <Error error={error} />\n        </Container>\n      </Connectivity>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Clickable from './Clickable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaste } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default class CopyClipboardButton extends Component {\n  copyToClipboard = () => {\n    const { value } = this.props\n    if (!value) { return }\n    navigator.clipboard.writeText(value).then(function () {\n      console.log('Async: Copying to clipboard was successful!');\n      alert('copied: '+value)\n    }, function (err) {\n      console.error('Async: Could not copy text: ', err);\n      alert('failed to copy')\n    });\n  }\n  render() {\n    return (\n      <Clickable onClick={this.copyToClipboard} style={{ width: '1.5rem', height: '1.5rem'}}>\n        <FontAwesomeIcon icon={faPaste} style={{ width: '100%', height: '100%', color: '#666' }} />\n      </Clickable>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport CopyClipboardButton from './CopyClipboardButton'\n\nexport default class CommandLineSnippet extends Component {\n  render() {\n    const { command } = this.props\n    return (\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        flex: 1,\n        padding: 5\n      }}>\n        <pre style={{\n          backgroundColor: '#313131',\n          flex: 1,\n          color: 'white',\n          padding: 10,\n          paddingTop: 15,\n          marginRight: 10,\n          borderRadius: 5,\n          fontSize: '1.2rem',\n          overflow: 'scroll'\n        }}>$ {command}</pre> <CopyClipboardButton value={command} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class GetGridOverlay extends Component {\n  render() {\n    return (\n      <div style={{\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#9a9a9a55',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        backdropFilter: 'blur(6px)',\n      }}>\n        <h2>Run Grid</h2>\n        <span style={{\n          margin: 10,\n          padding: 10,\n          fontSize: '1.2rem',\n          letterSpacing: 2,\n          backgroundColor: 'black',\n          color: 'white',\n          font: 'Consolas'\n        }}>\n          npx grid-core server\n        </span>\n        <span>advanced client management becomes available through Ethereum Grid</span>\n      </div>\n    )\n  }\n}\n","import ethpkg, { Registry, IPackage, IRelease } from 'ethpkg'\n\nconst fetchJson = async (_url) => {\n  const data = await fetch(_url)\n  return data.json()\n}\n\nconst request = async (url, data) => {\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    body: JSON.stringify(data)\n  })\n  return response.json();\n}\n\nlet i = 0\n\nclass Grid {\n  constructor() {\n    \n  }\n  async getVersionList() {\n    let versionList = await fetchJson('http://localhost:4743/clients')\n    return versionList\n  }\n  async searchWorkflows(query) {\n    /*\n    let workflows = await request('http://localhost:4743/rpc', {\n      method: 'searchWorkflows',\n      params: [query],\n      id: i++\n    })\n    return workflows\n    */\n   const registry = new Registry('0x59054E7c69D42FCcA9CC2f7Fd0BE52db00152669/workflows')\n   const projects = await registry.queryProjects(query)\n   return projects\n  }\n  async runWorkflow(workflowId) {\n    await request('http://localhost:4743/rpc', {\n      method: 'runWorkflow',\n      params: [workflowId],\n      id: i++\n    })\n  }\n  async getJobs() {\n    let jobs = await request('http://localhost:4743/rpc', {\n      method: 'getJobs',\n      params: [],\n      id: i++\n    })\n    return jobs\n  }\n}\n\nexport default new Grid()","import React, { Component } from 'react'\nimport Error from '../../../widgets/Error'\nimport Button from '../../../widgets/Button'\nimport Select from '../../../widgets/Select'\nimport ListItem from '../../../widgets/ListItem'\nimport GridAPI from './GridAPI'\n\nclass VersionListItem extends Component {\n  downloadClient = () => {\n\n  }\n  render() {\n    const { release } = this.props\n    const {\n      name,\n      fileName,\n      version,\n      updated_ts,\n      size,\n      platform\n    } = release\n    return (\n      <ListItem>\n        <span>{release.name}</span>\n        <Button label=\"download\" onClick={this.downloadClient}/>\n      </ListItem>\n    )\n  }\n}\n\n\nexport default class VersionList extends Component {\n  state = {\n    versionList: [],\n    isLoading: false,\n    error: undefined\n  }\n  componentDidMount = async () => {\n    try {\n      this.setState({\n        isLoading: true\n      })\n      let versionList = await GridAPI.getVersionList()\n      versionList = versionList.map(v => v.name)\n      this.setState({\n        versionList: [...versionList]\n      })\n    } catch (error) {\n      this.setState({ error })\n    }\n    this.setState({\n      isLoading: false\n    })\n  }\n  render() {\n    const { versionList, error, isLoading } = this.state\n    const selectOptions = versionList.map(v => ({\n      label: v,\n      value: v\n    }))\n    const selectedOption = selectOptions\n    return (\n      <div>\n        <Select \n          value={selectedOption}\n          options={selectOptions} \n        />\n        {error && <Error error={error} />}\n      </div>\n    )\n  }\n}\n","const CLIENT_SETTINGS = [\n  {\n    id: 'network',\n    default: 'main',\n    label: 'Network',\n    options: [\n      { value: 'main', label: 'Main', flag: '' },\n      { value: 'ropsten', label: 'Ropsten (testnet)', flag: '--testnet' },\n      { value: 'rinkeby', label: 'Rinkeby (testnet)', flag: '--rinkeby' },\n      { value: 'goerli', label: 'Görli (testnet)', flag: '--goerli' },\n      { value: 'dev', label: 'Local (dev mode)', flag: '--dev' }\n    ]\n  },\n  {\n    id: 'syncMode',\n    default: 'light',\n    label: 'Sync Mode',\n    options: [\n      { value: 'fast', label: 'Fast' },\n      { value: 'full', label: 'Full' },\n      { value: 'light', label: 'Light' }\n    ],\n    flag: '--syncmode %s'\n  },\n  {\n    id: 'dataDir',\n    default: '',\n    label: 'Data Directory',\n    flag: '--datadir %s',\n    type: 'directory',\n    ignoreIfEmpty: true\n  },\n  {\n    id: 'keystoreDir',\n    default: '',\n    label: 'Keystore Directory',\n    flag: '--keystore %s',\n    type: 'directory',\n    ignoreIfEmpty: true\n  },\n  {\n    id: 'console',\n    label: 'Enable Console',\n    default: 'false',\n    options: [\n      { value: 'true', flag: 'console', label: 'Yes' },\n      { value: 'false', flag: '', label: 'No' }\n    ]\n  },\n  {\n    id: 'rpc',\n    default: 'none',\n    label: 'HTTP RPC API',\n    options: [\n      { value: 'none', label: 'Disabled', flag: '' },\n      {\n        value: 'metamask',\n        label: 'Enabled for MetaMask',\n        flag:\n          '--rpc --rpccorsdomain moz-extension://e582a415-cf54-468e-9b4b-f32b576f7bf7,chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn'\n      },\n      {\n        value: 'on',\n        label: 'Enabled for All Origins (*)',\n        flag: '--rpc --rpccorsdomain=*'\n      }\n    ]\n  },\n  {\n    id: 'ws',\n    default: 'none',\n    label: 'WebSockets API',\n    options: [\n      { value: 'none', label: 'Disabled', flag: '' },\n      {\n        value: 'on',\n        label: 'Enabled for All Origins (*)',\n        flag: '--ws --wsorigins=*'\n      }\n    ]\n  },\n  {\n    id: 'port',\n    label: 'P2P Port',\n    flag: '--port %s',\n    default: '30303'\n  },\n\n  {\n    id: 'graphql',\n    label: 'Enable GraphQL Server',\n    default: 'false',\n    options: [\n      {\n        value: 'true',\n        flag: '--graphql --graphql.corsdomain=*',\n        label: 'Yes, All Origins (*) (Requires Geth >=v1.9.0)'\n      },\n      { value: 'false', flag: '', label: 'No' }\n    ]\n  },\n  {\n    id: 'signer',\n    label: 'Signer',\n    default: 'none',\n    options: [\n      { value: 'none', flag: '', label: 'Internal' },\n      {\n        value: 'clef',\n        flag: '--signer http://localhost:8550',\n        label: 'Clef (default: localhost:8550)'\n      }\n    ]\n  },\n  {\n    id: 'usb',\n    label: 'Enable USB (hardware wallets)',\n    default: 'false',\n    options: [\n      { value: 'false', flag: '--nousb', label: 'No' },\n      { value: 'true', flag: '', label: 'Yes' }\n    ]\n  },\n  {\n    id: 'verbosity',\n    label: 'Verbosity',\n    default: 3,\n    options: [\n      { value: 0, label: '0 = Silent', flag: '--loglevel=0' },\n      { value: 1, label: '1 = Error', flag: '--loglevel=1' },\n      { value: 2, label: '2 = Warn', flag: '--loglevel=2' },\n      { value: 3, label: '3 = Info', flag: '' }, // Geth's default\n      { value: 4, label: '4 = Debug', flag: '--loglevel=4' },\n      { value: 5, label: '5 = Detail', flag: '--loglevel=5' }\n    ]\n  }\n]\n\nexport default CLIENT_SETTINGS","import React, { Component } from 'react'\nimport Button from '../../../widgets/Button'\n\nexport default class Controls extends Component {\n  startClient = async () => {\n    console.log('start client')\n  }\n  stopClient = async () => {\n    console.log('stop client')\n  }\n  downloadClient = async () => {\n    console.log('download client')\n  }\n  render() {\n    const { style } = this.props\n    return (\n      <div style={{\n        ...style\n      }}>\n        <Button label=\"download\" onClick={this.downloadClient}/>\n        <Button label=\"start\" onClick={this.startClient}/>\n        <Button label=\"stop\" onClick={this.stopClient}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Form from '../../../widgets/Form'\nimport TextField from '../../../widgets/TextField'\nimport CLIENT_SETTINGS from './ClientSettings'\nimport Select from '../../../widgets/Select'\n\nconst settingOptionsToSelectOptions = (settingOptions) => {\n  // { value: 'true', flag: 'console', label: 'Yes' },\n  const options = settingOptions.map(o => {\n    const { value, flag, label } = o\n    return { label, value }\n  })\n  return options\n}\n\nexport default class ClientConfiguration extends Component {\n  handleChange = () => {\n\n  }\n  renderField(setting) {\n    let { id, type, label, default: defaultValue,  disabled = false } = setting\n    if (setting.options) {\n      type = 'select'\n    }\n    switch (type) {\n      case 'select': {\n        const options = settingOptionsToSelectOptions(setting.options)\n        const defaultOption = options.find(o => o.value === defaultValue)\n        return (\n          <Select\n            key={id}\n            data-test-id={`input-select-${id}`}\n            label={label}\n            value={defaultOption}\n            options={options}\n            disabled={disabled}\n            onChange={value => this.handleChange(id, value)}\n          />\n        )\n      }\n      default:\n        return (\n          <TextField\n            key={id}\n            data-test-id={`input-text-${id}`}\n            variant=\"outlined\"\n            label={label}\n            value={defaultValue}\n            disabled={disabled}\n            onChange={event => this.handleChange(id, event.target.value)}\n            fullWidth\n          />\n        )\n    }\n  }\n  render() {\n\n    return (\n      <div style={{\n        flex: 1,\n      }}>\n        <Form style={{\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        }}>\n          {CLIENT_SETTINGS.map(setting => this.renderField(setting))}\n        </Form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport GetGridOverlay from './GetGridOverlay'\nimport VersionList from './VersionList'\nimport Controls from './Controls'\nimport ClientConfiguration from './ClientConfiguration'\nimport CommandLineSnippet from '../../../widgets/CommandLineSnippet'\nimport { Row } from '../../../widgets/Row'\n\nclass ClientItem extends Component {\n  render() {\n    const { client } = this.props\n    const selected = client.name === 'Ganache'\n    return (\n      <div style={{\n        width: 100,\n        height: 100,\n        padding: 5,\n        margin: 5,\n        borderWidth: selected ? 2 : 1,\n        borderStyle: 'solid',\n        borderColor: selected ? '#08a79c' : 'black',\n        borderRadius: 10,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <img\n          style={{\n            maxWidth: '100%',\n            height: 'auto',\n            maxHeight: '100%'\n          }}\n          src={client.logo} />\n      </div>\n    )\n  }\n}\n\nexport default class Grid extends Component {\n  renderMainPanel = () => {\n    const clients = [\n      { name: 'Ganache', logo: 'https://raw.githubusercontent.com/trufflesuite/ganache/develop/static/icons/png/128x128.png' },\n      { name: 'Geth', logo: 'https://geth.ethereum.org/static/images/mascot.png' },\n      { name: 'Besu', logo: 'https://www.hyperledger.org/wp-content/uploads/2019/08/Hyperledger_Besu_color.png' },\n      { name: 'Nethermind', logo: 'https://c.gitcoin.co/grants/c5141dbcabe3cca0d61c76d9e7e3b6a7/Nethermind_logo_RGB.png' },\n      { name: 'Open Ethereum', logo: 'https://www.parity.io/assets/img/logos/logo-parity-dark.png?v=668139a6b7' }\n    ]\n    return (\n      <div style={{\n        maxHeight: '100%'\n      }}>\n        <Row style={{ justifyContent: 'normal' }}>\n          {clients.map(client => <ClientItem key={client.name} client={client} />)}\n        </Row>\n        <h2>Client version</h2>\n        <VersionList />\n        <h2>Client config</h2>\n        <ClientConfiguration />\n        <h2>Flags preview</h2>\n        <CommandLineSnippet command=\"xyz\" />\n        {/*\n        <h2>Client controls</h2>\n        <Controls style={{\n          marginTop: 20\n        }} />\n         */}\n        {\n          /* TODO  Disk Info */\n        }\n      </div>\n    )\n  }\n  render() {\n    const gridRunning = true\n    return (\n      <div style={{\n        position: 'relative',\n      }}>\n        {gridRunning\n          ? this.renderMainPanel()\n          : <GetGridOverlay />\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport CommandLineSnippet from '../../../widgets/CommandLineSnippet'\nimport { withGlobalState } from '../../../Context'\nimport Grid from '../grid/Grid'\n\nclass Client extends Component {\n  state = {}\n  componentDidMount = async () => {\n    const { provider } = this.props\n    try {\n      const clientInfo = await provider.send('web3_clientVersion')\n      this.setState({\n        clientInfo\n      })\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n  renderClientInfo = () => {\n    const { provider } = this.props\n    const { clientInfo } = this.state\n    return (\n      <div style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      }}>\n        <h2>Client info:</h2>\n        <pre>\n          {JSON.stringify(clientInfo, null, 2)}\n        </pre>\n        <Grid />\n        {/* <SyncState provider={provider} /> */}\n      </div>\n    )\n  }\n  renderHowTo = () => {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { selectedProvider } = globalState\n    const command = './geth --dev --rpc --rpccorsdomain=\"*\" --rpcapi \"eth,web3,personal,net,debug\" --allow-insecure-unlock'\n    return (\n      <div style={{\n        height: 200,\n        border: '2px solid #ff9245',\n        borderRadius: 20,\n        padding: 30,\n        fontSize: '1.2rem'\n      }}>\n        <div>It seems your client is not running or your connection has problems.</div>\n        <div>Try selecting a different provider or restart your client.</div>\n        <br />\n        <div>Client start command:</div>\n        {selectedProvider === 'Ganache'? <span>Download and run Ganache: https://github.com/trufflesuite/ganache/releases/latest</span> : <CommandLineSnippet command={command} /> }\n      </div>\n    )\n  }\n  render() {\n    const { global } = this.props\n    const { state: globalState } = global\n    const { isConnected } = globalState\n    return (\n      <Container>\n        {isConnected\n          ? this.renderClientInfo()\n          : this.renderHowTo()\n        }\n      </Container>\n    )\n  }\n}\n\nexport default withGlobalState(Client)","import React, { Component } from 'react'\nimport { Row } from '../../../widgets/Row'\nimport Button from '../../../widgets/Button'\nimport DateField from '../../../widgets/DateField'\nimport Address from '../../../widgets/Address'\nimport { Column } from '../../../widgets/Column'\nimport ListItem from '../../../widgets/ListItem'\nimport Pill from '../../../widgets/Pill'\n\nexport default class WorkflowListItem extends Component {\n  render() {\n    const { workflow } = this.props\n    const {\n      projectId,\n      version,\n      // created_at,\n      updated_at,\n      displayName,\n      shortDescription,\n      publisher\n    } = workflow\n    const { name: publisherName, address } = publisher\n    // TODO support tags\n    const hasTags = false\n    return (\n      <ListItem to={`/workflows/${projectId}`}>\n        <Column>\n          <Row>\n            <Button\n              icon=\"Play\"\n              iconColor=\"#08a79c\"\n              label=\"\"\n              onClick={() => this.props.onRunWorkflow(workflow)}\n            />\n            <Column style={{ marginLeft: 5}}>\n              <Row style={{ marginBottom: 5 }}>\n                <div style={{\n                  margin: 5,\n                  display: 'flex',\n                  flex: 1,\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                }}>\n                  <span style={{ fontWeight: 'bold' }}>{displayName}</span>\n                  <span style={{ marginTop: -5, marginLeft: 10 }}>v{version}</span>\n                  <DateField ts={updated_at / 1000} relative style={{ marginLeft: 'auto' }} />\n                </div>\n                <div style={{ display: 'none', flexDirection: 'column' }}>\n                  <div style={{ alignSelf: 'flex-end' }}>{publisherName}</div>\n                  <Address address={address} />\n                </div>\n              </Row>\n              <Row>\n                <span style={{ marginLeft: 5, marginTop: -5 }}>{shortDescription}</span>\n              </Row>\n            </Column>\n          </Row>\n          {hasTags &&\n            <Row style={{\n              paddingLeft: 52\n            }}>\n              <Pill>Beginner</Pill>\n            </Row>\n          }\n        </Column>\n\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport ListItem from '../../../widgets/ListItem'\nimport Button from '../../../widgets/Button'\nimport Spinner from '../../../widgets/Spinner'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { Column } from '../../../widgets/Column'\nimport { Row } from '../../../widgets/Row'\n\nexport default class JobListItem extends Component {\n  render() {\n    const { job } = this.props\n    const {\n      id, // job id\n      workflowId, // \n      name,\n      displayName,\n      version,\n      isInstalled,\n      state,\n      started_at,\n      finished_at\n    } = job\n    const isRunning = !job.finished_at\n\n    return (\n      <ListItem \n      to={`/workflows/jobs/${id.replace('jobId:','')}`}\n      style={{\n        alignItems: 'center'\n      }}>\n        <div style={{\n          width: 20,\n          height: 20,\n          padding: 5\n        }}>\n          {isRunning\n            ? <Spinner />\n            : <FontAwesomeIcon icon={faCheck} style={{ color: '#08a79c', width: '100%', height: '100%' }} />\n          }\n        </div>\n        <Column>\n          <Row style={{\n            justifyContent: 'normal',\n            margin: 10\n          }}>\n            <div style={{\n              margin: 5,\n              display: 'flex',\n              alignItems: 'center'\n            }}>\n              <span style={{ fontWeight: 'bold' }}>{displayName}</span>\n              <span style={{ marginTop: -5, marginLeft: 10 }}>v{version}</span>\n            </div>\n          </Row>\n          <div style={{\n            marginLeft: 15\n          }}>\n            {\n              isRunning\n                ? <span>started {moment(job.started_at).from()}</span>\n                : <span>finished {moment(job.finished_at).from()}</span>\n            }\n          </div>\n        </Column>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Container from '../../../widgets/Container'\nimport GridAPI from '../grid/GridAPI'\n\nimport Tabs from '../../../widgets/Tabs'\nimport Tab from '../../../widgets/Tab'\nimport WorkflowListItem from './WorkflowListItem'\nimport JobListItem from './JobListItem'\nimport List from '../../../widgets/List'\n\nexport default class Workflows extends Component {\n  handleRunWorkflow = (workflow) => {\n    const isConnected = false\n    if (isConnected) {\n      GridAPI.runWorkflow(workflow.releaseId)\n    } else {\n      alert('This functionality requires Grid')\n    }\n  }\n  renderGridRequired = () => {\n    return (\n      <div style={{\n        height: 200,\n        border: '2px solid #ff9245',\n        borderRadius: 20,\n        padding: 30,\n        fontSize: '1.2rem'\n      }}>\n        <div>Workflows require Grid to be running</div>\n        <div>Check back another day to see instructions for a setup.</div>\n      </div>\n    )\n  }\n  renderTabs = () => {\n    return (\n      <Tabs style={{\n        fontSize: '1.25rem',\n        padding: 7,\n        marginBottom: 10 \n      }}>\n        <Tab label=\"Workflows\" key=\"1\">\n          <List\n            header={false}\n            loadItems={() => GridAPI.searchWorkflows()}\n            itemName=\"workflows\"\n            renderItem={workflow => <WorkflowListItem key={workflow.name} workflow={workflow} onRunWorkflow={this.handleRunWorkflow} />}\n          />\n        </Tab>\n        <Tab label=\"Jobs\" key=\"2\">\n          <List\n            loadItems={() => GridAPI.getJobs()}\n            itemName=\"jobs\"\n            polling={5 * 1000}\n            renderItem={job => <JobListItem key={job.id} job={job} />}\n          />\n        </Tab>\n      </Tabs>\n    )\n  }\n  render() {\n    const inNano = true\n    const isGridConnected = true\n    return (\n      <Container\n        isCard={inNano ? false : true}\n        style={{\n          padding: inNano ? 0 : 10\n        }}\n      >\n        {isGridConnected\n        ? this.renderTabs()\n        : this.renderGridRequired()\n        }\n      </Container>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Container from '../../../widgets/Container'\nimport { withRouter } from 'react-router-dom'\n\nclass WorkflowDetails extends Component {\n  state = {\n    workflowId: ''\n  }\n  componentDidMount = () => {\n    this.setState({\n      workflowId: this.getWorkflowId()\n    })\n  }\n  getWorkflowId() {\n    const { match } = this.props\n    const { params } = match\n    const { workflowId } = params\n    return workflowId\n  }\n  render() {\n    const { workflowId } = this.state\n    return (\n      <Container\n        style={{\n          borderRadius: 0,\n          maxHeight: '100%',\n          overflowY: 'hidden'\n        }}\n        header={() => (<Fragment>Workflow details: \"{workflowId}\"</Fragment>)}\n        headerStyle={{\n          margin: 10\n        }}\n      >\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(WorkflowDetails)","import React, { Component, Fragment } from 'react'\nimport Container from '../../../widgets/Container'\nimport Tabs from '../../../widgets/Tabs'\nimport Tab from '../../../widgets/Tab'\nimport GridAPI from '../grid/GridAPI'\nimport { withRouter } from 'react-router-dom'\n\n\nclass JobDetails extends Component {\n  state = {\n    jobId: ''\n  }\n  componentDidMount = () => {\n    const jobId = this.getJobId()\n    this.setState({\n      jobId\n    })\n    this.fetchJobDetails(jobId)\n  }\n  getJobId() {\n    const { match } = this.props\n    const { params } = match\n    const { jobId } = params\n    return jobId\n  }\n  fetchJobDetails = async (jobId) => {\n    const jobs = await GridAPI.getJobs()\n    const job = jobs.find(job => job.id.includes(jobId))\n    this.setState({\n      job\n    })\n  }\n  renderJobDetails(job) {\n    const {\n      id, // job id\n      workflowId, // \n      name,\n      displayName,\n      version,\n      isInstalled,\n      state,\n      started_at,\n      finished_at\n    } = job\n    return (\n      <div style={{\n        border: '1px solid black',\n        padding: 50,\n        display: 'flex',\n        flexDirection: 'column'\n      }}>\n        <span>Name: {name}</span>\n        <span>Version: {version}</span>\n      </div>\n    )\n  }\n  render() {\n    const { jobId, job } = this.state\n    return (\n      <Container\n        style={{\n          borderRadius: 0,\n          maxHeight: '100%',\n          overflowY: 'hidden'\n        }}\n        header={() => (<Fragment>Job details: {jobId}</Fragment>)}\n        headerStyle={{\n          margin: 10\n        }}\n      >\n        {job && this.renderJobDetails(job)}\n        <h3>Processes</h3>\n        <Tabs>\n          <Tab label=\"Process 1\">\n            <span>hello world</span>\n          </Tab>\n          <Tab label=\"Process 2\">\n            <span>hello world2</span>\n          </Tab>\n        </Tabs>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(JobDetails)\n\n","\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nexport default ({ component: C, props: cProps, ...rest }) => <Route {...rest} render={props => <C {...props} {...cProps} />} />;\n","import React from 'react';\n\nimport {\n  Switch,\n} from \"react-router-dom\"\n\nimport BlockList from './components/main/blocks/BlockList';\nimport TransactionList from './components/main/transactions/TransactionList';\nimport AccountsList from './components/main/accounts/AccountsList';\nimport Contracts from './components/main/contracts/Contracts';\nimport CreateContractView from './components/main/contracts/CreateContractView';\nimport AccountDetails from './components/main/accounts/AccountDetails';\nimport ContractDetails from './components/main/contracts/ContractDetails';\nimport SendTransaction from './components/main/transactions/SendTransaction';\nimport BlockDetails from './components/main/blocks/BlockDetails';\nimport TransactionDetails from './components/main/transactions/TransactionDetails';\nimport ScriptList from './components/main/scripts/ScriptList';\nimport Settings from './components/main/settings/Settings';\nimport AddressList from './components/main/addresses/AddressList';\nimport Tools from './components/main/tools/Tools';\nimport Network from './components/main/network/Network';\nimport Client from './components/main/client/Client';\nimport Workflows from './components/main/workflows/Workflows';\nimport WorkflowDetails from './components/main/workflows/WorkflowDetails';\nimport JobDetails from './components/main/workflows/JobDetails';\nimport AppliedRoute from './AppliedRoute';\n\nexport default ({ provider, currentBlock }) =>\n  <Switch>\n    <AppliedRoute path=\"/accounts/:address\" component={AccountDetails} props={{ provider }}  />\n    <AppliedRoute path=\"/\" exact component={AccountsList} />\n    <AppliedRoute path=\"/accounts\" component={AccountsList} />\n    <AppliedRoute path=\"/addresses\" component={AddressList} />\n    <AppliedRoute path=\"/blocks/:blockNumber\" component={BlockDetails} props={{ provider }} />\n    <AppliedRoute path=\"/blocks\" component={BlockList} props={{ start: 0, end: currentBlock }} />\n    <AppliedRoute path=\"/transactions/new/:to\" component={SendTransaction} key={provider ? provider.createdAt : 'not_set'} props={{ provider }} />\n    <AppliedRoute path=\"/transactions/:txHash\" component={TransactionDetails}  />\n    <AppliedRoute path=\"/transactions\" component={TransactionList} props={{ blockNumber: currentBlock }} />\n    <AppliedRoute path=\"/contracts/new\" component={CreateContractView} props={{ provider }} />\n    <AppliedRoute path=\"/contracts/:address\" component={ContractDetails} key={provider ? provider.createdAt : 'not_set'}  />\n    <AppliedRoute path=\"/contracts\" component={Contracts} />\n    <AppliedRoute path=\"/network\" component={Network} props={{ provider }} />\n    <AppliedRoute path=\"/client\" component={Client} key={provider ? provider.createdAt : 'not_set'} props={{ provider }} />\n    <AppliedRoute path=\"/workflows/jobs/:jobId\" component={JobDetails} props={{ provider }} />\n    <AppliedRoute path=\"/workflows/:workflowId\" component={WorkflowDetails} props={{ provider }} />\n    <AppliedRoute path=\"/workflows\" component={Workflows} props={{ provider }} />\n    <AppliedRoute path=\"/scripts\" component={ScriptList} props={{ provider }} />\n    {/* <AppliedRoute path=\"/tools\" component={Tools} props={{ provider }} /> */ }\n    <AppliedRoute path=\"/settings\" component={Settings} props={{ provider }} />\n  </Switch>\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ethers, providers } from 'ethers';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\"\nimport TopNavigation from './components/navigation/TopNavigation';\nimport StatusBar from './components/status/StatusBar';\nimport Error from './widgets/Error';\nimport { Row } from './widgets/Row';\nimport { withNewContext, withGlobalState } from './Context'\nimport { useTheme } from './Theme';\nimport Routes from './Routes';\n\nconst createProvider = (selectedProvider, providers) => {\n  const providerConfig = providers.find(p => p.name === selectedProvider)\n  const { url, name } = providerConfig\n  let newProvider\n  if (url === 'web3') {\n    newProvider = new ethers.providers.Web3Provider(window.web3.currentProvider)\n  } else {\n    newProvider = new ethers.providers.JsonRpcProvider(`http://${url}`)\n  }\n  // we need a way to detect new instances of provider\n  newProvider.createdAt = Date.now()\n  return newProvider\n}\n\nclass App extends Component {\n  state = {\n    currentBlock: 0,\n    interval: undefined\n  }\n  componentDidMount = async () => {\n    this.tryConnect()\n  }\n  tryConnect = () => {\n    let { interval } = this.state\n    if (interval) {\n      return\n    }\n    const { global: _global } = this.props\n    const connectionInterval = _global.state.connectionInterval || 2000\n\n    const checkConnection = async () => {\n      const { global } = this.props\n      const { state: globalState } = global\n      // some values are cached on old provider sow e should not re-use it when the connection comes back\n      // such as the createdAt flag & potentially calls to getNetwork()\n      // if we want to detect network changes of re-started clients we have to reset completely\n      let { /*provider,*/ isConnected, selectedProvider, providers, } = globalState\n      let provider = createProvider(selectedProvider, providers)\n      let block\n      try {\n        block = await provider.getBlockNumber()\n        // network cannot be used to check - seems to get cached\n        // const network = await provider.getNetwork()\n        if (block !== undefined && !isConnected) {\n          global.setState({ isConnected: true, provider: provider })\n        }\n      } catch (error) {\n        // console.log('error', error)\n        if (isConnected) {\n          global.setState({ isConnected: false })\n        }\n      }\n      // only update if changed?\n      // FIXME this causes many re-renders on all components\n      if (block && this.state.currentBlock !== block) {\n        this.setState({\n          currentBlock: block || 0\n        })\n      }\n    }\n\n    // run once immediately\n    checkConnection()\n    interval = setInterval(checkConnection, connectionInterval)\n    this.setState({\n      interval,\n    })\n  }\n  render() {\n    const { state: globalState } = this.props.global\n    const theme = useTheme(this.props.global)\n    const navItems = globalState.navItems.filter(item => !item.exclude)\n    const { currentBlock, error } = this.state\n    const { provider } = globalState\n\n    // TODO allows workflow to be part of url so that a link to a contract e.g. includes the infrastructure info\n    return (\n      <Router>\n        <div className=\"App\" style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100vh',\n          backgroundColor: theme.backgroundColor,\n          fontFamily: `'Roboto', sans-serif`\n        }} >\n          <Row style={{ padding: 3, fontSize: '1.0rem' }}>\n            <span style={{ color: '#939393' }}>Ethereum GUI v1.0.0</span>\n            <span style={{ color: '#939393', marginRight: 10 }}>philipplgh.eth</span>\n          </Row>\n          <TopNavigation items={navItems} />\n          <StatusBar provider={provider} currentBlock={currentBlock} />\n          {error\n            ? <Error error={error} />\n            : (\n              <main>\n                <Routes provider={provider} currentBlock={currentBlock} />\n              </main>\n            )\n          }\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withNewContext(withGlobalState(App))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nexport default class Resizable extends Component {\n  state = {\n    width: 0,\n    height: 0\n  }\n  componentDidMount = () => {\n    window.addEventListener('resize', this.handleResize)\n    this.getDimensions()\n  }\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.handleResize)\n  }\n  getDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    this.setState({\n      width,\n      height\n    })\n  }\n  handleResize = () => {\n    this.getDimensions()\n  }\n  render() {\n    const { width, height } = this.state\n    return (\n      <Fragment>\n        { this.props.children }\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Workflows from '../main/workflows/Workflows'\nimport { withGlobalState, withNewContext } from '../../Context'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nclass Nano extends Component {\n  render() {\n    return (\n      <Router>\n        <div style={{\n          width: 320,\n          height: 420,\n          backgroundColor: 'white',\n          fontSize: '10px'\n        }}>\n          <Workflows />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default withNewContext(withGlobalState(Nano))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Resizable from './widgets/Resizable'\nimport Nano from './components/nano/Nano';\n\nfunction Responsive({ width = window.innerWidth }) {\n  return (\n    (width <= 320)\n    ? <Nano />\n    : <App />\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Resizable>\n      <Responsive />\n    </Resizable>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}